Gadgets information
============================================================
0x000000000043c344 : adc ah, cl ; add al, bpl ; ret
0x000000000043bd3d : adc ah, cl ; add al, bpl ; retf -0x3a5
0x000000000041cecf : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041cf39 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b2f80 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000004b2fb8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000004b2f68 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x0000000000460341 : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000417588 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000423555 : adc al, 0x13 ; jmp rdx
0x0000000000421b45 : adc al, 0x16 ; sub eax, edx ; ret
0x0000000000484548 : adc al, 0x1a ; call 0x41fa39
0x00000000004324aa : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x000000000043199d : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000048431a : adc al, 0x24 ; mov edi, 1 ; call rax
0x00000000004671a7 : adc al, 0x31 ; fisttp dword ptr [rax - 0x7d] ; ret 0x4810
0x000000000040f46d : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042e710 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000004ad82c : adc al, 0x73 ; add byte ptr [rax], al ; xor byte ptr [rax], bl ; stc ; call qword ptr [rcx]
0x0000000000413972 : adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000460498 : adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000045abbe : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000041e360 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041ca8e : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000423551 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000414da7 : adc al, 0xa ; jmp r10
0x0000000000421cb3 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000431a78 : adc al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000431ad8 : adc al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000431b38 : adc al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000431cc8 : adc al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004333d8 : adc al, 0xb8 ; or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004b2e2c : adc al, 0xc9 ; add byte ptr [rax], al ; jo 0x4b2e4e ; std ; jmp rsp
0x00000000004a5f1c : adc al, 0xca ; std ; dec dword ptr [rax] ; retf -3
0x0000000000416281 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000404aca : adc al, 0xe9 ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048469c : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a5839 : adc al, 0xfd ; call qword ptr [rax - 0x1f0002ea]
0x0000000000470610 : adc al, 4 ; add eax, dword ptr [rax] ; jmp 0x4705dd
0x0000000000472e5f : adc al, 9 ; ret 0xa074
0x0000000000435361 : adc al, bl ; ret 0x48
0x000000000041d077 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d0e1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004765ee : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044ac83 : adc al, byte ptr [rbx - 0x10eb43] ; call qword ptr [rax]
0x0000000000441604 : adc al, byte ptr [rbx - 0x51f43] ; call qword ptr [rax]
0x0000000000479fbf : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000435360 : adc al, r11b ; ret 0x48
0x0000000000400562 : adc bh, bh ; retf
0x0000000000474b6a : adc bh, byte ptr [rbp - 7] ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000041a515 : adc bl, ch ; call 0xffffffffc4122e6a
0x0000000000417025 : adc bl, ch ; call 0xffffffffc439f97a
0x0000000000473402 : adc bl, ch ; jno 0x473458 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000419e95 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000042e046 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000042e0b7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000042e017 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000042e045 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000468510 : adc byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x000000000040afaa : adc byte ptr [r11 + 0xa], r14b ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000045fbf8 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000040bb2e : adc byte ptr [r8 - 0x77], cl ; ret 0x29e9
0x000000000046609b : adc byte ptr [r8 - 0x77], r9b ; ret 0x8be8
0x0000000000466590 : adc byte ptr [r8 - 0x77], r9b ; ret 0x96e8
0x000000000040f0d8 : adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x0000000000466562 : adc byte ptr [r9 + 3], cl ; add al, 0x24 ; call rax
0x000000000045d362 : adc byte ptr [r9], r13b ; ret 0x428d
0x000000000042de6a : adc byte ptr [rax + 0x29], cl ; retf -0x72b4
0x00000000004108ac : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000040e4b2 : adc byte ptr [rax + 0x39], cl ; retf 0x1e73
0x000000000042e467 : adc byte ptr [rax + 0xf], cl ; mov esp, 0x1d8d4cd2 ; std ; retf 5
0x000000000040aab8 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000473a4e : adc byte ptr [rax + 1], cl ; ret
0x000000000045fbf9 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000048a854 : adc byte ptr [rax - 0x560f0007], ch ; stc ; call rax
0x0000000000460495 : adc byte ptr [rax - 0x73], cl ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000041faa4 : adc byte ptr [rax - 0x73], cl ; jg 0x41fac1 ; jne 0x41fa98 ; ret
0x0000000000460494 : adc byte ptr [rax - 0x73], r9b ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000459e03 : adc byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000432778 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000484e3a : adc byte ptr [rax - 0x75], cl ; jne 0x484e45 ; call r14
0x000000000045a6ed : adc byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf -0x7df1
0x000000000047eaa1 : adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000041feba : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004327eb : adc byte ptr [rax - 0x77], cl ; add byte ptr [r8 - 0x77], r9b ; ret
0x0000000000405943 : adc byte ptr [rax - 0x77], cl ; enter 0x5d5b, 0x41 ; pop rsp ; ret
0x00000000004326d6 : adc byte ptr [rax - 0x77], cl ; jo 0x4326e8 ; ret
0x000000000045a0a7 : adc byte ptr [rax - 0x77], cl ; jo 0x45a0c5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045a067 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000043270b : adc byte ptr [rax - 0x77], cl ; push rsi ; or byte ptr [rax - 0x77], cl ; jo 0x43272d ; ret
0x000000000045a06b : adc byte ptr [rax - 0x77], cl ; ret
0x000000000040bb2f : adc byte ptr [rax - 0x77], cl ; ret 0x29e9
0x000000000046ce68 : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046609c : adc byte ptr [rax - 0x77], cl ; ret 0x8be8
0x00000000004115fa : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000466591 : adc byte ptr [rax - 0x77], cl ; ret 0x96e8
0x0000000000481eec : adc byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000410d59 : adc byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000042adb7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042adf3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401197 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000040ea73 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041386b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000465b6f : adc byte ptr [rax - 0x7d], cl ; ret 0x4818
0x0000000000420326 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000040f0d9 : adc byte ptr [rax - 0x7d], cl ; retf 0x4d01
0x000000000040afce : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004a5808 : adc byte ptr [rax - 3], bl ; inc eax ; std ; jmp qword ptr [rax]
0x00000000004617bc : adc byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x000000000041e638 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x0000000000416470 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x000000000041cb22 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x00000000004162d0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000477c1c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6666
0x000000000041e92c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d281 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044aa2c : adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x0000000000430ca0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000417a08 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428f08 : adc byte ptr [rax], al ; add cl, ch ; retf -2
0x000000000048aef0 : adc byte ptr [rax], dh ; cli ; jmp qword ptr [rax]
0x0000000000462d9b : adc byte ptr [rbp + 0x31], al ; fisttp dword ptr [rcx - 0x77] ; ret 0xd284
0x000000000040e44c : adc byte ptr [rbp + 0x39], cl ; retf -0x7cf1
0x000000000042e4cf : adc byte ptr [rbp + rcx*4 + 0x1d], cl ; cdq ; retf 5
0x00000000004a57e8 : adc byte ptr [rbp + rdi*8 - 1], cl ; nop ; std ; call qword ptr [rax]
0x000000000041a018 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000041faa8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x000000000048a8c0 : adc byte ptr [rbp - 0x511f0007], ch ; stc ; jmp rax
0x000000000044160b : adc byte ptr [rbp - 0x6bf001bf], cl ; ret 0xd284
0x000000000045cdd9 : adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x00000000004a5800 : adc byte ptr [rbp - 3], dl ; call qword ptr [rax + 0x10fffd56]
0x0000000000433693 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x000000000041171b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405503 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004b35ab : adc byte ptr [rbx + 0xa4a0202], al ; ret
0x000000000040afab : adc byte ptr [rbx + 0xa], dh ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000040d492 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000474837 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x474851 ; ret
0x000000000048a7b4 : adc byte ptr [rbx - 0x7c1f0007], al ; stc ; jmp rax
0x00000000004a57d0 : adc byte ptr [rbx - 3], al ; call qword ptr [rax + 0x10fffd44]
0x0000000000486599 : adc byte ptr [rbx], ah ; add byte ptr [rbx + 0x48], bl ; mov dword ptr [rsi + 0x28], eax ; ret
0x000000000046f0f1 : adc byte ptr [rcx + 0x39], cl ; ret
0x000000000046c155 : adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x53c
0x000000000046c284 : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000471017 : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x000000000046e998 : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b42
0x000000000047f2a6 : adc byte ptr [rcx + 0xf], cl ; retf
0x0000000000466563 : adc byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x00000000004234b4 : adc byte ptr [rcx + rbp], bl ; add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x000000000048a81c : adc byte ptr [rcx + rdi*8 - 0x6520f01], ch ; jmp rax
0x000000000048a8d8 : adc byte ptr [rcx - 0x550f0007], ch ; stc ; call rax
0x0000000000442063 : adc byte ptr [rcx - 0x73], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000416303 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000477ca7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004a57e0 : adc byte ptr [rcx - 3], cl ; call qword ptr [rax + 0x10fffd4a]
0x00000000004310b4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045d363 : adc byte ptr [rcx], ch ; ret 0x428d
0x000000000040d495 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000048af30 : adc byte ptr [rcx], dh ; cli ; jmp qword ptr [rax]
0x000000000043d529 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000483272 : adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x00000000004a57f0 : adc byte ptr [rdi - 3], cl ; call qword ptr [rax + 0x10fffd50]
0x00000000004b0db0 : adc byte ptr [rdi - 5], dh ; call rsi
0x000000000042e923 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000047b11b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479c1f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000047ae1f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047a51f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047a81f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479f17 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047a1c4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047adc4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047b0c4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a7c4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a4c4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000479ebc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478f4d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478d6d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479745 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000478665 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479565 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048afac : adc byte ptr [rdi], dh ; cli ; jmp qword ptr [rax]
0x0000000000423a49 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004074f3 : adc byte ptr [rdx + rdx*8 + 0x394ce875], al ; ret
0x000000000048a838 : adc byte ptr [rdx - 0x540f0007], ch ; stc ; call rax
0x00000000004a57f8 : adc byte ptr [rdx - 3], dl ; call qword ptr [rax + 0x10fffd53]
0x00000000004765ed : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004229ab : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042285a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000421e55 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000422255 : adc byte ptr [rsi + 0xf], ah ; jmp 0x422229
0x00000000004222d3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x4222a7
0x0000000000422765 : adc byte ptr [rsi + 0xf], ah ; jmp 0x422739
0x00000000004227e3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x4227b7
0x0000000000422250 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42222e
0x00000000004222ce : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x4222ac
0x0000000000422760 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42273e
0x00000000004227de : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x4227bc
0x0000000000414ef5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041a99b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000048a924 : adc byte ptr [rsi - 0x4fef0007], ch ; stc ; call qword ptr [rax]
0x00000000004a57d8 : adc byte ptr [rsi - 3], al ; call qword ptr [rax + 0x10fffd47]
0x000000000047c14d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a7871 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000004a97e1 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf6ab
0x00000000004aebc9 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xfaaa
0x00000000004a76b9 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; retf -0x9fa
0x000000000047479f : adc byte ptr [rsp - 4], al ; ret
0x00000000004747e5 : adc byte ptr [rsp - 8], al ; ret
0x000000000047a1c7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004637b0 : adc cl, bl ; add r8b, bpl ; push rdi ; retf
0x000000000045fbfd : adc cl, byte ptr [rax + 1] ; ret
0x0000000000450739 : adc cl, byte ptr [rax - 0x77] ; add ch, cl ; ret 0xb
0x0000000000417015 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004ab609 : adc dh, bh ; call qword ptr [rax]
0x0000000000419f87 : adc dh, bh ; ret
0x000000000040e3a8 : adc dword ptr [rax + 0x29], ecx ; retf 0x3948
0x000000000045971d : adc dword ptr [rax - 0x77], ecx ; retf
0x0000000000469cea : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000041e92b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000041d217 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e82f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000417888 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045fd89 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000004037be : adc dword ptr [rbp - 0x77], eax ; ret 0x8341
0x0000000000404f58 : adc dword ptr [rbx], ebp ; add byte ptr [rbp + 0x74], dh ; jmp 0x404f70
0x00000000004864e5 : adc dword ptr [rbx], esp ; add byte ptr [rbx + 0x48], bl ; mov dword ptr [rsi + 0x28], eax ; ret
0x0000000000486304 : adc dword ptr [rbx], esp ; add byte ptr [rcx + rcx*4 + 0x35], cl ; retf 0x2311
0x000000000044063b : adc dword ptr [rsp + rdi*8 - 1], esp ; nop ; xor eax, eax ; ret
0x000000000041d216 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000400f66 : adc eax, 0x1002b4c ; ret
0x0000000000434997 : adc eax, 0x27f5fc ; pop rbx ; ret
0x00000000004a2784 : adc eax, 0x2f3ffae1 ; retf -0x4ae6
0x0000000000465649 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000400c58 : adc eax, 0x5b000001 ; pop rbp ; pop r12 ; ret
0x000000000041cda1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000479c19 : adc eax, 0x83490000 ; jmp 0x479c39
0x0000000000479cc0 : adc eax, 0x894d0000 ; retf
0x000000000045c37a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000452726 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000041e68e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478489 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000417708 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045c154 : adc eax, dword ptr [rdi + rcx - 0x42] ; retf 0x3945
0x00000000004110c2 : adc eax, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000479ebf : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000472ec9 : adc eax, eax ; ret
0x0000000000474616 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a2425 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046841c : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000409ead : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004378a5 : adc ebx, ebp ; ret 0x8b48
0x000000000045fe09 : adc ebx, ecx ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000046bdc0 : adc ecx, dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040d43c : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000047fb19 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000402b83 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000043ce74 : adc ecx, dword ptr [rcx + 0x29d231f3] ; ret
0x00000000004856f7 : adc ecx, dword ptr [rcx - 0x77] ; ret
0x000000000048136a : adc edi, dword ptr [rcx] ; ret 0x8175
0x00000000004812c0 : adc edi, dword ptr [rcx] ; ret 0x840f
0x00000000004ae6b5 : adc edi, edx ; jmp qword ptr [rdx]
0x00000000004a393e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000040d019 : adc esi, esi ; ret 0xf02
0x000000000047a0a2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419e94 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004354ab : adc r8b, bl ; ret 0x48
0x00000000004785f0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000474615 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000419f86 : adc sil, r15b ; ret
0x00000000004ac1fb : add ah, ah ; pop rsp ; add byte ptr [rax], al ; nop ; jb 0x4ac203 ; jmp qword ptr [rdi]
0x00000000004955bf : add ah, al ; or eax, 0xdc70000 ; add byte ptr [rax], al ; retf 0xd
0x0000000000430c2e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000430c51 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000430cef : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000430c0d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b2813 : add ah, bh ; ret 0
0x00000000004a6ff3 : add ah, bl ; or al, byte ptr [rax] ; add byte ptr [rax], cl ; hlt ; cmc ; call qword ptr [rax]
0x00000000004b30f3 : add ah, bl ; retf
0x000000000048a9e0 : add ah, bl ; stc ; call qword ptr [rax + 0x20fff9db]
0x00000000004af9fb : add ah, bl ; xchg eax, edx ; add byte ptr [rax], al ; retf
0x00000000004a3967 : add ah, byte ptr [rbp + rdi - 0x55] ; retf -0x5d02
0x00000000004ad903 : add ah, ch ; jae 0x4ad90f ; add byte ptr [rax + 0x1d], bl ; stc ; call qword ptr [rcx]
0x00000000004ace03 : add ah, ch ; push -0x5d580000 ; clc ; call qword ptr [rsi]
0x00000000004b12e3 : add ah, cl ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; clc ; std ; jmp qword ptr [rdi]
0x00000000004b27e3 : add ah, cl ; ret 0
0x00000000004ade0b : add ah, dh ; js 0x4ade17 ; add byte ptr [rax], ah ; sub cl, bh ; call qword ptr [rbx]
0x00000000004a710b : add ah, dh ; or eax, dword ptr [rax] ; add byte ptr [rax - 5], al ; cmc ; call qword ptr [rbx]
0x00000000004ad8eb : add ah, dl ; jae 0x4ad8f7 ; add byte ptr [rax + 0x1d], dl ; stc ; call qword ptr [rcx]
0x00000000004b23eb : add ah, dl ; mov esi, 0xb8900000 ; cld ; call qword ptr [rcx]
0x00000000004b2feb : add ah, dl ; retf 0
0x00000000004af8eb : add ah, dl ; xchg eax, ebx ; add byte ptr [rax], al ; rcl ah, 1 ; cli ; jmp qword ptr [rdx]
0x00000000004682b6 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000416a3d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f54f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416a61 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000484f61 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045c403 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000004319df : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000418608 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046fdb7 : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc801
0x0000000000430c7d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000046049b : add al, 0x16 ; ret
0x0000000000421b41 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000041613a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000046a538 : add al, 0x24 ; add rsp, 0x48 ; jmp r11
0x0000000000438e99 : add al, 0x24 ; call qword ptr [rbx]
0x0000000000466566 : add al, 0x24 ; call rax
0x0000000000435716 : add al, 0x24 ; call rbx
0x0000000000431af8 : add al, 0x24 ; mov eax, 0 ; syscall
0x0000000000431b58 : add al, 0x24 ; mov eax, 1 ; syscall
0x0000000000431a98 : add al, 0x24 ; mov eax, 2 ; syscall
0x0000000000431ce8 : add al, 0x24 ; mov eax, 3 ; syscall
0x00000000004333f8 : add al, 0x24 ; mov eax, 8 ; syscall
0x0000000000466066 : add al, 0x24 ; mov qword ptr [rbp - 0xb8], r11 ; call rax
0x000000000043f62a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000406bf1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000045b7de : add al, 0x31 ; ret
0x000000000045b6da : add al, 0x37 ; ret
0x000000000040cd3f : add al, 0x3a ; ret
0x00000000004a1a46 : add al, 0x3d ; retf
0x00000000004309c1 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004684b2 : add al, 0x48 ; cmp ecx, dword ptr [rsi + rdi] ; jae 0x46847a ; xor eax, eax ; ret
0x0000000000467ee5 : add al, 0x48 ; cmp edx, ecx ; jne 0x467ea1 ; mov eax, dword ptr [rdx] ; ret
0x000000000042e57b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000042da89 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000042da9b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000045a7d3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004285ba : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000045a3d4 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000042c2c9 : add al, 0x48 ; mov eax, edi ; ret
0x000000000045b3d4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000042da97 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042c2d7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000440b17 : add al, 0x74 ; retf
0x000000000043ce72 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231f3] ; ret
0x0000000000413b55 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004869dc : add al, 0x81 ; add r9, rax ; jmp r9
0x0000000000482e35 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000047d835 : add al, 0x81 ; je 0x47d815 ; ret
0x000000000041ca8b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047d831 : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x47d819 ; ret
0x000000000041e363 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000430daa : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x430d98 ; ret
0x000000000041c7e7 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000482d34 : add al, 0x83 ; add rax, r11 ; jmp rax
0x0000000000410871 : add al, 0x83 ; call 0xffffffffc07a4983
0x000000000043dd27 : add al, 0x83 ; std ; or eax, 0x83482374 ; ret
0x0000000000483884 : add al, 0x86 ; add r8, r14 ; jmp r8
0x0000000000483d91 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000042da86 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000042c2c6 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000430dad : add al, 0x8a ; je 0x430d95 ; ret
0x000000000045cdd7 : add al, 0x8b ; adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x000000000044a360 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000004b111c : add al, 0xac ; add byte ptr [rax], al ; nop ; cdq ; sti ; call rcx
0x0000000000484fc4 : add al, 0xb8 ; add r8, rax ; jmp r8
0x000000000047456d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x4745c9
0x00000000004814bd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x481519
0x0000000000474e51 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041627d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000401e10 : add al, 0xf ; retf -0x2d77
0x0000000000403a2d : add al, 0xf ; retf -0x57d
0x000000000045d0aa : add al, 0xf ; xchg eax, ebp ; ret 0xd7e9
0x000000000045cf16 : add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x0000000000428923 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000482b02 : add al, 0xf6 ; ret 0x7402
0x0000000000419fd9 : add al, 0xf6 ; ret 0x7408
0x00000000004ad519 : add al, 0xf9 ; call qword ptr [rdx]
0x000000000048a5b5 : add al, 0xf9 ; jmp rax
0x0000000000458584 : add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000044aeee : add al, 1 ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004051e7 : add al, 1 ; retf -0x1d7f
0x0000000000470611 : add al, 3 ; add bl, ch ; ret 0x8b44
0x00000000004230b7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004b2830 : add al, 3 ; jl 0x4b2839 ; ret
0x0000000000414b0d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000420638 : add al, 7 ; ret
0x0000000000421caf : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000047dd8e : add al, 8 ; ret
0x00000000004ac16f : add al, ah ; jno 0x4ac16f ; call qword ptr [rcx]
0x000000000048b0ef : add al, ah ; or eax, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x430c
0x00000000004abc9f : add al, ah ; pop rsp ; clc ; jmp qword ptr [rdi]
0x000000000048abb8 : add al, ah ; stc ; call qword ptr [rax + 0x20fff9df]
0x0000000000409fa8 : add al, ah ; test dword ptr [rax], ecx ; pop rbx ; ret
0x000000000048ae94 : add al, al ; stc ; inc dword ptr [rax + 0xfff9c1] ; ret
0x00000000004a6b77 : add al, bh ; add edi, esi ; call rdi
0x00000000004abcb7 : add al, bh ; pop rsp ; clc ; call qword ptr [rbx]
0x00000000004b12e7 : add al, bh ; std ; jmp qword ptr [rdi]
0x000000000040fcb6 : add al, bpl ; ret
0x000000000043c13e : add al, bpl ; retf
0x000000000043bd3f : add al, bpl ; retf -0x3a5
0x0000000000411be2 : add al, bpl ; xchg eax, edi ; retf -1
0x000000000047afa2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000417011 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000040d7e5 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000419533 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000046fb49 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000048485a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000045f277 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000460cf6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000416bdd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e121 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416c01 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046ce89 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000484f71 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000453f52 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x4501c6
0x000000000045c3e3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000431a7a : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000045f997 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047f910 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf -0x74bf
0x0000000000418788 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044a1b0 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x000000000042ff24 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000043f17c : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x000000000045fdb0 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000484867 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x0000000000452910 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x58 ; add ch, cl ; retf -0x2a
0x0000000000431fbb : add al, byte ptr [rax] ; jmp 0x431f8d
0x000000000043d2b4 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x0000000000483630 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000040b005 : add al, byte ptr [rax] ; pop rdx ; cdqe ; ret
0x00000000004349aa : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x43499e
0x000000000043a5b2 : add al, byte ptr [rbx + 0x394907e0] ; ret
0x00000000004334ee : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000410874 : add al, byte ptr [rcx + 0x39] ; ror byte ptr [rdi], 0x84 ; retf
0x00000000004a7fb0 : add al, byte ptr [rcx + 0xa] ; ret
0x000000000046f48b : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x850f
0x00000000004051e0 : add al, byte ptr [rcx] ; retf -0x2e77
0x0000000000410a54 : add al, byte ptr [rdi + rcx + 0x46] ; ret 0x35e9
0x000000000045f276 : add al, byte ptr es:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045fe3e : add al, ch ; cld ; fdivr st(2) ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b2287 : add al, ch ; jne 0x4b228b ; call qword ptr [rax]
0x00000000004b2367 : add al, ch ; mov ah, 0xfc ; call qword ptr [rax]
0x00000000004a6d57 : add al, ch ; out 0xf5, al ; call qword ptr [rcx]
0x000000000046692c : add al, ch ; out dx, al ; ret
0x00000000004637b3 : add al, ch ; push rdi ; retf
0x000000000040fcb7 : add al, ch ; ret
0x0000000000409c28 : add al, ch ; ret 0x169
0x0000000000444588 : add al, ch ; ret 0x16c
0x00000000004146c8 : add al, ch ; ret 0x1ed
0x000000000045f188 : add al, ch ; ret 0xfff0
0x0000000000400636 : add al, ch ; ret 5
0x0000000000404fbf : add al, ch ; retf
0x0000000000467ba0 : add al, ch ; retf -0x362
0x000000000043bd40 : add al, ch ; retf -0x3a5
0x00000000004405c0 : add al, ch ; retf -0xd2
0x0000000000411be3 : add al, ch ; xchg eax, edi ; retf -1
0x00000000004ad517 : add al, cl ; add al, 0xf9 ; call qword ptr [rdx]
0x000000000049586f : add al, cl ; sldt word ptr [rax] ; retf
0x00000000004a83f7 : add al, cl ; sub dh, dh ; jmp rax
0x00000000004a578f : add al, dh ; and edi, ebp ; call rax
0x0000000000488adf : add al, dh ; retf
0x00000000004ab89f : add al, dh ; sal edi, 1 ; call qword ptr [rax]
0x000000000046b3f5 : add al, dl ; pop rdx ; imul eax, dword ptr [rax], 0x48 ; add esp, 8 ; ret
0x00000000004ac69f : add al, dl ; test bh, al ; call qword ptr [rax]
0x0000000000458f50 : add bh, al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6917
0x00000000004588e8 : add bh, al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0xf17
0x00000000004b3894 : add bh, bh ; inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000046a49f : add bh, bh ; loopne 0x46a502 ; ret
0x0000000000474dd7 : add bh, bh ; loopne 0x474e3a ; ret
0x0000000000401194 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000402738 : add bh, bh ; sar dword ptr [rdi + 0x6b6000], cl ; call rbx
0x0000000000474734 : add bh, byte ptr [rax + 1] ; ret
0x0000000000431bfb : add bh, byte ptr [rax - 1] ; ret
0x00000000004302f2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000048a5b1 : add bh, cl ; call rax
0x0000000000464763 : add bh, dh ; ret 0x804
0x0000000000419824 : add bl, al ; lea rax, qword ptr [rip + 0x15373] ; ret
0x000000000043495a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000045cdb5 : add bl, al ; ret
0x00000000004652b1 : add bl, ch ; mov eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000041084f : add bl, ch ; ret 0x8349
0x0000000000470613 : add bl, ch ; ret 0x8b44
0x0000000000404db7 : add bl, ch ; retf
0x00000000004b10f2 : add bl, cl ; ret
0x0000000000407e18 : add bl, dh ; ret
0x000000000048aa8c : add bl, dh ; stc ; call qword ptr [rdx + 0x22fff9dd]
0x00000000004326de : add bl, sil ; ret
0x000000000043e334 : add byte ptr [r13 + rax - 0x18], sil ; ret
0x00000000004363e9 : add byte ptr [r15 + 0x6b7008], dil ; call rax
0x0000000000474bf0 : add byte ptr [r15 + 0x6b7300], r15b ; call rax
0x00000000004684f1 : add byte ptr [r8 + 0x39], r9b ; ret
0x000000000040ee43 : add byte ptr [r8 + 0x39], r9b ; ret 0xd575
0x000000000041947d : add byte ptr [r8 + 0xf], cl ; ret 0x8348
0x000000000045e36f : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000448747 : add byte ptr [r8 + 0xf], cl ; retf 0xf4c
0x000000000043dd60 : add byte ptr [r8 - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000004327ee : add byte ptr [r8 - 0x77], r9b ; ret
0x0000000000438216 : add byte ptr [r8 - 0x77], r9b ; retf 0x2948
0x000000000043b277 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x0000000000400631 : add byte ptr [r8], 0 ; add byte ptr [rax], al ; call 0x45c888
0x000000000044b973 : add byte ptr [r8], al ; add cl, ch ; retf -0xf
0x00000000004101ce : add byte ptr [r8], al ; pop rbx ; ret
0x000000000044aa28 : add byte ptr [r9 - 0x42], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x00000000004673b4 : add byte ptr [r9 - 0x77], cl ; fmul dword ptr [rdi + rcx + 0x44] ; retf -0x74b8
0x000000000046b07d : add byte ptr [r9], sil ; shr al, 0x8a ; retf
0x0000000000430c9e : add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x0000000000430c9d : add byte ptr [rax + 0x10], dil ; pop rbx ; ret
0x00000000004601df : add byte ptr [rax + 0x15], bh ; syscall
0x00000000004b2e2f : add byte ptr [rax + 0x15], dh ; std ; jmp rsp
0x00000000004b307f : add byte ptr [rax + 0x19], ah ; std ; call rsp
0x00000000004ad8bf : add byte ptr [rax + 0x1d], al ; stc ; call qword ptr [rdi]
0x00000000004ad907 : add byte ptr [rax + 0x1d], bl ; stc ; call qword ptr [rcx]
0x00000000004ad8d7 : add byte ptr [rax + 0x1d], cl ; stc ; call qword ptr [rcx]
0x00000000004ad8ef : add byte ptr [rax + 0x1d], dl ; stc ; call qword ptr [rcx]
0x0000000000481fbf : add byte ptr [rax + 0x26], bh ; syscall
0x000000000040ab5f : add byte ptr [rax + 0x29], cl ; ret
0x0000000000483035 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000448412 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000004121f4 : add byte ptr [rax + 0x29], cl ; ret 0x8944
0x000000000040e4d5 : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000040e93e : add byte ptr [rax + 0x39], cl ; ret
0x000000000041216c : add byte ptr [rax + 0x39], cl ; ret 0x1374
0x000000000043d3d0 : add byte ptr [rax + 0x39], cl ; ret 0x7b73
0x000000000040ee44 : add byte ptr [rax + 0x39], cl ; ret 0xd575
0x0000000000433660 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000047f029 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000040710f : add byte ptr [rax + 0x39], cl ; retf
0x0000000000423461 : add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x0000000000425ffe : add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x0000000000423936 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000427863 : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000045df23 : add byte ptr [rax + 0x39], cl ; retf 0x417f
0x000000000047155f : add byte ptr [rax + 0x39], cl ; retf 0xa77
0x00000000004319af : add byte ptr [rax + 0x3c], bh ; syscall
0x00000000004b2257 : add byte ptr [rax + 0x56], cl ; cld ; call qword ptr [rax]
0x0000000000483631 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000484dcf : add byte ptr [rax + 0x63], cl ; ret
0x000000000045aa5f : add byte ptr [rax + 0x63], cl ; retf -0x72b4
0x00000000004592ca : add byte ptr [rax + 0x63], cl ; retf -0x74b8
0x000000000040fd6b : add byte ptr [rax + 0x63], cl ; stc ; mov eax, 3 ; syscall
0x000000000045ffef : add byte ptr [rax + 0x66], bh ; syscall
0x000000000046000f : add byte ptr [rax + 0x68], bh ; syscall
0x0000000000412337 : add byte ptr [rax + 0x6b4820], bh ; ret
0x000000000045ffff : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046001f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004ac1cf : add byte ptr [rax + 0x72], ah ; clc ; call qword ptr [rdi]
0x000000000041700f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000042e51f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004617be : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000004324df : add byte ptr [rax + 0xb], bh ; syscall
0x000000000045d15f : add byte ptr [rax + 0xc9], bh ; syscall
0x00000000004334d1 : add byte ptr [rax + 0xca], bh ; syscall
0x0000000000431396 : add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000469827 : add byte ptr [rax + 0xf], al ; test esp, eax ; or eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000045b645 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000434294 : add byte ptr [rax + 0xf], cl ; ret
0x000000000041947e : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000407eb5 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045e370 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000454295 : add byte ptr [rax + 0xf], cl ; retf
0x000000000045c647 : add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x0000000000448748 : add byte ptr [rax + 0xf], cl ; retf 0xf4c
0x0000000000401627 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000043d10f : add byte ptr [rax + 1], bh ; ret
0x0000000000419535 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000046bfce : add byte ptr [rax + 1], cl ; ret
0x000000000046bf51 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000047dc07 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000402515 : add byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000041953f : add byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000427921 : add byte ptr [rax + 1], cl ; retf -0x7eb8
0x0000000000480957 : add byte ptr [rax + 1], cl ; retf 0x42f6
0x0000000000433dce : add byte ptr [rax + 9], cl ; ret 0x8948
0x00000000004a65d3 : add byte ptr [rax + rax - 0x51780000], bh ; cmc ; call qword ptr [rdi]
0x00000000004af9f7 : add byte ptr [rax + rax], al ; add ah, bl ; xchg eax, edx ; add byte ptr [rax], al ; retf
0x00000000004b1f37 : add byte ptr [rax + rax], al ; add byte ptr [rax + rdi*4], bl ; add byte ptr [rax], al ; retf
0x00000000004b3077 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; retf
0x0000000000411581 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411731 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004b280f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cld ; ret 0
0x00000000004b30b7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000004b2f7f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000004b2fb7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000004b2f67 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; retf 0
0x00000000004b0dab : add byte ptr [rax + rbp*4 + 0x77100000], dl ; sti ; call rsi
0x0000000000453b24 : add byte ptr [rax + rcx*4 + 0x30], al ; xor r8d, r8d ; jmp 0x44fde7
0x00000000004a6d53 : add byte ptr [rax + rcx], bh ; add byte ptr [rax], al ; call 0x124a634b
0x00000000004aed2b : add byte ptr [rax + rdi*2 - 0x56400000], bh ; cli ; jmp rsi
0x00000000004b1f3b : add byte ptr [rax + rdi*4], bl ; add byte ptr [rax], al ; retf
0x00000000004af543 : add byte ptr [rax + rdx*4], ch ; add byte ptr [rax], al ; test al, 0xc0 ; cli ; jmp rdx
0x00000000004b156b : add byte ptr [rax + rsi*4], dl ; add byte ptr [rax - 0x5d], ah ; sti ; call qword ptr [rdx]
0x00000000004b29ff : add byte ptr [rax - 0x12], ah ; cld ; jmp qword ptr [rax]
0x0000000000402d60 : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b4c
0x00000000004a6c47 : add byte ptr [rax - 0x23], bl ; cmc ; call qword ptr [rax]
0x00000000004af827 : add byte ptr [rax - 0x30], bl ; cli ; call rax
0x000000000046d16e : add byte ptr [rax - 0x39], cl ; ret
0x00000000004097df : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000446260 : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x0000000000431990 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000045c3ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000045c3cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000045c42f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000045c3df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000045c41f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000043f80f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000043d2cd : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000046b835 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000046c2e0 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000046f99e : add byte ptr [rax - 0x48], cl ; retf -2
0x0000000000451b9b : add byte ptr [rax - 0x49f0a206], al ; ret 0x840f
0x00000000004af16f : add byte ptr [rax - 0x4a], dh ; cli ; call qword ptr [rax]
0x00000000004ace6f : add byte ptr [rax - 0x59], dh ; clc ; call qword ptr [rax]
0x00000000004acca7 : add byte ptr [rax - 0x5a], ch ; std ; jmp qword ptr [rdx]
0x00000000004b150f : add byte ptr [rax - 0x5d], ah ; sti ; call qword ptr [rdx]
0x00000000004b14f7 : add byte ptr [rax - 0x5d], ch ; sti ; call qword ptr [rax]
0x00000000004b11cf : add byte ptr [rax - 0x61], al ; sti ; jmp qword ptr [rdx]
0x0000000000462daf : add byte ptr [rax - 0x6bf0c506], al ; ret 0x8349
0x000000000040e4ae : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1e73
0x0000000000482c3f : add byte ptr [rax - 0x73], cl ; je 0x482c70 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000045d6fd : add byte ptr [rax - 0x73], cl ; les r9d, ptr [r13 + rcx*4 + 0x65] ; ret 0x8d4c
0x000000000045e28e : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax + 0x39], ecx ; retf -0x378e
0x000000000040b178 : add byte ptr [rax - 0x73], cl ; push rax ; add ecx, ebp ; retf
0x000000000040ea6f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045e75f : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000043d2ff : add byte ptr [rax - 0x75], cl ; add eax, 0x279d29 ; ret
0x00000000004358df : add byte ptr [rax - 0x75], cl ; add eax, 0x282341 ; ret
0x000000000040d71f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a6979 ; ret
0x000000000047e1c1 : add byte ptr [rax - 0x75], cl ; and al, 0x38 ; call rax
0x000000000040c886 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000435838 : add byte ptr [rax - 0x75], cl ; jnp 0x43585a ; call rax
0x000000000045ac8f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000043693f : add byte ptr [rax - 0x75], cl ; pop rbx ; and bl, ch ; retf 0x2e66
0x0000000000410577 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x0000000000411688 : add byte ptr [rax - 0x75], cl ; push rbp ; or byte ptr [rax - 0x77], cl ; retf
0x000000000040dfa7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000047f6bc : add byte ptr [rax - 0x75], cl ; push rdx ; or byte ptr [rbp + rcx*4 + 4], cl ; retf -0x74b8
0x0000000000424e7f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043dd61 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000004816b6 : add byte ptr [rax - 0x76b80000], al ; ret 0x2975
0x0000000000408121 : add byte ptr [rax - 0x76b80000], al ; ret 0x3675
0x0000000000438e96 : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x0000000000409edd : add byte ptr [rax - 0x77], cl ; clc ; jmp 0x409eb3
0x000000000040d74f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047439c : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x8948
0x000000000045cda7 : add byte ptr [rax - 0x77], cl ; enter 0x31c3, -0x40 ; nop ; ret
0x000000000040b237 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048485c : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004127d1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000040999f : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret 0x8d4a
0x000000000043af59 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; retf
0x000000000040aaef : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040c609 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004413e4 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000004482dc : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x0000000000407e11 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000401583 : add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000486db7 : add byte ptr [rax - 0x77], cl ; out 0x41, eax ; call rsp
0x000000000043d3a8 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov eax, 3 ; syscall
0x00000000004128e7 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000402e72 : add byte ptr [rax - 0x77], cl ; ret
0x00000000004816b9 : add byte ptr [rax - 0x77], cl ; ret 0x2975
0x000000000046a2b5 : add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000408124 : add byte ptr [rax - 0x77], cl ; ret 0x3675
0x0000000000474a1c : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000485894 : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000410e06 : add byte ptr [rax - 0x77], cl ; ret 0x58b
0x000000000043162c : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x000000000043d7b7 : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000044792e : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000040ee3a : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000409aff : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000043f1cf : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000040e341 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000044aef0 : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x0000000000448a6f : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004565ae : add byte ptr [rax - 0x77], cl ; ret 0xc9e8
0x000000000046ce8d : add byte ptr [rax - 0x77], cl ; ret 0xed75
0x000000000044812a : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000418b20 : add byte ptr [rax - 0x77], cl ; retf
0x00000000004353b3 : add byte ptr [rax - 0x77], cl ; retf -0x49f1
0x000000000041e51c : add byte ptr [rax - 0x77], cl ; retf -0x63b
0x0000000000458f56 : add byte ptr [rax - 0x77], cl ; retf -0x6917
0x000000000041e63a : add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x000000000043e405 : add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x000000000044c126 : add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000416472 : add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x000000000040e420 : add byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x00000000004588ee : add byte ptr [rax - 0x77], cl ; retf -0xf17
0x000000000041cb24 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000438217 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000004162d2 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000435477 : add byte ptr [rax - 0x77], cl ; retf 0x3ee9
0x000000000045891f : add byte ptr [rax - 0x77], cl ; retf 0x4b80
0x0000000000416230 : add byte ptr [rax - 0x77], cl ; retf 0x6666
0x000000000041c9a6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000452728 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000040c725 : add byte ptr [rax - 0x77], cl ; sti ; je 0x40c737 ; pop rbx ; ret
0x000000000045df50 : add byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000043116f : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, r8d ; syscall
0x000000000045b3cf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000040180f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000409b27 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x00000000004370e1 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x000000000044ab9f : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret
0x000000000045b280 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf
0x00000000004127f9 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000482156 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004018b1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004110c4 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000044af5a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000040173e : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000410807 : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000004303ef : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000403bf4 : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000434433 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000469c57 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000043a84c : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000045f4df : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x00000000004162ff : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040e47c : add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000041972f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00000000004196bf : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000464477 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x000000000041cc03 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000453e8f : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000416323 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000405ce7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004116d8 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000041163e : add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x0000000000421bef : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000043cd93 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000043e097 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000486aea : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x4c ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000046d3df : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000045e1f0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000404fb8 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000004405b9 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0xd2
0x00000000004122df : add byte ptr [rax - 0x7f], cl ; jmp qword ptr [rax]
0x000000000042610b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000045a847 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000040c76f : add byte ptr [rax - 1], bh ; ret
0x000000000040db1e : add byte ptr [rax - 1], dil ; ret
0x00000000004a725f : add byte ptr [rax - 4], ah ; cmc ; call qword ptr [rdx]
0x00000000004a7247 : add byte ptr [rax - 4], ch ; cmc ; call qword ptr [rax]
0x00000000004a710f : add byte ptr [rax - 5], al ; cmc ; call qword ptr [rbx]
0x000000000045e1f4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004146c5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x1ed
0x0000000000404fbc : add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000004405bd : add byte ptr [rax], 0 ; add al, ch ; retf -0xd2
0x000000000043b58a : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042791e : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x000000000047e1be : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; and al, 0x38 ; call rax
0x0000000000400632 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call 0x45c887
0x000000000042892b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000046b5fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000040e66b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000004205db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047018b : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000004220d1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043c4b0 : add byte ptr [rax], 0 ; add byte ptr [rsi - 0x3f], ah ; retf 0x6608
0x0000000000407c50 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x0000000000406ea2 : add byte ptr [rax], 0 ; add cl, ch ; retf -2
0x000000000045fd8a : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000004ade0f : add byte ptr [rax], ah ; sub cl, bh ; call qword ptr [rbx]
0x00000000004ade3f : add byte ptr [rax], ah ; sub cl, bh ; call qword ptr [rdx]
0x00000000004a8d3f : add byte ptr [rax], ah ; xor dh, dh ; jmp rbx
0x00000000004b2f7e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000004b2fb6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000004b2f66 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x00000000004ad82a : add byte ptr [rax], al ; adc al, 0x73 ; add byte ptr [rax], al ; xor byte ptr [rax], bl ; stc ; call qword ptr [rcx]
0x00000000004b2e2a : add byte ptr [rax], al ; adc al, 0xc9 ; add byte ptr [rax], al ; jo 0x4b2e50 ; std ; jmp rsp
0x00000000004b0dae : add byte ptr [rax], al ; adc byte ptr [rdi - 5], dh ; call rsi
0x00000000004b2811 : add byte ptr [rax], al ; add ah, bh ; ret 0
0x00000000004b30f1 : add byte ptr [rax], al ; add ah, bl ; retf
0x00000000004af9f9 : add byte ptr [rax], al ; add ah, bl ; xchg eax, edx ; add byte ptr [rax], al ; retf
0x00000000004b27e1 : add byte ptr [rax], al ; add ah, cl ; ret 0
0x00000000004b2fe9 : add byte ptr [rax], al ; add ah, dl ; retf 0
0x00000000004b111a : add byte ptr [rax], al ; add al, 0xac ; add byte ptr [rax], al ; nop ; cdq ; sti ; call rcx
0x000000000046692a : add byte ptr [rax], al ; add al, ch ; out dx, al ; ret
0x0000000000413495 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000409c26 : add byte ptr [rax], al ; add al, ch ; ret 0x169
0x00000000004146c6 : add byte ptr [rax], al ; add al, ch ; ret 0x1ed
0x0000000000400634 : add byte ptr [rax], al ; add al, ch ; ret 5
0x0000000000404fbd : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000467b9e : add byte ptr [rax], al ; add al, ch ; retf -0x362
0x00000000004405be : add byte ptr [rax], al ; add al, ch ; retf -0xd2
0x0000000000488add : add byte ptr [rax], al ; add al, dh ; retf
0x000000000045cdb3 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000041084d : add byte ptr [rax], al ; add bl, ch ; ret 0x8349
0x0000000000404db5 : add byte ptr [rax], al ; add bl, ch ; retf
0x000000000040cafe : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004684dd : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000483033 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000448410 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000004121f2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8944
0x000000000040e4d3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x0000000000438ce9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000439e45 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000423934 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000427861 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004731dd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xa77
0x00000000004319ad : add byte ptr [rax], al ; add byte ptr [rax + 0x3c], bh ; syscall
0x000000000045aa5d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf -0x72b4
0x000000000046000d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000045fffd : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046001d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x000000000042e51d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004324dd : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x00000000004334cf : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000431394 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000401625 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000000004746b3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000046bfcc : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000042791f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x00000000004b3075 : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; retf
0x00000000004b280d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cld ; ret 0
0x00000000004b30b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000004b2f7d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000004b2fb5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000004b2f65 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; retf 0
0x00000000004b1f39 : add byte ptr [rax], al ; add byte ptr [rax + rdi*4], bl ; add byte ptr [rax], al ; retf
0x000000000044936d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000043d2cb : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000046b833 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000040e4ac : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1e73
0x000000000040b176 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; add ecx, ebp ; retf
0x000000000040ea6d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045e75d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000047e1bf : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0x38 ; call rax
0x000000000040c884 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000043693d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rbx ; and bl, ch ; retf 0x2e66
0x0000000000410575 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x0000000000411686 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; or byte ptr [rax - 0x77], cl ; retf
0x0000000000438e94 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000040d74d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040999d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret 0x8d4a
0x00000000004413e2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000004482da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x0000000000486db5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out 0x41, eax ; call rsp
0x0000000000407e51 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046a2b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000485892 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000047ec05 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004565ac : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc9e8
0x000000000046ce8b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000418b1e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004353b1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x49f1
0x000000000041e51a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x63b
0x0000000000458f54 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6917
0x000000000044c124 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000045f42f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x00000000004588ec : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0xf17
0x0000000000440c8b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000041622e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6666
0x000000000041c9a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043116d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, r8d ; syscall
0x00000000004055c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004303ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000043572c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000470d3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000043a84a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000041e257 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041972d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00000000004196bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000041e2c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045516d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000405ce5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041163c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x0000000000421bed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000043e095 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x000000000046d3dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000427918 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000045a845 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000040d6cd : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004b2f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000004b2fb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000004b2f64 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x0000000000488adb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf
0x000000000040d70b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004684db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004731db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xa77
0x000000000045aa5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf -0x72b4
0x000000000040d74b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004565aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc9e8
0x000000000043e2bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004303eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000462c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000470d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000041972b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00000000004196bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000045516b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000487d98 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x405d
0x000000000049a979 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x44
0x000000000040cb33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004966aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004966a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000496b92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000487d9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x405d
0x000000000049eb1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x49ea
0x0000000000495d52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004966e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x0000000000496bd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x0000000000495d4a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000488ae3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x40
0x000000000041399b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000043062b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000004162db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000414eab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000049a97b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x44
0x000000000046b91b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf -0x3fcf
0x000000000040b65b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf -0x9be
0x000000000049afb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], dh ; retf 0x44
0x000000000049a9eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, bh ; retf 0x44
0x000000000045c3ac : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000004878c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046b0ef : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400633 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x45c886
0x000000000046b1ae : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4674a6
0x000000000048b85c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x0000000000467597 : add byte ptr [rax], al ; add byte ptr [rax], al ; call r12
0x00000000004986cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000049787c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004b3074 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; retf
0x000000000044e983 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x44b3c1
0x000000000042eb4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000042eb5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000042eb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000042eb7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000042eb8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000042eacc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000042eadc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000042eaec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000042eafc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000042eb0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000042eb1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000042eb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000042eb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000042eabc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000004010af : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000042e51c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000042defc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004319ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3c ; syscall
0x000000000046000c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000045fffc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046001c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000004324dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000040d6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004746b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000042892c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000046b5fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000040d73c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000040d74c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000043693c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rbx, qword ptr [rbx + 0x20] ; jmp 0x436919
0x0000000000428a7c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000040c9b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c49d : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000048cb24 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000049aa3c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x000000000040cafd : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049769c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000497e34 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004966a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000496b94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000487ce4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x401a
0x0000000000487d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x405d
0x000000000048b0f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x430c
0x000000000049eb1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x49ea
0x000000000049f40c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x49ed
0x000000000048b8fc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004976d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000497e74 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004966e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x0000000000496bd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004a0d05 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x000000000048b6fc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4314
0x000000000049aa34 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44c5
0x0000000000495d4c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000049a9ec : add byte ptr [rax], al ; add byte ptr [rax], al ; stc ; retf 0x44
0x0000000000431ada : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000463f46 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x463f5a ; call rax
0x00000000004b30b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x0000000000430bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040d6ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004205dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000488ae5 : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x40
0x000000000040a320 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000433358 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x0000000000453624 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6e7af037], al ; retf
0x0000000000407486 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000430c4c : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000004337e6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045d181 : add byte ptr [rax], al ; add byte ptr [rbx + 0x460f18fa], al ; retf 0x3cba
0x000000000042820d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000409b16 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401394 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a9ef : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b2fd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000044ad1c : add byte ptr [rax], al ; add byte ptr [rbx - 0x10eb43], al ; call qword ptr [rax]
0x000000000044b508 : add byte ptr [rax], al ; add byte ptr [rbx - 0x113f43], al ; call qword ptr [rax]
0x0000000000458d94 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7df18], al ; retf -0x76b8
0x0000000000408332 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cc4a2
0x0000000000466c7d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fbbd], cl ; ret 0x4803
0x00000000004abb7e : add byte ptr [rax], al ; add byte ptr [rbx - 8], dl ; call rcx
0x00000000004493e2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x000000000043a5bc : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000046dccd : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000040a7f0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000044a3bf : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x000000000044a2f1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x0000000000462e1d : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; ret
0x000000000043062d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000408ebe : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x000000000044e118 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x45a3e8
0x0000000000455fbf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x412a98
0x0000000000484355 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc2718fa7
0x0000000000448c70 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004555da : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x000000000044f021 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x3ce9
0x000000000044dcde : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x7fe9
0x000000000046d4c1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000418ad1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000004162dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000414ead : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000419850 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000419876 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000049a97d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x44
0x000000000046b91d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf -0x3fcf
0x0000000000406e0a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000045b2db : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x00000000004843f2 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048441a : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000040b65d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf -0x9be
0x0000000000428a0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000045dc40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x55 ; ret 0xf41
0x0000000000428a7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043986b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rax - 0x77] ; ret 0x8349
0x0000000000439b4a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x000000000041976d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000430ba5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000484635 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8 + 0x48], dh ; add esp, 8 ; ret
0x000000000049afb5 : add byte ptr [rax], al ; add byte ptr [rdx], dh ; retf 0x44
0x00000000004220d2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000419682 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004a5e5d : add byte ptr [rax], al ; add byte ptr [rsi - 0x3d], cl ; std ; call qword ptr [rsi - 0x3d]
0x000000000043c4b1 : add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; retf 0x6608
0x00000000004ad121 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*2], cl ; add byte ptr [rax], al ; ret
0x000000000049a9ed : add byte ptr [rax], al ; add cl, bh ; retf 0x44
0x00000000004535c4 : add byte ptr [rax], al ; add cl, ch ; hlt ; retf
0x0000000000454023 : add byte ptr [rax], al ; add cl, ch ; pop rsi ; ret
0x0000000000407c51 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000047f1fb : add byte ptr [rax], al ; add cl, ch ; ret 0xfff3
0x0000000000482920 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x000000000043c124 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000453f53 : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x000000000043c31b : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000004521ee : add byte ptr [rax], al ; add cl, ch ; retf -0x21
0x0000000000471985 : add byte ptr [rax], al ; add cl, ch ; retf -0xa
0x000000000044b974 : add byte ptr [rax], al ; add cl, ch ; retf -0xf
0x0000000000406ea3 : add byte ptr [rax], al ; add cl, ch ; retf -2
0x00000000004010b0 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000044fd25 : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000042fd81 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000046b407 : add byte ptr [rax], al ; add rax, -8 ; ret
0x000000000045c3ae : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000419534 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000004878c6 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000430e4e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000474cdc : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f9e8 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x00000000004076a5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000040af65 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045e008 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004ade3a : add byte ptr [rax], al ; and al, 0x79 ; add byte ptr [rax], al ; and byte ptr [rax], ch ; stc ; call qword ptr [rdx]
0x00000000004ade0e : add byte ptr [rax], al ; and byte ptr [rax], ch ; stc ; call qword ptr [rbx]
0x00000000004ade3e : add byte ptr [rax], al ; and byte ptr [rax], ch ; stc ; call qword ptr [rdx]
0x000000000041976e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000045b477 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000045b644 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004b2286 : add byte ptr [rax], al ; call 0x114b1f07
0x00000000004b2366 : add byte ptr [rax], al ; call 0x114b2026
0x00000000004a6d56 : add byte ptr [rax], al ; call 0x124a6348
0x0000000000400635 : add byte ptr [rax], al ; call 0x45c884
0x000000000046b1b0 : add byte ptr [rax], al ; call 0x4674a4
0x00000000004ada36 : add byte ptr [rax], al ; call 0xffffffffe74ad35f
0x000000000043352e : add byte ptr [rax], al ; call 4
0x0000000000401193 : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x0000000000495b62 : add byte ptr [rax], al ; call qword ptr [rcx]
0x000000000048b85e : add byte ptr [rax], al ; call qword ptr [rdi]
0x0000000000467599 : add byte ptr [rax], al ; call r12
0x00000000004843f8 : add byte ptr [rax], al ; call r14
0x00000000004017fa : add byte ptr [rax], al ; call rax
0x00000000004986ce : add byte ptr [rax], al ; call rdi
0x000000000049787e : add byte ptr [rax], al ; call rsp
0x00000000004a6b76 : add byte ptr [rax], al ; clc ; add edi, esi ; call rdi
0x00000000004abcb6 : add byte ptr [rax], al ; clc ; pop rsp ; clc ; call qword ptr [rbx]
0x00000000004b12e6 : add byte ptr [rax], al ; clc ; std ; jmp qword ptr [rdi]
0x00000000004b2812 : add byte ptr [rax], al ; cld ; ret 0
0x00000000004b3076 : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; retf
0x00000000004b2252 : add byte ptr [rax], al ; cmp al, 0xbd ; add byte ptr [rax], al ; push rsi ; cld ; call qword ptr [rax]
0x00000000004b3652 : add byte ptr [rax], al ; cmp al, 0xd1 ; add byte ptr [rax], al ; mov byte ptr [rdi], ch ; std ; call qword ptr [rbx]
0x00000000004a6d52 : add byte ptr [rax], al ; cmp al, 8 ; add byte ptr [rax], al ; call 0x124a634c
0x00000000004a6e46 : add byte ptr [rax], al ; cmp bl, ch ; cmc ; jmp rbx
0x0000000000409307 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x409318 ; pop rbx ; ret
0x00000000004a8dd6 : add byte ptr [rax], al ; cwde ; xor esi, esi ; call rdi
0x000000000049886e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000049546e : add byte ptr [rax], al ; enter 0xc, 0 ; retf
0x000000000049586e : add byte ptr [rax], al ; enter 0xf, 0 ; retf
0x0000000000498a6e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x0000000000498c6e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x0000000000498e6e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x000000000049906e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x000000000049926e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x000000000049946e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x000000000049966e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x000000000049986e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x000000000049506e : add byte ptr [rax], al ; enter 9, 0 ; retf
0x0000000000499a6e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004a6ff2 : add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rax], al ; or ah, dh ; cmc ; call qword ptr [rax]
0x00000000004b14f2 : add byte ptr [rax], al ; fsubr qword ptr [rdi - 0x5c980000] ; sti ; call qword ptr [rax]
0x00000000004ade0a : add byte ptr [rax], al ; hlt ; js 0x4ade18 ; add byte ptr [rax], ah ; sub cl, bh ; call qword ptr [rbx]
0x00000000004a710a : add byte ptr [rax], al ; hlt ; or eax, dword ptr [rax] ; add byte ptr [rax - 5], al ; cmc ; call qword ptr [rbx]
0x00000000004ac1fa : add byte ptr [rax], al ; in al, 0x5c ; add byte ptr [rax], al ; nop ; jb 0x4ac204 ; jmp qword ptr [rdi]
0x00000000004ad902 : add byte ptr [rax], al ; in al, dx ; jae 0x4ad910 ; add byte ptr [rax + 0x1d], bl ; stc ; call qword ptr [rcx]
0x00000000004ace02 : add byte ptr [rax], al ; in al, dx ; push -0x5d580000 ; clc ; call qword ptr [rsi]
0x00000000004b2282 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov ebp, 0x75e80000 ; cld ; call qword ptr [rax]
0x00000000004b2f82 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000040e56c : add byte ptr [rax], al ; je 0x40e57e ; xor eax, eax ; ret
0x000000000041426a : add byte ptr [rax], al ; je 0x414274 ; ret
0x0000000000484636 : add byte ptr [rax], al ; je 0x48462c ; add rsp, 8 ; ret
0x00000000004a9892 : add byte ptr [rax], al ; je 0x4a98cd ; add byte ptr [rax], al ; retf -0x955
0x00000000004abe8a : add byte ptr [rax], al ; je 0x4abef0 ; add byte ptr [rax], al ; xor byte ptr [rsi - 8], ah ; call qword ptr [rdi]
0x00000000004b0f92 : add byte ptr [rax], al ; jl 0x4b0f49 ; add byte ptr [rax], al ; or byte ptr [rdi - 5], bh ; call qword ptr [rax]
0x0000000000404db6 : add byte ptr [rax], al ; jmp 0x404d88
0x000000000041084e : add byte ptr [rax], al ; jmp 0x410817
0x000000000041184b : add byte ptr [rax], al ; jmp 0x411861
0x0000000000411fc3 : add byte ptr [rax], al ; jmp 0x411fd9
0x0000000000412354 : add byte ptr [rax], al ; jmp 0x41236a
0x000000000044e8c0 : add byte ptr [rax], al ; jmp 0x44ab4a
0x000000000044e985 : add byte ptr [rax], al ; jmp 0x44b3bf
0x0000000000453f54 : add byte ptr [rax], al ; jmp 0x4501c4
0x000000000046237c : add byte ptr [rax], al ; jmp 0x462317
0x000000000046240c : add byte ptr [rax], al ; jmp 0x4623de
0x0000000000484c7f : add byte ptr [rax], al ; jmp rax
0x000000000044aa2e : add byte ptr [rax], al ; jmp rdx
0x0000000000431a75 : add byte ptr [rax], al ; jne 0x431a96 ; mov eax, 2 ; syscall
0x0000000000431ad5 : add byte ptr [rax], al ; jne 0x431af6 ; mov eax, 0 ; syscall
0x0000000000431b35 : add byte ptr [rax], al ; jne 0x431b56 ; mov eax, 1 ; syscall
0x0000000000431cc5 : add byte ptr [rax], al ; jne 0x431ce6 ; mov eax, 3 ; syscall
0x00000000004333d5 : add byte ptr [rax], al ; jne 0x4333f6 ; mov eax, 8 ; syscall
0x000000000046b90f : add byte ptr [rax], al ; jne 0x46b950 ; add rsp, 8 ; ret
0x000000000046dfef : add byte ptr [rax], al ; jne 0x46e030 ; add rsp, 8 ; ret
0x00000000004706cf : add byte ptr [rax], al ; jne 0x470710 ; add rsp, 8 ; ret
0x00000000004ace6e : add byte ptr [rax], al ; jo 0x4ace1e ; clc ; call qword ptr [rax]
0x00000000004af16e : add byte ptr [rax], al ; jo 0x4af12d ; cli ; call qword ptr [rax]
0x00000000004b2e2e : add byte ptr [rax], al ; jo 0x4b2e4c ; std ; jmp rsp
0x00000000004b11ce : add byte ptr [rax], al ; lahf ; sti ; jmp qword ptr [rdx]
0x000000000042eb4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000042eb5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000042eb6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000042eb7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000042eb8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000042eaad : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000042eace : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000042eade : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000042eaee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000042eafe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000042eb0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000042eb1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000042ea5a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000042eb2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000042eb3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000042eabe : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000004010b1 : add byte ptr [rax], al ; leave ; ret
0x00000000004abc9e : add byte ptr [rax], al ; loopne 0x4abd03 ; clc ; jmp qword ptr [rdi]
0x00000000004ac16e : add byte ptr [rax], al ; loopne 0x4ac1e8 ; clc ; call qword ptr [rcx]
0x00000000004b11ca : add byte ptr [rax], al ; mov ah, 0xac ; add byte ptr [rax], al ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000004ae24e : add byte ptr [rax], al ; mov al, 0xa2 ; stc ; call qword ptr [rbx]
0x00000000004aeaae : add byte ptr [rax], al ; mov al, 0xa8 ; cli ; call qword ptr [rdx]
0x000000000042da2e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042c27e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004abc26 : add byte ptr [rax], al ; mov byte ptr [rbp - 8], dl ; jmp rax
0x00000000004b3656 : add byte ptr [rax], al ; mov byte ptr [rdi], ch ; std ; call qword ptr [rbx]
0x000000000042e51e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000042defe : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004378a2 : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; jmp 0x43786f
0x0000000000474684 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x000000000042df0e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004010ac : add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x00000000004601de : add byte ptr [rax], al ; mov eax, 0x15 ; syscall
0x00000000004319ae : add byte ptr [rax], al ; mov eax, 0x3c ; syscall
0x000000000045ffee : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000046000e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000045fffe : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x0000000000412336 : add byte ptr [rax], al ; mov eax, 0x6b4820 ; ret
0x000000000046001e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000004617bd : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004324de : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000045d15e : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall
0x00000000004334d0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x0000000000431395 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000045a846 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040c76e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000043d10e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000040d45e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048670e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x486729 ; ret
0x000000000040a7f1 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000467546 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000047e405 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004077f9 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000042df3e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000402cbd : add byte ptr [rax], al ; mov edi, 0x6b7060 ; call rax
0x00000000004843f3 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048441b : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000042820e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042892e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000433586 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000004aced2 : add byte ptr [rax], al ; mov esp, 0x18000069 ; stosd dword ptr [rdi], eax ; clc ; jmp rcx
0x00000000004a65d2 : add byte ptr [rax], al ; mov esp, 0x88000000 ; scasb al, byte ptr [rdi] ; cmc ; call qword ptr [rdi]
0x00000000004a8dd2 : add byte ptr [rax], al ; mov esp, 0x98000028 ; xor esi, esi ; call rdi
0x0000000000474ff8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481892 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000481916 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004846a6 : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x00000000004651f5 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x300], rax ; ret
0x00000000004201f6 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000004846de : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000040e4f8 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x0000000000438e95 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000043f6d0 : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000046262e : add byte ptr [rax], al ; mov r10, rcx ; jmp 0x462608
0x0000000000404db0 : add byte ptr [rax], al ; mov r13d, 0x64 ; jmp 0x404d8e
0x000000000040d6be : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000043f80e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000045c3ce : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000045c3de : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000045c3ee : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000045c3fe : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000045c40e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000045c41e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000045c42e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000465f01 : add byte ptr [rax], al ; mov rax, qword ptr [r14 + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000046642f : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040c4c9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000409320 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040c885 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000046b5fe : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000045ac8e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040d73e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048464e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x00000000004846ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048474e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048473e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x00000000004846fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x00000000004358de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x282341] ; ret
0x000000000040d71e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a6979] ; ret
0x000000000048522e : add byte ptr [rax], al ; mov rax, qword ptr [rsi] ; add rsp, 8 ; ret
0x000000000047e1c0 : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x000000000040abbe : add byte ptr [rax], al ; mov rax, r13 ; sub rax, rbx ; jmp 0x40ab9c
0x000000000046862f : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040b236 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048485b : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004127d0 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000045cda6 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000040d74e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004128e6 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000474a73 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000043693e : add byte ptr [rax], al ; mov rbx, qword ptr [rbx + 0x20] ; jmp 0x436917
0x0000000000435837 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x0000000000464032 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000455fc0 : add byte ptr [rax], al ; mov rdi, r14 ; call 0x412a97
0x000000000044e119 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x45a3e7
0x0000000000458bec : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043116e : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000486db6 : add byte ptr [rax], al ; mov rdi, rsp ; call r12
0x000000000042876e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000408ebf : add byte ptr [rax], al ; mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000484cce : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, rbx ; call r15
0x000000000043f911 : add byte ptr [rax], al ; mov rsi, rax ; mov eax, ecx ; syscall
0x00000000004602d3 : add byte ptr [rax], al ; mov rsi, rdi ; mov eax, ecx ; syscall
0x00000000004685b8 : add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004acca2 : add byte ptr [rax], al ; mov word ptr [rdi], fs ; add byte ptr [rax - 0x5a], ch ; std ; jmp qword ptr [rdx]
0x00000000004ad8ba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jae 0x4ad8c8 ; add byte ptr [rax + 0x1d], al ; stc ; call qword ptr [rdi]
0x00000000004b30ba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000004b2fba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000004820c1 : add byte ptr [rax], al ; movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0x0000000000460230 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000042839e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000428a7e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000428a0e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004a765e : add byte ptr [rax], al ; nop ; add esi, esi ; call qword ptr [rax]
0x00000000004b111e : add byte ptr [rax], al ; nop ; cdq ; sti ; call rcx
0x00000000004a905e : add byte ptr [rax], al ; nop ; cmp esi, esi ; call qword ptr [rcx]
0x00000000004ac1fe : add byte ptr [rax], al ; nop ; jb 0x4ac200 ; jmp qword ptr [rdi]
0x000000000043251c : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x000000000045fcbd : add byte ptr [rax], al ; nop ; mov eax, 0x3f ; syscall
0x00000000004324fc : add byte ptr [rax], al ; nop ; mov eax, 0xa ; syscall
0x000000000040584a : add byte ptr [rax], al ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000004a6ff6 : add byte ptr [rax], al ; or ah, dh ; cmc ; call qword ptr [rax]
0x00000000004abc22 : add byte ptr [rax], al ; or al, 0x57 ; add byte ptr [rax], al ; mov byte ptr [rbp - 8], dl ; jmp rax
0x00000000004ad122 : add byte ptr [rax], al ; or al, 0x6c ; add byte ptr [rax], al ; ret
0x00000000004ade22 : add byte ptr [rax], al ; or al, 0x79 ; add byte ptr [rax], al ; sub byte ptr [rax], ch ; stc ; call qword ptr [rax]
0x00000000004af822 : add byte ptr [rax], al ; or al, 0x93 ; add byte ptr [rax], al ; pop rax ; sar dl, 1 ; call rax
0x00000000004b0f96 : add byte ptr [rax], al ; or byte ptr [rdi - 5], bh ; call qword ptr [rax]
0x00000000004a725a : add byte ptr [rax], al ; or eax, 0xfc600000 ; cmc ; call qword ptr [rdx]
0x000000000043fa29 : add byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x000000000044a3c0 : add byte ptr [rax], al ; pop r13 ; ret
0x000000000044a2f2 : add byte ptr [rax], al ; pop r14 ; ret
0x0000000000462e1e : add byte ptr [rax], al ; pop r15 ; ret
0x00000000004af826 : add byte ptr [rax], al ; pop rax ; sar dl, 1 ; call rax
0x0000000000430c4d : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000474f05 : add byte ptr [rax], al ; pop rbx ; imul eax, dword ptr [rax], 0x48 ; add esp, 8 ; ret
0x000000000043098c : add byte ptr [rax], al ; pop rbx ; lea rax, qword ptr [r8 + 1] ; pop rbp ; ret
0x0000000000407b43 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000004337e7 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000044a1b1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000409b17 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040041e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a9f0 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040b2fe : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000409f0b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b0972 : add byte ptr [rax], al ; pop rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; sbb byte ptr [rsi - 5], cl ; call rdx
0x00000000004abe72 : add byte ptr [rax], al ; pop rsp ; pop rcx ; add byte ptr [rax], al ; sbb byte ptr [rsi - 8], ah ; jmp qword ptr [rbx]
0x000000000048cb26 : add byte ptr [rax], al ; push rax ; ret
0x000000000049aa3e : add byte ptr [rax], al ; push rax ; retf
0x00000000004abb7f : add byte ptr [rax], al ; push rbx ; clc ; call rcx
0x00000000004abb7a : add byte ptr [rax], al ; push rsi ; add byte ptr [rax], al ; add byte ptr [rbx - 8], dl ; call rcx
0x00000000004b2256 : add byte ptr [rax], al ; push rsi ; cld ; call qword ptr [rax]
0x00000000004ace6a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xf8a77000 ; call qword ptr [rax]
0x00000000004b156a : add byte ptr [rax], al ; push rsp ; mov al, 0 ; add byte ptr [rax - 0x5d], ah ; sti ; call qword ptr [rdx]
0x00000000004af16a : add byte ptr [rax], al ; push rsp ; mov word ptr [rax], es ; add byte ptr [rax - 0x4a], dh ; cli ; call qword ptr [rax]
0x00000000004ac16a : add byte ptr [rax], al ; push rsp ; pop rsp ; add byte ptr [rax], al ; loopne 0x4ac1ec ; clc ; call qword ptr [rcx]
0x00000000004b2f6a : add byte ptr [rax], al ; push rsp ; retf 0
0x00000000004b22b2 : add byte ptr [rax], al ; pushfq ; mov ebp, 0x2f980000 ; cld ; call qword ptr [rax]
0x00000000004abcb2 : add byte ptr [rax], al ; pushfq ; push rdi ; add byte ptr [rax], al ; clc ; pop rsp ; clc ; call qword ptr [rbx]
0x00000000004af8ee : add byte ptr [rax], al ; rcl ah, 1 ; cli ; jmp qword ptr [rdx]
0x000000000040761b : add byte ptr [rax], al ; ret
0x000000000048ea26 : add byte ptr [rax], al ; ret 0
0x0000000000495c66 : add byte ptr [rax], al ; ret 0x12
0x000000000049769e : add byte ptr [rax], al ; ret 0x1d4
0x0000000000497e36 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004966a6 : add byte ptr [rax], al ; ret 0x24
0x0000000000496b96 : add byte ptr [rax], al ; ret 0x33
0x0000000000487ce6 : add byte ptr [rax], al ; ret 0x401a
0x0000000000487d9e : add byte ptr [rax], al ; ret 0x405d
0x000000000048b0f6 : add byte ptr [rax], al ; ret 0x430c
0x000000000049eb1e : add byte ptr [rax], al ; ret 0x49ea
0x000000000049f40e : add byte ptr [rax], al ; ret 0x49ed
0x0000000000495466 : add byte ptr [rax], al ; ret 0xc
0x0000000000495866 : add byte ptr [rax], al ; ret 0xf
0x0000000000498a62 : add byte ptr [rax], al ; ret 1
0x0000000000498c62 : add byte ptr [rax], al ; ret 2
0x0000000000498e62 : add byte ptr [rax], al ; ret 3
0x0000000000499062 : add byte ptr [rax], al ; ret 4
0x0000000000494c8e : add byte ptr [rax], al ; ret 5
0x0000000000499462 : add byte ptr [rax], al ; ret 6
0x0000000000499662 : add byte ptr [rax], al ; ret 7
0x0000000000499862 : add byte ptr [rax], al ; ret 8
0x0000000000495066 : add byte ptr [rax], al ; ret 9
0x000000000048b8fe : add byte ptr [rax], al ; retf
0x00000000004a9896 : add byte ptr [rax], al ; retf -0x955
0x00000000004af6ae : add byte ptr [rax], al ; retf -6
0x000000000048ea46 : add byte ptr [rax], al ; retf 0
0x00000000004959c6 : add byte ptr [rax], al ; retf 0x10
0x00000000004976d6 : add byte ptr [rax], al ; retf 0x1d4
0x0000000000497e76 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004966e6 : add byte ptr [rax], al ; retf 0x24
0x0000000000496bd6 : add byte ptr [rax], al ; retf 0x33
0x00000000004a0d07 : add byte ptr [rax], al ; retf 0x3b9a
0x000000000048b6fe : add byte ptr [rax], al ; retf 0x4314
0x000000000049aa36 : add byte ptr [rax], al ; retf 0x44c5
0x00000000004951c6 : add byte ptr [rax], al ; retf 0xa
0x00000000004955c6 : add byte ptr [rax], al ; retf 0xd
0x0000000000495d4e : add byte ptr [rax], al ; retf 1
0x0000000000498c72 : add byte ptr [rax], al ; retf 2
0x0000000000498e72 : add byte ptr [rax], al ; retf 3
0x0000000000499072 : add byte ptr [rax], al ; retf 4
0x0000000000499272 : add byte ptr [rax], al ; retf 5
0x0000000000494d6e : add byte ptr [rax], al ; retf 6
0x0000000000499672 : add byte ptr [rax], al ; retf 7
0x0000000000499872 : add byte ptr [rax], al ; retf 8
0x0000000000499a72 : add byte ptr [rax], al ; retf 9
0x000000000049905e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004b2862 : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; retf
0x00000000004ac032 : add byte ptr [rax], al ; sbb al, 0x5b ; add byte ptr [rax], al ; sub byte ptr [rbp - 8], ch ; call qword ptr [rdx]
0x00000000004ada32 : add byte ptr [rax], al ; sbb al, 0x75 ; add byte ptr [rax], al ; call 0xffffffffe74ad363
0x00000000004b1f3a : add byte ptr [rax], al ; sbb al, 0xb8 ; add byte ptr [rax], al ; retf
0x00000000004b0976 : add byte ptr [rax], al ; sbb byte ptr [rsi - 5], cl ; call rdx
0x00000000004abe76 : add byte ptr [rax], al ; sbb byte ptr [rsi - 8], ah ; jmp qword ptr [rbx]
0x000000000049a9ee : add byte ptr [rax], al ; stc ; retf 0x44
0x00000000004a710e : add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rbx]
0x00000000004af542 : add byte ptr [rax], al ; sub al, 0x90 ; add byte ptr [rax], al ; test al, 0xc0 ; cli ; jmp rdx
0x00000000004a6e42 : add byte ptr [rax], al ; sub al, 9 ; add byte ptr [rax], al ; cmp bl, ch ; cmc ; jmp rbx
0x00000000004ade26 : add byte ptr [rax], al ; sub byte ptr [rax], ch ; stc ; call qword ptr [rax]
0x00000000004ac036 : add byte ptr [rax], al ; sub byte ptr [rbp - 8], ch ; call qword ptr [rdx]
0x0000000000422b1c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000046b7fd : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x000000000040cd46 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000400415 : add byte ptr [rax], al ; syscall
0x00000000004ace06 : add byte ptr [rax], al ; test al, 0xa2 ; clc ; call qword ptr [rsi]
0x00000000004af286 : add byte ptr [rax], al ; test al, 0xb9 ; cli ; jmp qword ptr [rdx]
0x00000000004af546 : add byte ptr [rax], al ; test al, 0xc0 ; cli ; jmp rdx
0x00000000004ab89a : add byte ptr [rax], al ; test byte ptr [rbx], dl ; add al, dh ; sal edi, 1 ; call qword ptr [rax]
0x00000000004ac69a : add byte ptr [rax], al ; test byte ptr [rcx], ah ; add al, dl ; test bh, al ; call qword ptr [rax]
0x00000000004abc9a : add byte ptr [rax], al ; test byte ptr [rdi], dl ; add al, ah ; pop rsp ; clc ; jmp qword ptr [rdi]
0x0000000000433359 : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x0000000000463f48 : add byte ptr [rax], al ; test rax, rax ; je 0x463f58 ; call rax
0x00000000004b0daa : add byte ptr [rax], al ; xchg eax, esp ; test al, 0 ; add byte ptr [rax], dl ; ja 0x4b0db7 ; call rsi
0x00000000004af6aa : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ecx ; add byte ptr [rax], al ; retf -6
0x00000000004b280e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; cld ; ret 0
0x00000000004b30b6 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000004ae24a : add byte ptr [rax], al ; xor al, 0x7d ; add byte ptr [rax], al ; mov al, 0xa2 ; stc ; call qword ptr [rbx]
0x00000000004ad82e : add byte ptr [rax], al ; xor byte ptr [rax], bl ; stc ; call qword ptr [rcx]
0x00000000004abe8e : add byte ptr [rax], al ; xor byte ptr [rsi - 8], ah ; call qword ptr [rdi]
0x0000000000413cdc : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000041304e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000406e0b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000484868 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000411584 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000409ed6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000481a21 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000004035f7 : add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000041971d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004010ad : add byte ptr [rax], bh ; leave ; ret
0x00000000004abe77 : add byte ptr [rax], bl ; clc ; jmp qword ptr [rbx]
0x00000000004b0977 : add byte ptr [rax], bl ; sti ; call rdx
0x00000000004aced7 : add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; clc ; jmp rcx
0x00000000004ac037 : add byte ptr [rax], ch ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rdx]
0x00000000004ade27 : add byte ptr [rax], ch ; sub cl, bh ; call qword ptr [rax]
0x00000000004ab607 : add byte ptr [rax], cl ; adc dh, bh ; call qword ptr [rax]
0x00000000004a6ff7 : add byte ptr [rax], cl ; hlt ; cmc ; call qword ptr [rax]
0x00000000004b0f97 : add byte ptr [rax], cl ; jg 0x4b0f9a ; call qword ptr [rax]
0x0000000000482a9e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x2349f9], 8 ; ret
0x0000000000482aa5 : add byte ptr [rax], cl ; ret
0x00000000004abe8f : add byte ptr [rax], dh ; clc ; call qword ptr [rdi]
0x00000000004ad82f : add byte ptr [rax], dh ; sbb cl, bh ; call qword ptr [rcx]
0x00000000004a82ff : add byte ptr [rax], dh ; sub dh, dh ; call qword ptr [rax]
0x000000000040e56a : add byte ptr [rax], dl ; add byte ptr [rax], al ; je 0x40e580 ; xor eax, eax ; ret
0x00000000004685b6 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004b0daf : add byte ptr [rax], dl ; ja 0x4b0db2 ; call rsi
0x0000000000488ae7 : add byte ptr [rax], dl ; retf 0x40
0x00000000004af9f8 : add byte ptr [rax], r8b ; add ah, bl ; xchg eax, edx ; add byte ptr [rax], al ; retf
0x00000000004b1f38 : add byte ptr [rax], r8b ; add byte ptr [rax + rdi*4], bl ; add byte ptr [rax], al ; retf
0x000000000049a982 : add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x44
0x000000000049afb2 : add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], dh ; retf 0x44
0x000000000049a9ea : add byte ptr [rax], r8b ; add byte ptr [rax], al ; add cl, bh ; retf 0x44
0x00000000004ad120 : add byte ptr [rax], r8b ; add byte ptr [rsp + rbp*2], cl ; add byte ptr [rax], al ; ret
0x000000000045dd9d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004601dd : add byte ptr [rax], r8b ; mov eax, 0x15 ; syscall
0x000000000045ffed : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000045d15d : add byte ptr [rax], r8b ; mov eax, 0xc9 ; syscall
0x000000000040c76d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000043d10d : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000042df2d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004201f5 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000045cda5 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x000000000042df6d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000487475 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d55d : add byte ptr [rax], r8b ; ret
0x0000000000484f7d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000409ed5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000431ad6 : add byte ptr [rbp + 0x14], dh ; mov eax, 0 ; syscall
0x0000000000431b36 : add byte ptr [rbp + 0x14], dh ; mov eax, 1 ; syscall
0x0000000000431a76 : add byte ptr [rbp + 0x14], dh ; mov eax, 2 ; syscall
0x0000000000431cc6 : add byte ptr [rbp + 0x14], dh ; mov eax, 3 ; syscall
0x00000000004333d6 : add byte ptr [rbp + 0x14], dh ; mov eax, 8 ; syscall
0x0000000000487a7b : add byte ptr [rbp + 0x1e], dh ; ret
0x000000000040a322 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000046b910 : add byte ptr [rbp + 0x35], dh ; add rsp, 8 ; ret
0x000000000046c357 : add byte ptr [rbp + 0x39], cl ; ret 0x8c0f
0x000000000044a48a : add byte ptr [rbp + 0x67], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000404f5a : add byte ptr [rbp + 0x74], dh ; jmp 0x404f6e
0x000000000046b1c0 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x38 ; ret
0x000000000047356f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000047345f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000043e335 : add byte ptr [rbp + rax - 0x18], dh ; ret
0x00000000004aeaab : add byte ptr [rbp + rax*4 - 0x57500000], dl ; cli ; call qword ptr [rdx]
0x00000000004308af : add byte ptr [rbp + rcx*4 + 0x40], cl ; add dword ptr [rbp + 0x39], ecx ; ret
0x000000000047f912 : add byte ptr [rbp + rcx*4 + 4], cl ; retf -0x74bf
0x00000000004a725b : add byte ptr [rbp + rcx], al ; add byte ptr [rax - 4], ah ; cmc ; call qword ptr [rdx]
0x00000000004b22b3 : add byte ptr [rbp + rdi*4 + 0x2f980000], bl ; cld ; call qword ptr [rax]
0x00000000004b2283 : add byte ptr [rbp + rdi*4], ch ; add al, ch ; jne 0x4b228f ; call qword ptr [rax]
0x00000000004870a8 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x000000000043335a : add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000041072f : add byte ptr [rbp - 0x6bf0be40], al ; ret
0x0000000000453626 : add byte ptr [rbp - 0x6e7af037], al ; retf
0x0000000000464fc3 : add byte ptr [rbp - 0x77], al ; ret 0x8944
0x0000000000407488 : add byte ptr [rbp - 0x77], cl ; ret
0x000000000041732d : add byte ptr [rbp - 0x77], cl ; retf
0x0000000000448b39 : add byte ptr [rbp - 0x77], cl ; retf 0x3145
0x0000000000481256 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040a47f : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x95 ; ret 0x8445
0x000000000041ca89 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000481a3d : add byte ptr [rbx + 0x235a1c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000468805 : add byte ptr [rbx + 0x24c9630d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000046475d : add byte ptr [rbx + 0x2533ac15], cl ; add bh, dh ; ret 0x804
0x0000000000430c4e : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000409308 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000040e41a : add byte ptr [rbx + 0x2a640305], cl ; add byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x000000000040e2c8 : add byte ptr [rbx + 0x2a836805], al ; add byte ptr [rcx], al ; ret
0x000000000040d7a5 : add byte ptr [rbx + 0x2a8e1705], al ; add byte ptr [rcx], al ; ret
0x00000000004337e8 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045d183 : add byte ptr [rbx + 0x460f18fa], al ; retf 0x3cba
0x000000000042df3f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000042da6f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x00000000004864e7 : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043098d : add byte ptr [rbx + 0x49], bl ; lea eax, dword ptr [rax + 1] ; pop rbp ; ret
0x000000000042820f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004652a6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044a1b2 : add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x0000000000436865 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000409b18 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040041f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a9f1 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b2ff : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000048670f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x00000000004b35a8 : add byte ptr [rbx + 0xe], bl ; adc byte ptr [rbx + 0xa4a0202], al ; ret
0x0000000000437747 : add byte ptr [rbx + 0xf008554], cl ; retf 0x1489
0x000000000043f5ca : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004ac033 : add byte ptr [rbx + rbx*2], bl ; add byte ptr [rax], al ; sub byte ptr [rbp - 8], ch ; call qword ptr [rdx]
0x0000000000433bcd : add byte ptr [rbx + rcx*4 + 0x2d], cl ; ret
0x0000000000474607 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000481557 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000468ed3 : add byte ptr [rbx + rcx*4 + 0x7d], cl ; ror byte ptr [rbx + rcx*4 + 0x2d], 0xe1 ; ret 0x24
0x000000000046b163 : add byte ptr [rbx + rcx*4 + 5], al ; retf 0x24
0x00000000004b307b : add byte ptr [rbx + rcx*8], ah ; add byte ptr [rax + 0x19], ah ; std ; call rsp
0x00000000004af823 : add byte ptr [rbx + rdx*4], cl ; add byte ptr [rax], al ; pop rax ; sar dl, 1 ; call rax
0x00000000004ad8bb : add byte ptr [rbx + rsi*2 + 0x1d400000], ah ; stc ; call qword ptr [rdi]
0x00000000004ad8d3 : add byte ptr [rbx + rsi*2 + 0x1d480000], bh ; stc ; call qword ptr [rcx]
0x00000000004ad82b : add byte ptr [rbx + rsi*2], dl ; add byte ptr [rax], al ; xor byte ptr [rax], bl ; stc ; call qword ptr [rcx]
0x000000000044ad1e : add byte ptr [rbx - 0x10eb43], al ; call qword ptr [rax]
0x000000000044b50a : add byte ptr [rbx - 0x113f43], al ; call qword ptr [rax]
0x000000000047e3e7 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47e3fa ; ret
0x000000000043f257 : add byte ptr [rbx - 0x387cfe40], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x0000000000409287 : add byte ptr [rbx - 0x3b7cb7fe], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000430cbf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x0000000000430cb8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000430cb1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x0000000000430caa : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000430ca3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000430cc6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000043da4d : add byte ptr [rbx - 0x3d], bl ; test esi, esi ; je 0x43da21 ; pop rbx ; ret
0x0000000000458d96 : add byte ptr [rbx - 0x76b7df18], al ; retf -0x76b8
0x0000000000407b44 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cbcb0
0x0000000000408334 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cc4a0
0x000000000042ff26 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000466c7f : add byte ptr [rbx - 0x7cb7fbbd], cl ; ret 0x4803
0x00000000004abb80 : add byte ptr [rbx - 8], dl ; call rcx
0x000000000043352c : add byte ptr [rbx], al ; add byte ptr [rax], al ; call 6
0x00000000004651fa : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004b1f6c : add byte ptr [rbx], ch ; cld ; jmp qword ptr [rdx]
0x000000000044e8bd : add byte ptr [rbx], cl ; add byte ptr [rax], al ; jmp 0x44ab4d
0x000000000048a5c0 : add byte ptr [rbx], cl ; stc ; call qword ptr [rax]
0x00000000004493e4 : add byte ptr [rcx + 0x29], al ; ret
0x000000000043a5ac : add byte ptr [rcx + 0x29], cl ; ret
0x0000000000477b55 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000046dccf : add byte ptr [rcx + 0x39], cl ; ret
0x000000000043cdaf : add byte ptr [rcx + 0x39], cl ; retf
0x0000000000461043 : add byte ptr [rcx + 0x39], cl ; retf -0x7df1
0x000000000041a116 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044fab9 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x000000000040a7f2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000040c9f6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000410713 : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x0000000000400d60 : add byte ptr [rcx + 0x5c], al ; ret
0x000000000044a3c1 : add byte ptr [rcx + 0x5d], al ; ret
0x000000000044a2f3 : add byte ptr [rcx + 0x5e], al ; ret
0x0000000000462e1f : add byte ptr [rcx + 0x5f], al ; ret
0x000000000042354e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004033f9 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x00000000004820c2 : add byte ptr [rcx + 0x63], cl ; or al, 0x8f ; add rcx, r15 ; jmp rcx
0x0000000000421dcc : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000042ddb8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004652a3 : add byte ptr [rcx + 0x6b], dl ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000040e529 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8348
0x000000000046e83c : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x850f
0x000000000043062f : add byte ptr [rcx + 1], cl ; ret
0x000000000045d2a1 : add byte ptr [rcx + 1], cl ; retf 0x488d
0x000000000045bcbf : add byte ptr [rcx + 1], cl ; ror byte ptr [rcx + 1], cl ; retf 0x394d
0x00000000004aced3 : add byte ptr [rcx + rbp*2 - 0x54e80000], bh ; clc ; jmp rcx
0x00000000004ace6b : add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax - 0x59], dh ; clc ; call qword ptr [rax]
0x00000000004abe73 : add byte ptr [rcx + rbx*2], bl ; add byte ptr [rax], bl ; clc ; jmp qword ptr [rbx]
0x00000000004abe8b : add byte ptr [rcx + rbx*2], dh ; add byte ptr [rax], dh ; clc ; call qword ptr [rdi]
0x000000000049505f : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x0000000000486306 : add byte ptr [rcx + rcx*4 + 0x35], cl ; retf 0x2311
0x00000000004201f7 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000486a0a : add byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x000000000043ee08 : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, 3 ; syscall
0x000000000047fb0f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000040abbf : add byte ptr [rcx + rcx*4 - 0x18], cl ; sub rax, rbx ; jmp 0x40ab9b
0x0000000000403844 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x400306
0x0000000000403843 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x400307
0x0000000000484ccf : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, rbx ; call r15
0x0000000000408ec0 : add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x000000000044e11a : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x45a3e6
0x0000000000455fc1 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x412a96
0x00000000004360ec : add byte ptr [rcx + rcx*4 - 9], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000004b2e2b : add byte ptr [rcx + rcx*8], dl ; add byte ptr [rax], al ; jo 0x4b2e4f ; std ; jmp rsp
0x00000000004a6e43 : add byte ptr [rcx + rcx], ch ; add byte ptr [rax], al ; cmp bl, ch ; cmc ; jmp rbx
0x00000000004ade3b : add byte ptr [rcx + rdi*2], ah ; add byte ptr [rax], al ; and byte ptr [rax], ch ; stc ; call qword ptr [rdx]
0x00000000004ade23 : add byte ptr [rcx + rdi*2], cl ; add byte ptr [rax], al ; sub byte ptr [rax], ch ; stc ; call qword ptr [rax]
0x00000000004b3653 : add byte ptr [rcx + rdx*8], bh ; add byte ptr [rax], al ; mov byte ptr [rdi], ch ; std ; call qword ptr [rbx]
0x00000000004a7243 : add byte ptr [rcx - 0x3980000], ch ; cmc ; call qword ptr [rax]
0x000000000045f981 : add byte ptr [rcx - 0x3b7cb739], cl ; or cl, ch ; ret
0x0000000000482ae9 : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x50b2100
0x0000000000484357 : add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc2718fa5
0x000000000044aa29 : add byte ptr [rcx - 0x42], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x0000000000404db1 : add byte ptr [rcx - 0x43], al ; add byte ptr fs:[rax], al ; add bl, ch ; retf
0x0000000000480740 : add byte ptr [rcx - 0x46], al ; retf
0x0000000000481367 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x8175
0x00000000004812bd : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000403697 : add byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf -0x2d77
0x0000000000406b5f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000004334e7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000043f17e : add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x00000000004600cf : add byte ptr [rcx - 0x77], al ; retf 0x6348
0x0000000000462b5f : add byte ptr [rcx - 0x77], al ; xchg eax, esi ; sub byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004555dc : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x00000000004673b5 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rdi + rcx + 0x44] ; retf -0x74b8
0x000000000045be1f : add byte ptr [rcx - 0x77], cl ; ret
0x000000000044f023 : add byte ptr [rcx - 0x77], cl ; ret 0x3ce9
0x0000000000404d57 : add byte ptr [rcx - 0x77], cl ; ret 0x75e9
0x000000000044dce0 : add byte ptr [rcx - 0x77], cl ; ret 0x7fe9
0x000000000046d4c3 : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000418ad3 : add byte ptr [rcx - 0x77], cl ; retf
0x000000000046262f : add byte ptr [rcx - 0x77], cl ; retf -0x3015
0x000000000043342f : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x00000000004324bf : add byte ptr [rcx - 0x77], cl ; retf 0x9b8
0x0000000000447b6f : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x55e8
0x00000000004ac69b : add byte ptr [rcx - 0x7b300000], al ; clc ; call qword ptr [rax]
0x000000000043d964 : add byte ptr [rcx - 0x7d], al ; ret
0x000000000040b89f : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x000000000047549b : add byte ptr [rcx - 0x7d], cl ; jmp 0x4754b7
0x0000000000479c1b : add byte ptr [rcx - 0x7d], cl ; jmp 0x479c37
0x000000000047a21b : add byte ptr [rcx - 0x7d], cl ; jmp 0x47a237
0x000000000047a51b : add byte ptr [rcx - 0x7d], cl ; jmp 0x47a537
0x000000000047a81b : add byte ptr [rcx - 0x7d], cl ; jmp 0x47a837
0x000000000047ab1b : add byte ptr [rcx - 0x7d], cl ; jmp 0x47ab37
0x000000000047ae1b : add byte ptr [rcx - 0x7d], cl ; jmp 0x47ae37
0x00000000004139b0 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004162df : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000414eaf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000410e81 : add byte ptr [rcx - 0x7d], cl ; retf 0x4d01
0x000000000040b857 : add byte ptr [rcx - 0x80], al ; retf
0x000000000047e3ea : add byte ptr [rcx - 0xcfd8130], cl ; ret
0x000000000048a684 : add byte ptr [rcx - 7], ch ; jmp qword ptr [rax]
0x0000000000419852 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000419878 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000401191 : add byte ptr [rcx], 0 ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004a786e : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000004a97de : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf6ab
0x00000000004aebc6 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xfaaa
0x00000000004a76b6 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; retf -0x9fa
0x0000000000401623 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000046880b : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400f69 : add byte ptr [rcx], al ; ret
0x00000000004013d8 : add byte ptr [rcx], bh ; ret
0x0000000000405aed : add byte ptr [rcx], bh ; ret 0x840f
0x000000000040135e : add byte ptr [rcx], bh ; ret 0x860f
0x000000000041128b : add byte ptr [rcx], bh ; ret 0xa7e
0x000000000048004f : add byte ptr [rcx], bh ; retf
0x000000000045b2e4 : add byte ptr [rcx], ch ; ret
0x000000000049a97f : add byte ptr [rcx], cl ; ret 0x44
0x0000000000485ef9 : add byte ptr [rcx], cl ; ret 0x5389
0x000000000046b7ac : add byte ptr [rcx], cl ; ret 0xd089
0x000000000046b91f : add byte ptr [rcx], cl ; retf -0x3fcf
0x000000000048af2c : add byte ptr [rcx], dh ; cli ; call qword ptr [rax]
0x0000000000406e0c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000484869 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x000000000045b2dd : add byte ptr [rcx], dh ; ret
0x00000000004602ed : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd6 ; ja 0x460309 ; ret
0x00000000004386ab : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000413b41 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004748d6 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000481a22 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000043a5a1 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret
0x00000000004349ab : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000046b07e : add byte ptr [rcx], dh ; shr al, 0x8a ; retf
0x0000000000462406 : add byte ptr [rcx], dh ; shr al, 0xb2 ; pop rax ; add byte ptr [rax], al ; jmp 0x4623e4
0x00000000004a57ac : add byte ptr [rcx], dh ; std ; jmp rax
0x0000000000405aec : add byte ptr [rcx], dil ; ret 0x840f
0x0000000000411bc5 : add byte ptr [rdi + 0x488ce2], bh ; call 0x40e688
0x0000000000411bc4 : add byte ptr [rdi + 0x488ce2], dil ; call 0x40e689
0x0000000000411bf7 : add byte ptr [rdi + 0x488cf8], bh ; call 0x40e688
0x0000000000411bf6 : add byte ptr [rdi + 0x488cf8], dil ; call 0x40e689
0x0000000000411c5e : add byte ptr [rdi + 0x489c30], bh ; call 0x40e688
0x0000000000411c5d : add byte ptr [rdi + 0x489c30], dil ; call 0x40e689
0x0000000000411bde : add byte ptr [rdi + 0x489c80], bh ; call 0x40e688
0x0000000000411bdd : add byte ptr [rdi + 0x489c80], dil ; call 0x40e689
0x0000000000426015 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000004363ea : add byte ptr [rdi + 0x6b7008], bh ; call rax
0x0000000000402cbe : add byte ptr [rdi + 0x6b7060], bh ; call rax
0x0000000000474bf1 : add byte ptr [rdi + 0x6b7300], bh ; call rax
0x00000000004843f4 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048441c : add byte ptr [rdi + 1], bh ; call rax
0x000000000049585f : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x000000000040b65f : add byte ptr [rdi + rcx - 0x42], cl ; retf -0x9be
0x00000000004abc9b : add byte ptr [rdi + rdx*2 + 0x5ce00000], al ; clc ; jmp qword ptr [rdi]
0x00000000004abcb3 : add byte ptr [rdi + rdx*2 + 0x5cf80000], bl ; clc ; call qword ptr [rbx]
0x00000000004abc23 : add byte ptr [rdi + rdx*2], cl ; add byte ptr [rax], al ; mov byte ptr [rbp - 8], dl ; jmp rax
0x00000000004acca3 : add byte ptr [rdi - 0x59980000], cl ; std ; jmp qword ptr [rdx]
0x000000000044a456 : add byte ptr [rdi - 0x73], dh ; add dword ptr [rax + 0x63], ecx ; retf 0x589
0x00000000004ae24b : add byte ptr [rdi*2 - 0x5d500000], dh ; stc ; call qword ptr [rbx]
0x00000000004b2253 : add byte ptr [rdi*4 + 0x56480000], bh ; cld ; call qword ptr [rax]
0x00000000004279aa : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000428a0f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000045dc42 : add byte ptr [rdi], cl ; mov bh, 0x55 ; ret 0xf41
0x0000000000428a7f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000046c46f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000043986d : add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rax - 0x77] ; ret 0x8349
0x0000000000439b4c : add byte ptr [rdi], cl ; mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x0000000000404ae8 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000452912 : add byte ptr [rdi], cl ; mov dh, 0x58 ; add ch, cl ; retf -0x2a
0x000000000041614f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000421ddf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004198ff : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042059f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041978f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041977f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000041976f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000430ba7 : add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000402d7d : add byte ptr [rdi], cl ; ret 0x8d49
0x000000000046fdb9 : add byte ptr [rdi], cl ; ret 0xc801
0x0000000000403484 : add byte ptr [rdi], cl ; retf -0x74bb
0x000000000043774b : add byte ptr [rdi], cl ; retf 0x1489
0x00000000004309eb : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000004449b9 : add byte ptr [rdi], cl ; test ah, dh ; retf
0x00000000004449ac : add byte ptr [rdi], cl ; test dh, bl ; retf
0x00000000004101ca : add byte ptr [rdi], cl ; test dword ptr [rbx + 0x43], ebx ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040edd9 : add byte ptr [rdi], cl ; test dword ptr [rdx - 0xcffffaa], eax ; ret
0x000000000040d7e1 : add byte ptr [rdi], cl ; test eax, ebp ; add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000040bd56 : add byte ptr [rdi], cl ; test ecx, esi ; sbb al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000410aae : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000411a0b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x948
0x000000000045d4a3 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000463bc8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x000000000044a0c4 : add byte ptr [rdi], cl ; xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000456a97 : add byte ptr [rdi], cl ; xchg ecx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042da2f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000042c27f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000040b006 : add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x0000000000419df9 : add byte ptr [rdx + rax*2], dh ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000004b0f93 : add byte ptr [rdx + rbp*4], bh ; add byte ptr [rax], cl ; jg 0x4b0f9e ; call qword ptr [rax]
0x0000000000484637 : add byte ptr [rdx + rbp*8 + 0x48], dh ; add esp, 8 ; ret
0x0000000000495c5f : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x00000000004625ff : add byte ptr [rdx + rdx*8 - 0x76b7c38c], al ; retf
0x000000000048a6a4 : add byte ptr [rdx - 7], dh ; jmp qword ptr [rax]
0x000000000043f6ce : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x00000000004ac3a8 : add byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x10 ; add dword ptr [rdx], 0x59 ; ret
0x000000000048af54 : add byte ptr [rdx], dh ; cli ; jmp qword ptr [rax]
0x000000000049afb7 : add byte ptr [rdx], dh ; retf 0x44
0x0000000000474a70 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000433587 : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000004220d4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000419684 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000045a53f : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000004a6b73 : add byte ptr [rsi + rax], bl ; add al, bh ; add edi, esi ; call rdi
0x00000000004b2363 : add byte ptr [rsi + rdi*4], cl ; add al, ch ; mov ah, 0xfc ; call qword ptr [rax]
0x00000000004abb7b : add byte ptr [rsi + rdx*2], ah ; add byte ptr [rax], al ; push rbx ; clc ; call rcx
0x00000000004a5e5f : add byte ptr [rsi - 0x3d], cl ; std ; call qword ptr [rsi - 0x3d]
0x000000000043c4b3 : add byte ptr [rsi - 0x3f], ah ; retf 0x6608
0x000000000043251d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1c ; syscall
0x00000000004324fd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa ; syscall
0x00000000004ada33 : add byte ptr [rsi*2 + 0x1de80000], bl ; stc ; jmp rsi
0x00000000004ac873 : add byte ptr [rsi], 0xd ; fstp dword ptr [rsi + 0xd1cfff8] ; ret
0x00000000004a7873 : add byte ptr [rsi], 0xd ; ret
0x00000000004a97e3 : add byte ptr [rsi], 0xd ; ret 0xf6ab
0x00000000004aebcb : add byte ptr [rsi], 0xd ; ret 0xfaaa
0x00000000004a76bb : add byte ptr [rsi], 0xd ; retf -0x9fa
0x000000000040041c : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048af84 : add byte ptr [rsi], dh ; cli ; jmp qword ptr [rax]
0x0000000000454021 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add cl, ch ; pop rsi ; ret
0x00000000004ad123 : add byte ptr [rsp + rbp*2], cl ; add byte ptr [rax], al ; ret
0x00000000004b11cb : add byte ptr [rsp + rbp*4 - 0x60c00000], dh ; sti ; jmp qword ptr [rdx]
0x00000000004b111b : add byte ptr [rsp + rbp*4], al ; add byte ptr [rax], al ; nop ; cdq ; sti ; call rcx
0x00000000004ac1cb : add byte ptr [rsp + rbx*2 + 0x72600000], dh ; clc ; call qword ptr [rdi]
0x00000000004ac16b : add byte ptr [rsp + rbx*2], dl ; add al, ah ; jno 0x4ac173 ; call qword ptr [rcx]
0x000000000049545f : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x00000000004ab1a3 : add byte ptr [rsp + rcx*2 - 0x71180000], cl ; idiv bh ; retf 1
0x00000000004af16b : add byte ptr [rsp + rcx*4], dl ; add byte ptr [rax - 0x4a], dh ; cli ; call qword ptr [rax]
0x00000000004ab9c3 : add byte ptr [rsp + rdx*2 + 0x50b80000], ch ; clc ; call qword ptr [rax]
0x00000000004b0973 : add byte ptr [rsp], bl ; add byte ptr [rax], bl ; sti ; call rdx
0x0000000000431cd9 : add byte ptr cs:[rax], al ; ret
0x0000000000411fc2 : add byte ptr es:[rax], al ; jmp 0x411fda
0x00000000004324d3 : add byte ptr es:[rax], al ; ret
0x000000000044a489 : add byte ptr es:[rbp + 0x67], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000404db4 : add byte ptr fs:[rax], al ; add bl, ch ; retf
0x0000000000433357 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x00000000004a5e5c : add byte ptr fs:[rax], al ; add byte ptr [rsi - 0x3d], cl ; std ; call qword ptr [rsi - 0x3d]
0x000000000040b2e0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000409560 : add ch, al ; retf -3
0x000000000049586b : add ch, al ; sldt word ptr [rax] ; enter 0xf, 0 ; retf
0x000000000048aeec : add ch, bl ; stc ; call qword ptr [rax]
0x00000000004a447c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a447d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000045d350 : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000044706a : add ch, byte ptr [rcx] ; retf -0x2e77
0x000000000045d305 : add ch, byte ptr [rcx] ; retf -0x7abb
0x000000000045ab5a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045e36d : add ch, cl ; add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000452a3b : add ch, cl ; ret
0x000000000045073c : add ch, cl ; ret 0xb
0x0000000000470525 : add ch, cl ; ret 0xffe6
0x0000000000452916 : add ch, cl ; retf -0x2a
0x0000000000487cdf : add ch, cl ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x401a
0x000000000048ae98 : add cl, 0xf9 ; inc dword ptr [rax] ; ret
0x000000000048b8f7 : add cl, al ; sbb byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000049a9ef : add cl, bh ; retf 0x44
0x00000000004a384a : add cl, bl ; retf -0x156f
0x00000000004041c2 : add cl, bpl ; retf -0xd
0x000000000042c2a7 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000047daa1 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000046c340 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000459e2a : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000464098 : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x0000000000425c2a : add cl, byte ptr [rax + 0x39] ; retf -0x7df1
0x000000000044a37d : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000471ab4 : add cl, byte ptr [rax + 0xf] ; mov esi, 0xf41026b ; xchg eax, esp ; ret 0x850f
0x0000000000447264 : add cl, byte ptr [rax + 1] ; ret 0x8348
0x00000000004050c2 : add cl, byte ptr [rax + 1] ; retf
0x00000000004099cc : add cl, byte ptr [rax - 0x73] ; add ecx, ebp ; retf
0x00000000004104e9 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x000000000042c2a8 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000042c215 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000448af1 : add cl, byte ptr [rax - 0x77] ; ret 0xf748
0x000000000044b633 : add cl, byte ptr [rax - 0x77] ; retf -0x76b8
0x0000000000458959 : add cl, byte ptr [rax - 0x77] ; retf 0x39e9
0x000000000040d442 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000004607a5 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000416fa0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004585bb : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000004009f3 : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x0000000000458a53 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000417003 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000410cc8 : add cl, byte ptr [rax - 0x7d] ; retf 0x4c01
0x0000000000428852 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000046c319 : add cl, byte ptr [rcx + 0x29] ; ret 0x8b48
0x0000000000471857 : add cl, byte ptr [rcx + 0x39] ; ror dword ptr [rdi], -0x79 ; retf
0x00000000004073b8 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x4073d4
0x0000000000431bd7 : add cl, byte ptr [rdi] ; ret 0x48c3
0x0000000000403e1a : add cl, byte ptr [rdi] ; retf -0x76bf
0x00000000004b35ae : add cl, byte ptr [rdx + 0xa] ; ret
0x00000000004535c6 : add cl, ch ; hlt ; retf
0x0000000000454025 : add cl, ch ; pop rsi ; ret
0x0000000000407c53 : add cl, ch ; ret
0x000000000047f1fd : add cl, ch ; ret 0xfff3
0x0000000000482922 : add cl, ch ; ret 0xfff7
0x000000000043c126 : add cl, ch ; ret 0xfffe
0x0000000000453f55 : add cl, ch ; ret 0xffff
0x00000000004046c2 : add cl, ch ; retf
0x00000000004521f0 : add cl, ch ; retf -0x21
0x0000000000471987 : add cl, ch ; retf -0xa
0x00000000004041c3 : add cl, ch ; retf -0xd
0x000000000044b976 : add cl, ch ; retf -0xf
0x0000000000406ea5 : add cl, ch ; retf -2
0x00000000004010b2 : add cl, cl ; ret
0x00000000004a3703 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x000000000048ac28 : add cl, dl ; stc ; push qword ptr [rax - 0x30] ; stc ; jmp rsi
0x00000000004a3702 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x000000000049926b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000004986c7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a6f7c : add dh, bl ; cmc ; jmp qword ptr [rdx]
0x0000000000428a03 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043246b : add dh, bl ; ret
0x0000000000464e9e : add dh, byte ptr [rcx + rdx - 0x7d] ; retf 0x4108
0x000000000044fd27 : add dh, dh ; ret
0x0000000000419fc8 : add dh, dh ; ret 0x7404
0x0000000000409eb7 : add dh, dh ; ret 0x7420
0x000000000042e957 : add dh, dh ; ret 0x7501
0x000000000042e964 : add dh, dh ; ret 0x7502
0x000000000042e971 : add dh, dh ; ret 0x7504
0x0000000000464e8c : add dh, dh ; ret 0x7508
0x000000000042e929 : add dh, dh ; ret 0x7510
0x000000000042e936 : add dh, dh ; ret 0x7520
0x000000000042e943 : add dh, dh ; ret 0x7540
0x00000000004ae66c : add dl, al ; stc ; jmp qword ptr [rdx]
0x00000000004617bb : add dl, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004ab6ac : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x000000000046c472 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000042da31 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000440c5a : add dword ptr [rax + 0x29], ecx ; ret 0x148
0x000000000045fd8c : add dword ptr [rax + 0x38], edi ; syscall
0x000000000040f96b : add dword ptr [rax + 0x39], ecx ; ret
0x000000000045bce4 : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000045bbbd : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x0000000000473e6d : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000046d84a : add dword ptr [rax + 0x39], ecx ; ret 0x8e0f
0x000000000040725f : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x0000000000434437 : add dword ptr [rax + 0x39], ecx ; retf -0x1c8b
0x000000000045e292 : add dword ptr [rax + 0x39], ecx ; retf -0x378e
0x0000000000484ec6 : add dword ptr [rax + 0x63], ecx ; ret
0x000000000044a45b : add dword ptr [rax + 0x63], ecx ; retf 0x589
0x0000000000406166 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000046022e : add dword ptr [rax + rax], edx ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000004a32fb : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4a3367 ; retf
0x00000000004023cb : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000042c281 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000046850d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x000000000042c212 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000040c673 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000045b211 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000438a86 : add dword ptr [rax - 0x77], ecx ; retf
0x000000000043a48d : add dword ptr [rax - 0x77], ecx ; retf 0x394c
0x0000000000404aec : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000040359a : add dword ptr [rax - 0x7d], ecx ; ret 0x3908
0x0000000000439314 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000043fb91 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000437b16 : add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x0000000000433e6d : add dword ptr [rax - 0x7d], ecx ; ret 0x4838
0x00000000004385d1 : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000043fe31 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x000000000043e367 : add dword ptr [rax - 0x7d], ecx ; ret 0x8308
0x000000000043f25d : add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x000000000045d863 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000046786c : add dword ptr [rax - 0x7d], ecx ; ret 0xbb01
0x0000000000482966 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rbx], 0xeb ; ret
0x00000000004729e3 : add dword ptr [rax], 0x39490000 ; ret
0x0000000000409fa6 : add dword ptr [rax], eax ; add al, ah ; test dword ptr [rax], ecx ; pop rbx ; ret
0x0000000000401192 : add dword ptr [rax], eax ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000407e16 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000454293 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; retf
0x000000000044625e : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000043af57 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; retf
0x0000000000463fda : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000482472 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043f1cd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000484265 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004127f7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000482154 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000404acd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000403bf2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000434431 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000416d7d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040e47a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000041f7ef : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416cd1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043cd91 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004986ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000049787a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004976a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049769a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000497e32 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004976da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004976d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000497e72 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004843f6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x00000000004017f8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000041084c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x410819
0x0000000000484c7d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000474682 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x00000000004334ce : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x0000000000431393 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000004848e8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000458bea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000044a3be : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x000000000044a2f0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x0000000000462e1c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r15 ; ret
0x0000000000436955 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040ca51 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000434957 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000431b3a : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000418908 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004841f5 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400c59 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000434a43 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043a5aa : add dword ptr [rax], eax ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000043cdad : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; retf
0x000000000045be1d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000046262d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; retf -0x3015
0x00000000004139ae : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004386a9 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000402cbc : add dword ptr [rax], eax ; add byte ptr [rdi + 0x6b7060], bh ; call rax
0x0000000000403482 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; retf -0x74bb
0x0000000000405f98 : add dword ptr [rax], eax ; add cl, ch ; retf
0x0000000000484059 : add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000042e955 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000042e962 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000042e96f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000042e927 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042e934 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000042e941 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000414ab6 : add dword ptr [rax], eax ; ret
0x00000000004308b3 : add dword ptr [rbp + 0x39], ecx ; ret
0x00000000004a3844 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000047fb05 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000430992 : add dword ptr [rbp - 0x3d], ebx ; xor eax, eax ; ret
0x000000000040e5a7 : add dword ptr [rbp - 0x77], ecx ; ret
0x00000000004a3c2a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x00000000004288c2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004a280a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test dl, bh ; retf -0x2081
0x0000000000411285 : add dword ptr [rbx + 0x2a356405], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000405483 : add dword ptr [rbx + 0xf450afa], eax ; ret 0x8348
0x000000000046880c : add dword ptr [rbx - 0x3d], ebx ; mov eax, 1 ; pop rbx ; ret
0x000000000043f25a : add dword ptr [rbx - 0x7cb7fe39], eax ; ret 0x8310
0x00000000004b389a : add dword ptr [rbx], eax ; ret
0x00000000004a6d1a : add dword ptr [rbx], eax ; retf 0xa02
0x0000000000418b37 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x000000000040c6c9 : add dword ptr [rcx - 0x3b7cb7fd], ecx ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000045d313 : add dword ptr [rcx - 0x73], eax ; push rcx ; add eax, dword ptr [rdi + rcx + 0x48] ; retf -0x6c46
0x000000000042c2b1 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000456ccd : add dword ptr [rcx - 0x77], ecx ; ret 0x2ee9
0x000000000043d968 : add dword ptr [rcx - 0x7d], ecx ; shr dword ptr [rax + 0x41], 0x39 ; ret
0x00000000004600da : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000047eb8c : add dword ptr [rcx], edi ; ret 0xdf75
0x00000000004a3755 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x000000000043addc : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000043aa31 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000042088c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b10dd : add dword ptr [rdi], 0x48 ; or eax, 0x3520303 ; ret
0x00000000004a7064 : add dword ptr [rdi], 3 ; retf
0x00000000004353ad : add dword ptr [rdi], ecx ; test al, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x49f1
0x000000000044ea70 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x16000028], ebx ; retf -0x40
0x000000000047d832 : add dword ptr [rdx + 0x2b], 0xd7748104 ; ret
0x0000000000481a7b : add dword ptr [rdx + rax*2], 1 ; ret
0x0000000000446086 : add dword ptr [rdx + rdx*8 - 0x41f0ea8c], eax ; retf -0x30c7
0x00000000004a342f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004afe9c : add dword ptr [rdx], 0x4a ; ret
0x00000000004ab204 : add dword ptr [rdx], 0x51 ; ret
0x00000000004ac3ad : add dword ptr [rdx], 0x59 ; ret
0x00000000004ab20d : add dword ptr [rdx], 0x65 ; ret
0x000000000040e2c9 : add dword ptr [rip + 0x2a8368], 1 ; ret
0x000000000040d7a6 : add dword ptr [rip + 0x2a8e17], 1 ; ret
0x00000000004a6e16 : add dword ptr [rsi + rax*2], 0xe ; xor byte ptr [rdx], al ; retf
0x000000000047fc57 : add dword ptr [rsi - 0x73], ecx ; jl 0x47fc5c ; or byte ptr [rax - 0x77], cl ; ret
0x000000000042c292 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004aabf0 : add dword ptr [rsi], 2 ; fimul word ptr [rdx] ; ret
0x00000000004ab6ad : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000004a786f : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000004a97df : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf6ab
0x00000000004aebc7 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xfaaa
0x00000000004a76b7 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; retf -0x9fa
0x0000000000440b16 : add dword ptr [rsp + rsi*2], eax ; retf
0x000000000047b0c7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a436 : add eax, 0x11f55 ; ret
0x0000000000416f46 : add eax, 0x13c95 ; ret
0x0000000000419828 : add eax, 0x15373 ; ret
0x0000000000414ab3 : add eax, 0x19dc8 ; ret
0x000000000041980c : add eax, 0x1f ; ret
0x0000000000481c01 : add eax, 0x235f72 ; ret
0x000000000046802c : add eax, 0x24f677 ; mov qword ptr [rsi], rax ; ret
0x0000000000467f5a : add eax, 0x24f751 ; add rsp, 8 ; ret
0x000000000045ded0 : add eax, 0x259e03 ; add rsp, 8 ; ret
0x000000000043f5c6 : add eax, 0x27646d ; je 0x43f5d8 ; ret
0x000000000043d302 : add eax, 0x279d29 ; ret
0x00000000004358e2 : add eax, 0x282341 ; ret
0x0000000000434971 : add eax, 0x283252 ; test eax, eax ; je 0x434989 ; ret
0x00000000004123d1 : add eax, 0x2a424e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040d722 : add eax, 0x2a6979 ; ret
0x000000000040e2ca : add eax, 0x2a8368 ; add ebx, esi ; ret
0x000000000040d806 : add eax, 0x2a8db9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004016db : add eax, 0x2b2990 ; xor eax, eax ; ret
0x0000000000400d5c : add eax, 0x2b4367 ; pop r12 ; ret
0x0000000000400f65 : add eax, 0x2b4c15 ; add ebx, esi ; ret
0x000000000047060f : add eax, 0x30414 ; jmp 0x4705de
0x00000000004ab6ab : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000474a71 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x000000000042dac8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000042c2f8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000042dfc6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000042db49 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042c339 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000494c89 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x000000000049925d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000475133 : add eax, 0x5c415d5b ; ret
0x000000000049926d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000044a487 : add eax, 0x750026cd ; mov eax, edx ; pop rbx ; ret
0x000000000041a562 : add eax, 0x79 ; ret
0x000000000041696d : add eax, 0x83480000 ; ret 0x4910
0x000000000041dde1 : add eax, 0x83480000 ; ret 0xe910
0x00000000004168c1 : add eax, 0x83480000 ; ret 0xeb10
0x000000000042dacb : add eax, 0x8428d48 ; ret
0x0000000000419820 : add eax, 0x858b ; ret
0x0000000000418488 : add eax, 0x894d0000 ; retf
0x000000000046f99c : add eax, 0xb8480000 ; retf -2
0x0000000000468bcf : add eax, 0xba0049e6 ; ret
0x0000000000437371 : add eax, 0xbe000000 ; stc ; ret
0x0000000000422e0a : add eax, 0xc0310000 ; ret
0x000000000042db4d : add eax, 0xc428d48 ; ret
0x000000000042e62d : add eax, 0xc478d48 ; ret
0x000000000046d16c : add eax, 0xc7480000 ; ret
0x000000000043c123 : add eax, 0xe9000000 ; ret 0xfffe
0x00000000004288b3 : add eax, 0xf7f0ff3 ; ret
0x0000000000467867 : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0xbb01
0x000000000046b40a : add eax, 0xfffffff8 ; ret
0x000000000045c3a1 : add eax, 1 ; ret
0x0000000000435712 : add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x000000000045c398 : add eax, 2 ; ret
0x0000000000482968 : add eax, 3 ; jmp 0x482934
0x000000000045c3b1 : add eax, 3 ; ret
0x0000000000414d16 : add eax, 5 ; ret
0x000000000041a5c5 : add eax, 6 ; ret
0x0000000000486aec : add eax, 8 ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x000000000043f629 : add eax, dword ptr [0] ; ret
0x0000000000444586 : add eax, dword ptr [rax] ; add al, ch ; ret 0x16c
0x000000000043352d : add eax, dword ptr [rax] ; add al, ch ; retf
0x0000000000455265 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000416b0d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041df81 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416b31 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000458f52 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6917
0x00000000004588ea : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0xf17
0x000000000045c3f3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000400413 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000464fc1 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], al ; ret 0x8944
0x000000000047944a : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004334e5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000047ae19 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x47ae39
0x00000000004309e9 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x0000000000433585 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000464e8a : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7508
0x00000000004688d1 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7510
0x00000000004143b7 : add eax, dword ptr [rax] ; add rsp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x0000000000407614 : add eax, dword ptr [rax] ; add rsp, 0xd8 ; ret
0x0000000000470612 : add eax, dword ptr [rax] ; jmp 0x4705db
0x00000000004360eb : add eax, dword ptr [rax] ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000435a66 : add eax, dword ptr [rax] ; mov rdi, rbx ; call r15
0x0000000000430c30 : add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000430c53 : add eax, dword ptr [rax] ; ret
0x000000000043ef38 : add eax, dword ptr [rax] ; syscall
0x00000000004b282b : add eax, dword ptr [rbp + 0xe] ; and byte ptr [rbx + 0x17c0304], al ; ret
0x0000000000405402 : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0x2ce9
0x0000000000400a25 : add eax, dword ptr [rbx - 0x7cb70038] ; ret 0xeb04
0x0000000000480124 : add eax, dword ptr [rbx] ; call rax
0x000000000047e499 : add eax, dword ptr [rcx + 0x5c] ; ret
0x000000000046d467 : add eax, dword ptr [rcx - 0x80] ; clc ; xor byte ptr [rdx + rsi*8 - 0x17], dh ; retf
0x000000000045d317 : add eax, dword ptr [rdi + rcx + 0x48] ; retf -0x6c46
0x0000000000465f08 : add eax, dword ptr [rdi] ; call rax
0x000000000046b231 : add eax, dword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x0000000000469b9c : add eax, dword ptr [rdx + 8] ; call rax
0x000000000046049a : add eax, dword ptr [rsi + rdx] ; ret
0x0000000000466436 : add eax, dword ptr [rsi] ; call rax
0x0000000000466565 : add eax, dword ptr [rsp] ; call rax
0x000000000047aebf : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000430cdc : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000484fc7 : add eax, eax ; jmp r8
0x00000000004460a8 : add eax, eax ; mov eax, r8d ; ret
0x00000000004500c8 : add eax, ebp ; ret 0xfbcb
0x0000000000482d37 : add eax, ebx ; jmp rax
0x000000000041953a : add eax, ecx ; ret
0x0000000000419537 : add eax, edi ; add rax, rcx ; ret
0x0000000000483d94 : add eax, edi ; jmp rax
0x0000000000419774 : add eax, edi ; ret
0x0000000000400f1b : add eax, edx ; sar rax, 1 ; jne 0x400f2c ; pop rbp ; ret
0x000000000041722e : add eax, edx ; sub rax, rdi ; ret
0x0000000000483887 : add eax, esi ; jmp r8
0x000000000045d1a1 : add eax, esi ; ret
0x00000000004a5e70 : add eax, esp ; std ; jmp qword ptr [rbx]
0x0000000000445fdf : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000047dcd9 : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004a2397 : add ebp, ebp ; retf
0x000000000048296a : add ebp, ebx ; ret
0x0000000000437387 : add ebp, ecx ; ret
0x00000000004a5819 : add ebp, edi ; call qword ptr [rax]
0x0000000000434a60 : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x434ac7 ; ret
0x000000000047f9e1 : add ebx, dword ptr [rdx] ; and eax, 0xf ; cmp al, 0xa ; jne 0x47f99e ; call rbx
0x0000000000472f51 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000428a73 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000400f6a : add ebx, esi ; ret
0x0000000000419f18 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x419f09 ; ret
0x000000000042c2e5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000040f114 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000004808df : add ecx, dword ptr [rax + 1] ; retf -0x48f1
0x0000000000480baf : add ecx, dword ptr [rax - 0x46] ; ret
0x000000000042c2e9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047f3f8 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000427868 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x0000000000432e7b : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x0000000000459aea : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000486a07 : add ecx, dword ptr [rbp - 0x75] ; add byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x00000000004287e2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000042df64 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000483d8e : add ecx, dword ptr [rcx + 0x63] ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000047fad2 : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000042c2e6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000461e60 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x474
0x0000000000405405 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x2ce9
0x00000000004869df : add ecx, eax ; jmp r9
0x0000000000482e38 : add ecx, eax ; jmp rcx
0x000000000045d3ea : add ecx, eax ; mov qword ptr [rdi + 0x20], rcx ; pop rbx ; ret
0x000000000040d4e3 : add ecx, eax ; xor eax, eax ; mov qword ptr [rdx + 8], rcx ; ret
0x0000000000458112 : add ecx, ebp ; call 0x4945811b
0x00000000004863c8 : add ecx, ebp ; cmp rdi, r9 ; jae 0x486398 ; mov rdx, rcx ; jmp 0x4863b0
0x00000000004499b7 : add ecx, ebp ; ret
0x00000000004099d0 : add ecx, ebp ; retf
0x000000000042342e : add ecx, ebx ; jmp r9
0x0000000000421dd2 : add ecx, ebx ; jmp rcx
0x00000000004820c8 : add ecx, edi ; jmp rcx
0x0000000000466b08 : add ecx, esi ; call rcx
0x000000000042342b : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004a6b79 : add edi, esi ; call rdi
0x00000000004b10e2 : add edx, dword ptr [rdx + 3] ; ret
0x0000000000473a92 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000483442 : add edx, ebp ; jmp rdx
0x0000000000443786 : add edx, ebx ; call qword ptr [r11 + rax*8]
0x00000000004004d2 : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x4004ac
0x00000000004004d2 : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x4004ae
0x0000000000474aa9 : add edx, ecx ; jmp 0x474a38
0x0000000000483637 : add edx, ecx ; jmp rdx
0x000000000044cf71 : add edx, esp ; call qword ptr [r11 + rax*8]
0x0000000000428993 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f5cc : add esi, ebx ; ret
0x0000000000430cf2 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000423428 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004a7661 : add esi, esi ; call qword ptr [rax]
0x00000000004a73cd : add esi, esi ; jmp qword ptr [rdx]
0x0000000000419d48 : add esi, esi ; ret
0x0000000000482af0 : add esi, esi ; ret 0xf304
0x00000000004815d7 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000405501 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d3ef : add esp, 0x10 ; pop rbx ; ret
0x000000000043d527 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430e51 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000467542 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x00000000004324ad : add esp, 0x18 ; mov eax, edx ; ret
0x00000000004319a0 : add esp, 0x18 ; mov rax, rdx ; ret
0x000000000040df08 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040c6cd : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000413ce1 : add esp, 0x18 ; ret
0x0000000000434a40 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000440c62 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000408451 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047deda : add esp, 0x20 ; pop rbx ; ret
0x0000000000432fc2 : add esp, 0x2018 ; pop rbx ; pop rbp ; ret
0x0000000000475049 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x00000000004060f9 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040928b : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004603ab : add esp, 0x28 ; ret
0x000000000046a8b3 : add esp, 0x30 ; jmp r11
0x0000000000481971 : add esp, 0x30 ; mov rax, rbx ; pop rbx ; ret
0x00000000004313b1 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b2c6 : add esp, 0x30 ; pop rbx ; ret
0x000000000046a993 : add esp, 0x30 ; ret
0x000000000046b1c4 : add esp, 0x38 ; ret
0x000000000046b6fc : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046a53b : add esp, 0x48 ; jmp r11
0x0000000000460212 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000046b68a : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000431c3b : add esp, 0x58 ; ret
0x0000000000431c7a : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000045c4de : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004142d4 : add esp, 0x70 ; pop rbx ; ret
0x00000000004143ba : add esp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x000000000045fc89 : add esp, 0x90 ; pop rbx ; ret
0x000000000040a9ec : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004077f5 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x000000000043f92e : add esp, 0xd0 ; ret
0x0000000000407617 : add esp, 0xd8 ; ret
0x000000000046b5d5 : add esp, 8 ; jmp rax
0x0000000000445f62 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000431124 : add esp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000004131b5 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043240a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041247c : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000414a84 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000406d76 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000048672a : add esp, 8 ; mov rdi, rax ; jmp 0x412a08
0x0000000000481877 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000045a410 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000408171 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401b63 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004002c6 : add esp, 8 ; ret
0x00000000004118af : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000467e71 : add esp, 8 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; ret
0x00000000004a3a8b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x000000000045f948 : add esp, dword ptr [rbx + rcx*4 + 0x32] ; syscall
0x000000000043addb : add qword ptr [r9], r14 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000434430 : add qword ptr [rax], r8 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043aa30 : add qword ptr [rcx], rsi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000428a72 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000428a02 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000428992 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004794f0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000483886 : add r8, r14 ; jmp r8
0x0000000000484fc6 : add r8, rax ; jmp r8
0x00000000004637b2 : add r8b, bpl ; push rdi ; retf
0x000000000045ca3e : add r8b, bpl ; retf
0x00000000004460a7 : add r8d, eax ; mov eax, r8d ; ret
0x000000000042342d : add r9, r11 ; jmp r9
0x00000000004869de : add r9, rax ; jmp r9
0x00000000004a3849 : add r9b, bl ; retf -0x156f
0x00000000004046c1 : add r9b, bpl ; retf
0x00000000004073b7 : add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x4073d5
0x000000000047aca2 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000046b409 : add rax, -8 ; ret
0x000000000045c3a0 : add rax, 1 ; ret
0x000000000045c397 : add rax, 2 ; ret
0x0000000000482967 : add rax, 3 ; jmp 0x482935
0x000000000045c3b0 : add rax, 3 ; ret
0x0000000000486aeb : add rax, 8 ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x000000000043f628 : add rax, qword ptr [0] ; ret
0x0000000000466564 : add rax, qword ptr [r12] ; call rax
0x0000000000466435 : add rax, qword ptr [r14] ; call rax
0x0000000000465f07 : add rax, qword ptr [r15] ; call rax
0x0000000000480123 : add rax, qword ptr [rbx] ; call rax
0x000000000046b230 : add rax, qword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x0000000000469b9b : add rax, qword ptr [rdx + 8] ; call rax
0x000000000043f627 : add rax, qword ptr fs:[0] ; ret
0x0000000000482d36 : add rax, r11 ; jmp rax
0x0000000000483d93 : add rax, r15 ; jmp rax
0x0000000000419539 : add rax, rcx ; ret
0x0000000000419536 : add rax, rdi ; add rax, rcx ; ret
0x0000000000419773 : add rax, rdi ; ret
0x0000000000400f1a : add rax, rdx ; sar rax, 1 ; jne 0x400f2d ; pop rbp ; ret
0x000000000041722d : add rax, rdx ; sub rax, rdi ; ret
0x0000000000421dd1 : add rcx, r11 ; jmp rcx
0x00000000004820c7 : add rcx, r15 ; jmp rcx
0x0000000000482e37 : add rcx, rax ; jmp rcx
0x000000000045d3e9 : add rcx, rax ; mov qword ptr [rdi + 0x20], rcx ; pop rbx ; ret
0x000000000048221c : add rcx, rdi ; jmp rcx
0x0000000000466b07 : add rcx, rsi ; call rcx
0x000000000042342a : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000044cf70 : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000473a91 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000483441 : add rdx, rbp ; jmp rdx
0x0000000000443785 : add rdx, rbx ; call qword ptr [r11 + rax*8]
0x0000000000474aa8 : add rdx, rcx ; jmp 0x474a39
0x0000000000483636 : add rdx, rcx ; jmp rdx
0x00000000004815d6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000405500 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d3ee : add rsp, 0x10 ; pop rbx ; ret
0x0000000000430e50 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004324ac : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000043199f : add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000040c6cc : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000413ce0 : add rsp, 0x18 ; ret
0x0000000000434a3f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000440c61 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000408450 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ded9 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000432fc1 : add rsp, 0x2018 ; pop rbx ; pop rbp ; ret
0x0000000000475048 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040928a : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004603aa : add rsp, 0x28 ; ret
0x000000000046a8b2 : add rsp, 0x30 ; jmp r11
0x0000000000481970 : add rsp, 0x30 ; mov rax, rbx ; pop rbx ; ret
0x00000000004313b0 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b2c5 : add rsp, 0x30 ; pop rbx ; ret
0x000000000046a992 : add rsp, 0x30 ; ret
0x000000000046b1c3 : add rsp, 0x38 ; ret
0x000000000046b6fb : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046a53a : add rsp, 0x48 ; jmp r11
0x0000000000460211 : add rsp, 0x48 ; movzx eax, al ; ret
0x000000000046b689 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000431c3a : add rsp, 0x58 ; ret
0x0000000000431c79 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000045c4dd : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004142d3 : add rsp, 0x70 ; pop rbx ; ret
0x00000000004143b9 : add rsp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x000000000045fc88 : add rsp, 0x90 ; pop rbx ; ret
0x000000000040a9eb : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000043f92d : add rsp, 0xd0 ; ret
0x0000000000407616 : add rsp, 0xd8 ; ret
0x000000000046b5d4 : add rsp, 8 ; jmp rax
0x0000000000445f61 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000431123 : add rsp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000004131b4 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000432409 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041247b : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000414a83 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000406d75 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000486729 : add rsp, 8 ; mov rdi, rax ; jmp 0x412a09
0x0000000000481876 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000045a40f : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401b62 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004002c5 : add rsp, 8 ; ret
0x00000000004118ae : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041fa5e : add sil, sil ; ret 0x7404
0x0000000000481a7a : add word ptr [rdx + rax*2], 1 ; ret
0x000000000048ac10 : and ah, dl ; stc ; jmp qword ptr [rax + 0x20fff9d3]
0x0000000000412335 : and al, 0 ; add byte ptr [rax + 0x6b4820], bh ; ret
0x000000000043572a : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475415 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000467f5d : and al, 0 ; add rsp, 8 ; ret
0x0000000000474eb9 : and al, 0 ; call rax
0x0000000000474dd6 : and al, 0 ; jmp rax
0x000000000046802f : and al, 0 ; mov qword ptr [rsi], rax ; ret
0x0000000000465660 : and al, 0 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000046e83a : and al, 0x10 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x850f
0x0000000000484728 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000434664 : and al, 0x10 ; je 0x434678 ; mov edi, 0x6b5140 ; call rax
0x000000000048193e : and al, 0x10 ; je 0x481952 ; mov edi, 0x6b5140 ; call rax
0x0000000000432777 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000048183b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x0000000000484e39 : and al, 0x10 ; mov rsi, qword ptr [rbp] ; call r14
0x00000000004601a4 : and al, 0x10 ; movsxd rdi, dword ptr [rsp + 0x18] ; mov eax, ebx ; syscall
0x000000000045b2e2 : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x0000000000470ebb : and al, 0x18 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x850f
0x000000000043d0b8 : and al, 0x18 ; call r15
0x000000000040127c : and al, 0x18 ; call rax
0x0000000000435676 : and al, 0x18 ; call rbx
0x00000000004601a9 : and al, 0x18 ; mov eax, ebx ; syscall
0x000000000046b44d : and al, 0x18 ; mov edi, 0x6b5140 ; call rax
0x0000000000411025 : and al, 0x18 ; mov qword ptr [rsp + 8], rax ; call rdx
0x000000000046b3d1 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x0000000000475110 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041250d : and al, 0x18 ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000410e36 : and al, 0x20 ; call rax
0x000000000045c945 : and al, 0x20 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000043d0b3 : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000004a25c4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000046b1ac : and al, 0x28 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4674a8
0x000000000046b1ab : and al, 0x28 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4674a9
0x000000000046b1be : and al, 0x28 ; add byte ptr [rbp + 0xd], dh ; add rsp, 0x38 ; ret
0x0000000000410e31 : and al, 0x28 ; mov dword ptr [rsp + 0x20], r11d ; call rax
0x0000000000412f91 : and al, 0x28 ; mov rdi, r12 ; call rax
0x0000000000431b48 : and al, 0x30 ; add byte ptr [rax], al ; ret
0x000000000046750f : and al, 0x30 ; call r9
0x0000000000464037 : and al, 0x30 ; call rax
0x000000000045cb45 : and al, 0x30 ; mov rdi, r12 ; call rbx
0x000000000047e1c5 : and al, 0x38 ; call rax
0x0000000000460162 : and al, 0x38 ; jmp 0x460118
0x0000000000460161 : and al, 0x38 ; jmp 0x460119
0x000000000043790e : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043808c : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000437824 : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000046750a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x000000000040fd60 : and al, 0x3f ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x000000000046b6f9 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b687 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000045c94a : and al, 0x40 ; call rbx
0x000000000045c9d3 : and al, 0x40 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000045c739 : and al, 0x40 ; mov rdi, qword ptr [r13] ; call r12
0x000000000043d554 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004324ab : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043199e : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x0000000000484ff5 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a8b1 : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x000000000046a991 : and al, 0x48 ; add esp, 0x30 ; ret
0x000000000046a539 : and al, 0x48 ; add esp, 0x48 ; jmp r11
0x000000000045c5f6 : and al, 0x48 ; lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000043a38d : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r12
0x00000000004389c9 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043ab03 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000437bdd : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000437e4c : and al, 0x48 ; xor edx, edx ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000466067 : and al, 0x4c ; mov dword ptr [rbp - 0xb8], ebx ; call rax
0x00000000004396bc : and al, 0x50 ; call rax
0x0000000000471f64 : and al, 0x50 ; jmp 0x471f36
0x000000000043b651 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r15
0x00000000004391a7 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000482152 : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004142cf : and al, 0x60 ; je 0x4142e9 ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000455488 : and al, 0x71 ; sti ; inc dword ptr [rbx - 0x7af00008] ; call rdi
0x0000000000409b2e : and al, 0x74 ; ret 0x8b4c
0x00000000004ade3c : and al, 0x79 ; add byte ptr [rax], al ; and byte ptr [rax], ch ; stc ; call qword ptr [rdx]
0x000000000043b589 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043c4af : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; retf 0x6608
0x00000000004520da : and al, 0x84 ; sal byte ptr [rbp - 0x57], 0xe9 ; retf
0x0000000000438ce7 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000438e92 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000043d837 : and al, 0x89 ; ret
0x000000000043aa69 : and al, 0x89 ; retf 0x4b9
0x0000000000431c95 : and al, 0x8b ; jl 0x431cc3 ; or al, 0x89 ; ret
0x0000000000439e43 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x00000000004395df : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000439d76 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000048328b : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000448c6e : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000460cf4 : and al, 0xb0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000431a99 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000431af9 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000431b59 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000431ce9 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004333f9 : and al, 0xb8 ; or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000048431b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000436408 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046b1ef : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000401277 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000431bd5 : and al, 0xe8 ; add cl, byte ptr [rdi] ; ret 0x48c3
0x00000000004605fb : and al, 0xe8 ; jmp qword ptr [rbx]
0x000000000047482c : and al, 0xe8 ; ret
0x00000000004635f8 : and al, 0xe8 ; ret 0xffe8
0x000000000043d82f : and al, 0xe8 ; retf
0x00000000004602b2 : and al, 0xeb ; mov byte ptr [r8 + 0x23], cl ; ret
0x0000000000474828 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004852bb : and al, 0xf ; ret 0x8348
0x0000000000466aa4 : and al, 0xf ; xchg eax, esp ; ret 0xc031
0x000000000041fb66 : and al, 0xf8 ; jne 0x41fa42 ; ret
0x00000000004747e1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004747e7 : and al, 0xf8 ; ret
0x00000000004adb0d : and al, 0xf9 ; jmp qword ptr [rdx]
0x000000000045d621 : and al, 0xfc ; dec dword ptr [rax - 0x73] ; les r9, ptr [r8 - 0x77] ; ret 0x8948
0x000000000047479b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004747a1 : and al, 0xfc ; ret
0x000000000043f6f7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000043f6fb : and al, 0xfe ; ret
0x0000000000432dfd : and al, 0xff ; jmp 0x432dc7
0x0000000000432dfc : and al, 0xff ; jmp 0x432dc8
0x000000000040595c : and al, 4 ; call 0x4123e4
0x0000000000430e66 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004680e8 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004603a8 : and al, 8 ; add rsp, 0x28 ; ret
0x0000000000411e6a : and al, 8 ; call 0x40e894
0x000000000043a391 : and al, 8 ; call r12
0x0000000000437912 : and al, 8 ; call r14
0x0000000000438090 : and al, 8 ; call r15
0x0000000000437828 : and al, 8 ; call rbx
0x000000000041102a : and al, 8 ; call rdx
0x00000000004818b9 : and al, 8 ; je 0x4818cd ; mov edi, 0x6b5140 ; call rax
0x0000000000405958 : and al, 8 ; mov dword ptr [rsp + 4], esi ; call 0x4123e8
0x0000000000460387 : and al, 8 ; mov eax, 0x14 ; syscall
0x00000000004396b7 : and al, 8 ; mov rdi, qword ptr [rsp + 0x50] ; call rax
0x0000000000487858 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004755be : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004870a7 : and al, byte ptr [rax] ; jne 0x487079 ; add rsp, 8 ; ret
0x0000000000487a7a : and al, byte ptr [rax] ; jne 0x487aa1 ; ret
0x000000000041701a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000467317 : and al, ch ; ret
0x00000000004ab901 : and bh, al ; jmp qword ptr [rbx]
0x00000000004a57cd : and bh, ch ; call qword ptr [rax]
0x00000000004a6404 : and bl, bl ; std ; jmp rax
0x0000000000436943 : and bl, ch ; retf 0x2e66
0x000000000048ac18 : and bl, dl ; stc ; jmp qword ptr [rax + 0x20fff9d2]
0x000000000040f894 : and byte ptr [r8 + 0x39], r9b ; ret
0x000000000040c414 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000040f895 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000414344 : and byte ptr [rax + 0x6b], cl ; add al, ch ; ret
0x0000000000410aab : and byte ptr [rax + 0x6b], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000411a08 : and byte ptr [rax + 0x6b], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x948
0x000000000040eb6d : and byte ptr [rax + 1], cl ; ret
0x00000000004170f4 : and byte ptr [rax + 9], cl ; retf -0x76b8
0x0000000000417225 : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000045b586 : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000040f891 : and byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x000000000045c946 : and byte ptr [rax - 0x73], cl ; je 0x45c975 ; call rbx
0x000000000046a8dc : and byte ptr [rax - 0x75], cl ; jg 0x46a90f ; call r11
0x000000000046aa4a : and byte ptr [rax - 0x75], cl ; jg 0x46aa7d ; call r11
0x0000000000410593 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000485d9a : and byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4910
0x00000000004105c6 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000458d99 : and byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000043f004 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x43f018 ; call rax
0x000000000043684e : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000484809 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000465a0a : and byte ptr [rax - 0x7d], cl ; ret 0x4918
0x000000000040a982 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004847da : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000430cc3 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000047580e : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000432fc5 : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004ade10 : and byte ptr [rax], ch ; stc ; call qword ptr [rbx]
0x00000000004ade40 : and byte ptr [rax], ch ; stc ; call qword ptr [rdx]
0x0000000000407eb2 : and byte ptr [rbp + 0xf480048], al ; ret 0x8948
0x00000000004517d7 : and byte ptr [rbp + rax*4 - 0x77], dh ; retf
0x000000000042e504 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 5
0x00000000004b282e : and byte ptr [rbx + 0x17c0304], al ; ret
0x00000000004a4368 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000405627 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408453 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004a7fad : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000044caea : and byte ptr [rbx - 0x78f0a508], al ; ret 0xfff1
0x000000000040c415 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000474825 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000045fd8b : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x000000000048a8a4 : and byte ptr [rdi - 0x4edf0007], ch ; stc ; jmp qword ptr [rax]
0x00000000004a57a8 : and byte ptr [rdi], ch ; std ; inc dword ptr [rax] ; xor ebp, edi ; jmp rax
0x000000000048392d : and byte ptr [rdi], cl ; lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff] ; ret 0x8941
0x000000000042e930 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000040e531 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x0000000000421e6a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ae435 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000045c392 : and ch, 0xf ; je 0x45c3b9 ; add rax, 2 ; ret
0x000000000048ac08 : and ch, dl ; stc ; jmp qword ptr [rax + 0x20fff9d4]
0x000000000045c37d : and cl, 0xf ; je 0x45c3a5 ; ret
0x000000000041990d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000043f1c9 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000485efe : and cl, ch ; ret 0xfffb
0x00000000004a8095 : and dh, dh ; jmp qword ptr [rdx]
0x0000000000419f6e : and dh, dh ; ret 0x7504
0x000000000048ac00 : and dh, dl ; stc ; jmp qword ptr [rax + 0x20fff9d5]
0x000000000043514d : and dword ptr [rax - 0x77], ecx ; ret 0x894c
0x000000000047b60e : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000445e49 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004a40e2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000040ccb6 : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004a1199 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a40e1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000043f62b : and eax, 0 ; ret
0x000000000047e415 : and eax, 0x2d0 ; ret
0x0000000000406bf2 : and eax, 0x30 ; call rax
0x000000000043352b : and eax, 0x300 ; call 7
0x0000000000430c2d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000430c50 : and eax, 0x3fc00 ; ret
0x0000000000430c0c : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004851ea : and eax, 0x48028b48 ; add esp, 8 ; ret
0x0000000000458bd2 : and eax, 0x48b4800 ; ret 0x8548
0x000000000044e117 : and eax, 0x4c000000 ; mov edi, edi ; call 0x45a3e9
0x000000000045e28d : and eax, 0x508d4800 ; add dword ptr [rax + 0x39], ecx ; retf -0x378e
0x000000000045c03e : and eax, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x0000000000430c80 : and eax, 0x7ff80000 ; ret
0x0000000000433567 : and eax, 0xc ; cmp eax, 4 ; je 0x433578 ; ret
0x0000000000433696 : and eax, 0xc ; pop r12 ; ret
0x000000000045d4f5 : and eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000474dd5 : and eax, 0xe0ff0024 ; pop rbx ; ret
0x0000000000409c25 : and eax, 0xe8000000 ; ret 0x169
0x000000000047f9e3 : and eax, 0xf ; cmp al, 0xa ; jne 0x47f99c ; call rbx
0x0000000000434b76 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x0000000000472f4c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004851fc : and eax, dword ptr [rax - 0x80] ; call qword ptr [rax]
0x000000000047b465 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000475499 : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x4754b9
0x0000000000481a78 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004864e6 : and eax, dword ptr [rax] ; pop rbx ; mov qword ptr [rsi + 0x28], rax ; ret
0x0000000000481c04 : and eax, dword ptr [rax] ; ret
0x000000000044792c : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000046b742 : and eax, ecx ; ret
0x000000000046b7c1 : and eax, edx ; ret
0x000000000040ccb7 : and ebp, edi ; pop rbx ; ret
0x0000000000433502 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x433515 ; ret
0x00000000004a2894 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x00000000004233e5 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000422b18 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000040c059 : and ecx, dword ptr [rax + 0x39] ; retf
0x000000000043dd2c : and ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040dafc : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000004a5791 : and edi, ebp ; call rax
0x00000000004a8005 : and esi, esi ; jmp qword ptr [rdx]
0x0000000000431a87 : and esp, 0x30 ; add byte ptr [rax], al ; ret
0x00000000004afabc : and esp, ebp ; cli ; jmp qword ptr [rdx]
0x000000000043514c : and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x000000000042043a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000419770 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000419780 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000419790 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000419760 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004196af : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000420633 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004170bd : bsf eax, edx ; ret
0x000000000041722a : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000420750 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000041710a : bsf rax, rdx ; ret
0x000000000045b647 : bsr eax, eax ; add rax, rdi ; ret
0x000000000045b8cb : bsr eax, esi ; add rax, rdi ; ret
0x000000000045b7d9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000045b6d5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000045b646 : bsr rax, rax ; add rax, rdi ; ret
0x000000000045b8ca : bsr rax, rsi ; add rax, rdi ; ret
0x000000000045b7d8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000045b6d4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000040db9e : call 0x100314ee
0x0000000000466fd8 : call 0x1108f328
0x00000000004b2288 : call 0x114b1f05
0x00000000004b2368 : call 0x114b2024
0x00000000004a6d58 : call 0x124a6346
0x000000000041fd74 : call 0x24b688cd
0x000000000040388d : call 0x4002e2
0x0000000000403848 : call 0x400302
0x00000000004638ca : call 0x400352
0x0000000000409e36 : call 0x400367
0x00000000004011a9 : call 0x4016f8
0x000000000043577b : call 0x401917
0x000000000040109a : call 0x407f18
0x0000000000411bcb : call 0x40e682
0x0000000000411e6c : call 0x40e892
0x0000000000436188 : call 0x4123e2
0x0000000000486ec9 : call 0x412a08
0x0000000000455fc5 : call 0x412a92
0x000000000040dc0b : call 0x419e52
0x0000000000468262 : call 0x419e57
0x0000000000468261 : call 0x419e58
0x00000000004622e1 : call 0x419fa8
0x000000000048454a : call 0x41fa37
0x0000000000400d83 : call 0x430b96
0x000000000043198c : call 0x4323b7
0x00000000004877a5 : call 0x432d68
0x00000000004571ff : call 0x433452
0x000000000044bbbc : call 0x448662
0x000000000044e11e : call 0x45a3e2
0x0000000000400637 : call 0x45c882
0x000000000046b1b2 : call 0x4674a2
0x000000000044714b : call 0x4733b2
0x0000000000473af9 : call 0x481487
0x000000000040803a : call 0x484ac2
0x000000000047dd0f : call 0x490a0636
0x000000000043f6c7 : call 0x4943f6d1
0x0000000000458114 : call 0x49458119
0x00000000004a3ada : call 0x4c146495
0x0000000000427ffa : call 0x4fc18ff8
0x0000000000427ff9 : call 0x4fc18ff9
0x000000000044cae9 : call 0x5b3d4e15
0x00000000004693bc : call 0x7708cd0c
0x0000000000405c34 : call 0xfd8a44f
0x00000000004399b3 : call 0xffffffff810e1cc1
0x000000000046ab37 : call 0xffffffff84566d77
0x000000000040cef7 : call 0xffffffff8a015403
0x000000000047dce9 : call 0xffffffff8a0a0610
0x0000000000402d65 : call 0xffffffff8b8ceff5
0x00000000004a3a3a : call 0xffffffffab580530
0x00000000004a1c03 : call 0xffffffffaf0cba79
0x0000000000410873 : call 0xffffffffc07a4981
0x000000000047d9e8 : call 0xffffffffc2712330
0x000000000048435a : call 0xffffffffc2718fa2
0x000000000046d849 : call 0xffffffffc2802053
0x00000000004115f9 : call 0xffffffffc2ca5e12
0x0000000000448af0 : call 0xffffffffc2cdd2fb
0x0000000000407b47 : call 0xffffffffc39cbcad
0x0000000000408337 : call 0xffffffffc39cc49d
0x000000000045c9fb : call 0xffffffffc3a20b61
0x00000000004686b1 : call 0xffffffffc3a2c817
0x000000000043faff : call 0xffffffffc3f30a50
0x000000000041a517 : call 0xffffffffc4122e68
0x0000000000417027 : call 0xffffffffc439f978
0x0000000000419040 : call 0xffffffffca889f96
0x0000000000472ed4 : call 0xffffffffca93ba29
0x00000000004744e4 : call 0xffffffffca93d039
0x0000000000458d98 : call 0xffffffffcaced5c1
0x0000000000472ee1 : call 0xffffffffce9bba3b
0x00000000004744f1 : call 0xffffffffce9bd04b
0x00000000004ada38 : call 0xffffffffe74ad35d
0x0000000000400fa2 : call 0xffffffffff407ae9
0x0000000000433530 : call 2
0x0000000000443788 : call qword ptr [r11 + rax*8]
0x00000000004a57d3 : call qword ptr [rax + 0x10fffd44]
0x00000000004a57db : call qword ptr [rax + 0x10fffd47]
0x00000000004a57e3 : call qword ptr [rax + 0x10fffd4a]
0x00000000004a57eb : call qword ptr [rax + 0x10fffd4d]
0x00000000004a57f3 : call qword ptr [rax + 0x10fffd50]
0x00000000004a57fb : call qword ptr [rax + 0x10fffd53]
0x00000000004a5803 : call qword ptr [rax + 0x10fffd56]
0x000000000048a86b : call qword ptr [rax + 0x20fff9b3]
0x000000000048a9e3 : call qword ptr [rax + 0x20fff9db]
0x000000000048abbb : call qword ptr [rax + 0x20fff9df]
0x000000000048a543 : call qword ptr [rax + 0x30fff92d]
0x000000000045bfce : call qword ptr [rax + 0x48ca014c]
0x000000000043575e : call qword ptr [rax + 0x48e9c289]
0x00000000004a583b : call qword ptr [rax - 0x1f0002ea]
0x000000000048a99b : call qword ptr [rax - 0x1f000663]
0x000000000048a947 : call qword ptr [rax - 0x1f00066a]
0x000000000048a58b : call qword ptr [rax - 0x1f0006b7]
0x000000000048afbf : call qword ptr [rax - 0x4f0005c9]
0x000000000048a5c3 : call qword ptr [rax]
0x0000000000401195 : call qword ptr [rbx + 0x10]
0x0000000000443789 : call qword ptr [rbx + rax*8]
0x0000000000401738 : call qword ptr [rbx*8 + 0x6b3ec8]
0x000000000047fb18 : call qword ptr [rbx]
0x00000000004565d2 : call qword ptr [rcx]
0x000000000048b860 : call qword ptr [rdi]
0x000000000048aa8f : call qword ptr [rdx + 0x22fff9dd]
0x00000000004a7263 : call qword ptr [rdx]
0x000000000048a743 : call qword ptr [rsi + 0x16fff986]
0x000000000048a74b : call qword ptr [rsi + 0x16fff987]
0x000000000048a753 : call qword ptr [rsi + 0x26fff988]
0x00000000004a5e63 : call qword ptr [rsi - 0x3d]
0x0000000000476132 : call qword ptr [rsi]
0x000000000046a8e1 : call r11
0x000000000043a393 : call r12
0x0000000000437914 : call r14
0x0000000000435a6b : call r15
0x0000000000467511 : call r9
0x000000000048af77 : call rax
0x0000000000402739 : call rbx
0x000000000043550c : call rcx
0x0000000000435a6c : call rdi
0x000000000040f55f : call rdx
0x0000000000437915 : call rsi
0x000000000043a394 : call rsp
0x00000000004a3940 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000046c2dd : cdq ; or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000461040 : cdq ; or dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; retf -0x7df1
0x0000000000473122 : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000444bff : cdq ; retf
0x000000000042e4d3 : cdq ; retf 5
0x00000000004b1121 : cdq ; sti ; call rcx
0x0000000000402fb4 : cdqe ; je 0x402fc8 ; mov edi, 0x6b60c0 ; call rax
0x000000000040b008 : cdqe ; ret
0x0000000000471016 : clc ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x48b
0x000000000046e997 : clc ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8b42
0x000000000045d0a9 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xd7e9
0x000000000045cf15 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x0000000000410a53 : clc ; add al, byte ptr [rdi + rcx + 0x46] ; ret 0x35e9
0x0000000000446bb6 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000459e29 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000471856 : clc ; add cl, byte ptr [rcx + 0x39] ; ror dword ptr [rdi], -0x79 ; retf
0x0000000000404acc : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042088b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e498 : clc ; add eax, dword ptr [rcx + 0x5c] ; ret
0x0000000000405404 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x2ce9
0x00000000004a6b78 : clc ; add edi, esi ; call rdi
0x0000000000419538 : clc ; add rax, rcx ; ret
0x000000000040e530 : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x00000000004ab9ca : clc ; call qword ptr [rax]
0x00000000004abcba : clc ; call qword ptr [rbx]
0x00000000004ac172 : clc ; call qword ptr [rcx]
0x00000000004abe92 : clc ; call qword ptr [rdi]
0x00000000004ac03a : clc ; call qword ptr [rdx]
0x00000000004ace0a : clc ; call qword ptr [rsi]
0x00000000004abb82 : clc ; call rcx
0x000000000041302e : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000423389 : clc ; cmp rcx, rax ; jne 0x4233bb ; xor eax, eax ; ret
0x0000000000423388 : clc ; cmp rcx, rax ; jne 0x4233bc ; xor eax, eax ; ret
0x00000000004018b4 : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004110c7 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000004595ff : clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000044af5d : clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004748db : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000409ee0 : clc ; jmp 0x409eb0
0x00000000004ab902 : clc ; jmp qword ptr [rbx]
0x00000000004abca2 : clc ; jmp qword ptr [rdi]
0x00000000004ac33e : clc ; jmp qword ptr [rdx]
0x0000000000487328 : clc ; jmp qword ptr [rsi + 0xf]
0x0000000000483d95 : clc ; jmp rax
0x00000000004aceda : clc ; jmp rcx
0x0000000000400f1f : clc ; jne 0x400f28 ; pop rbp ; ret
0x00000000004037bb : clc ; jne 0x403838 ; adc dword ptr [rbp - 0x77], eax ; ret 0x8341
0x000000000041fb67 : clc ; jne 0x41fa41 ; ret
0x000000000048a436 : clc ; lcall ptr [rax + 0x68fff8c1] ; ret 0xfff8
0x0000000000484930 : clc ; leave ; ret
0x00000000004a25a2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000424e67 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004257d7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427d87 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004259d7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427cf7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000425bd7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427c67 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000424e83 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004849cb : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000431a29 : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x0000000000411bf9 : clc ; mov word ptr [rax], cs ; call 0x40e686
0x00000000004747e2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004604a1 : clc ; nop word ptr [rax + rax] ; ret
0x000000000047fc5b : clc ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000401bfd : clc ; pop r13 ; ret
0x0000000000401be7 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004abcb8 : clc ; pop rsp ; clc ; call qword ptr [rbx]
0x000000000040930a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000040cd00 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000043383b : clc ; push qword ptr [rbp - 7] ; nop ; xor eax, eax ; leave ; ret
0x000000000040ccb2 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000045fc6c : clc ; push qword ptr [rdi + rbp - 0x77] ; ret 0xe283
0x0000000000487818 : clc ; push rbx ; ret
0x000000000040d752 : clc ; ret
0x000000000041e604 : clc ; rol ch, 1 ; jns 0x41e5e5 ; retf -0x152d
0x000000000041e754 : clc ; rol ch, 1 ; jns 0x41e735 ; retf -0x152d
0x000000000041e8a4 : clc ; rol ch, 1 ; jns 0x41e885 ; retf -0x152d
0x000000000041e9f4 : clc ; rol ch, 1 ; jns 0x41e9d5 ; retf -0x152d
0x000000000041eb44 : clc ; rol ch, 1 ; jns 0x41eb25 ; retf -0x152d
0x000000000041ec94 : clc ; rol ch, 1 ; jns 0x41ec75 ; retf -0x152d
0x000000000041ede4 : clc ; rol ch, 1 ; jns 0x41edc5 ; retf -0x152d
0x000000000041ef34 : clc ; rol ch, 1 ; jns 0x41ef15 ; retf -0x152d
0x000000000041f084 : clc ; rol ch, 1 ; jns 0x41f065 ; retf -0x152d
0x000000000041f1d4 : clc ; rol ch, 1 ; jns 0x41f1b5 ; retf -0x152d
0x000000000041f324 : clc ; rol ch, 1 ; jns 0x41f305 ; retf -0x152d
0x000000000041f474 : clc ; rol ch, 1 ; jns 0x41f455 ; retf -0x152d
0x000000000041f5c4 : clc ; rol ch, 1 ; jns 0x41f5a5 ; retf -0x152d
0x000000000041f714 : clc ; rol ch, 1 ; jns 0x41f6f5 ; retf -0x152d
0x000000000041f864 : clc ; rol ch, 1 ; jns 0x41f845 ; retf -0x152d
0x0000000000479b14 : clc ; rol ch, 1 ; jns 0x479af5 ; retf -0x152d
0x0000000000479c94 : clc ; rol ch, 1 ; jns 0x479c75 ; retf -0x152d
0x0000000000479e14 : clc ; rol ch, 1 ; jns 0x479df5 ; retf -0x152d
0x0000000000479f94 : clc ; rol ch, 1 ; jns 0x479f75 ; retf -0x152d
0x000000000047a114 : clc ; rol ch, 1 ; jns 0x47a0f5 ; retf -0x152d
0x000000000047a294 : clc ; rol ch, 1 ; jns 0x47a275 ; retf -0x152d
0x000000000047a414 : clc ; rol ch, 1 ; jns 0x47a3f5 ; retf -0x152d
0x000000000047a594 : clc ; rol ch, 1 ; jns 0x47a575 ; retf -0x152d
0x000000000047a714 : clc ; rol ch, 1 ; jns 0x47a6f5 ; retf -0x152d
0x000000000047a894 : clc ; rol ch, 1 ; jns 0x47a875 ; retf -0x152d
0x000000000047aa14 : clc ; rol ch, 1 ; jns 0x47a9f5 ; retf -0x152d
0x000000000047ab94 : clc ; rol ch, 1 ; jns 0x47ab75 ; retf -0x152d
0x000000000047ad14 : clc ; rol ch, 1 ; jns 0x47acf5 ; retf -0x152d
0x000000000047ae94 : clc ; rol ch, 1 ; jns 0x47ae75 ; retf -0x152d
0x000000000047b014 : clc ; rol ch, 1 ; jns 0x47aff5 ; retf -0x152d
0x00000000004734aa : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000046b0cd : clc ; std ; jbe 0x46b0dc ; ret
0x00000000004b12e8 : clc ; std ; jmp qword ptr [rdi]
0x000000000046d46a : clc ; xor byte ptr [rdx + rsi*8 - 0x17], dh ; retf
0x000000000046c154 : cld ; adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x53c
0x000000000046c283 : cld ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000430c2f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000430c52 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000411a07 : cld ; and byte ptr [rax + 0x6b], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x948
0x00000000004b225a : cld ; call qword ptr [rax]
0x00000000004b23f2 : cld ; call qword ptr [rcx]
0x00000000004a7249 : cld ; cmc ; call qword ptr [rax]
0x00000000004a7261 : cld ; cmc ; call qword ptr [rdx]
0x000000000045d622 : cld ; dec dword ptr [rax - 0x73] ; les r9, ptr [r8 - 0x77] ; ret 0x8948
0x0000000000456ada : cld ; dec dword ptr [rcx - 0x77] ; ret 0x20e9
0x000000000045fe40 : cld ; fdivr st(2) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000465768 : cld ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x0000000000437380 : cld ; inc dword ptr [rbp - 0x74f18b40] ; add ebp, ecx ; ret
0x0000000000430cf0 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000430c0e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a5816 : cld ; inc eax ; add ebp, edi ; call qword ptr [rax]
0x00000000004b2a02 : cld ; jmp qword ptr [rax]
0x00000000004b1e1e : cld ; jmp qword ptr [rdx]
0x00000000004b1c1a : cld ; jmp rbx
0x00000000004a3325 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4a32f4 ; retf
0x00000000004255f2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004257f5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004259f5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000425bf5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000400411 : cld ; mov eax, 3 ; syscall
0x0000000000425226 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427f16 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000425406 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e96 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004255e6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e16 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000425046 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427f96 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000047479c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004a5812 : cld ; push qword ptr [rax - 1] ; cld ; inc eax ; add ebp, edi ; call qword ptr [rax]
0x0000000000419f8f : cld ; ret
0x00000000004b2814 : cld ; ret 0
0x00000000004a1a43 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004a1a56 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000483271 : cli ; adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x00000000004051df : cli ; add al, byte ptr [rcx] ; retf -0x2e77
0x000000000047e3e9 : cli ; add byte ptr [rcx - 0xcfd8130], cl ; ret
0x000000000040955f : cli ; add ch, al ; retf -3
0x000000000045d34f : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000447069 : cli ; add ch, byte ptr [rcx] ; retf -0x2e77
0x000000000045d304 : cli ; add ch, byte ptr [rcx] ; retf -0x7abb
0x000000000046c33f : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000044a37c : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x00000000004099cb : cli ; add cl, byte ptr [rax - 0x73] ; add ecx, ebp ; retf
0x000000000046c318 : cli ; add cl, byte ptr [rcx + 0x29] ; ret 0x8b48
0x000000000047dcd8 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004a3a39 : cli ; call 0xffffffffab580531
0x000000000048afbe : cli ; call qword ptr [rax - 0x4f0005c9]
0x000000000048afaa : cli ; call qword ptr [rax]
0x00000000004aeab2 : cli ; call qword ptr [rdx]
0x000000000048af76 : cli ; call rax
0x00000000004af35a : cli ; call rcx
0x00000000004af45a : cli ; call rsp
0x0000000000462db1 : cli ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8349
0x00000000004606f3 : cli ; cmp dh, byte ptr [rcx + rdi*4 - 0xd] ; ret
0x000000000045fe4a : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000046847d : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000040aa8d : cli ; dec dword ptr [rax + 0xf] ; ret 0xe0ba
0x000000000045fe0b : cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000048af82 : cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x000000000048af52 : cli ; inc dword ptr [rax] ; xor bh, dl ; jmp qword ptr [rax]
0x000000000048af2a : cli ; inc dword ptr [rax] ; xor edx, edi ; call qword ptr [rax]
0x000000000048af1a : cli ; inc eax ; xor dl, bh ; call rax
0x000000000048af72 : cli ; inc eax ; xor eax, 0x35d0fffa ; cli ; jmp rax
0x000000000048af4a : cli ; inc eax ; xor edx, edi ; jmp rax
0x000000000048aef2 : cli ; jmp qword ptr [rax]
0x00000000004ae6b6 : cli ; jmp qword ptr [rdx]
0x000000000048af22 : cli ; jmp rax
0x00000000004af2ea : cli ; jmp rbx
0x00000000004af54a : cli ; jmp rdx
0x00000000004aed32 : cli ; jmp rsi
0x00000000004259f8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000419928 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000405485 : cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000047d8dd : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x00000000004a3ec1 : cli ; push 0x6e ; ja 0x4a3e4e ; ret 0x48f
0x000000000048af16 : cli ; push qword ptr [rax - 0x3f0005d0] ; xor dl, bh ; call rax
0x0000000000474a52 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x000000000048afa6 : cli ; push rax ; cli ; call qword ptr [rax]
0x000000000048af26 : cli ; push rax ; xor dl, bh ; inc dword ptr [rax] ; xor edx, edi ; call qword ptr [rax]
0x000000000048af7e : cli ; push rax ; xor eax, 0x3600fffa ; cli ; jmp qword ptr [rax]
0x00000000004a2965 : cli ; ret 0xac65
0x000000000045d185 : cli ; sbb byte ptr [rdi], cl ; retf 0x3cba
0x000000000043348b : cli ; setae al ; ret
0x00000000004a2810 : cli ; test dl, bh ; retf -0x2081
0x0000000000417160 : cli ; test rdx, rdx ; je 0x417179 ; bsf rax, rdx ; ret
0x000000000045b4df : cli ; test rdx, rdx ; je 0x45b509 ; bsf rax, rdx ; ret
0x00000000004a15aa : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000044a0c7 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000479748 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043a5bb : cmc ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000004a6c4a : cmc ; call qword ptr [rax]
0x00000000004a7112 : cmc ; call qword ptr [rbx]
0x00000000004a6d5a : cmc ; call qword ptr [rcx]
0x00000000004a65da : cmc ; call qword ptr [rdi]
0x00000000004a7262 : cmc ; call qword ptr [rdx]
0x00000000004a676e : cmc ; jmp qword ptr [rdx]
0x00000000004a6e4a : cmc ; jmp rbx
0x00000000004a42e9 : cmc ; mov ch, 0xab ; ret
0x0000000000427e9a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042527e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000484fc1 : cmc ; movsxd rax, dword ptr [r8 + rdi*4] ; add r8, rax ; jmp r8
0x000000000042fe13 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004595d6 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474b81 : cmc ; pop rbp ; pop r12 ; ret
0x00000000004a1197 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004ac99c : cmc ; pushfq ; clc ; jmp qword ptr [rdx]
0x000000000042fe17 : cmc ; sub eax, edx ; ret
0x00000000004a3925 : cmc ; xlatb ; ret 0x4e27
0x000000000045d19b : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x000000000045d19a : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x000000000040e159 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000040e158 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000484d97 : cmovbe eax, ecx ; ret
0x0000000000460741 : cmove eax, ecx ; ret
0x0000000000419480 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000431bd8 : cmove eax, edx ; ret
0x000000000043f7e6 : cmove eax, esi ; mov ecx, eax ; jmp 0x43f7bd
0x000000000043f7e6 : cmove eax, esi ; mov ecx, eax ; jmp 0x43f7c0
0x000000000040b445 : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040b444 : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460740 : cmove rax, r9 ; ret
0x000000000041947f : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000481a27 : cmove rax, rdx ; ret
0x000000000047ded6 : cmovg eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000040c36b : cmovg eax, ecx ; test rdx, rdx ; jne 0x40c369 ; ret
0x000000000045a02b : cmovg eax, ecx ; test rdx, rdx ; jne 0x45a029 ; ret
0x000000000047ded5 : cmovg rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004004d6 : cmovge eax, edx ; jmp 0x4004a8
0x00000000004004d6 : cmovge eax, edx ; jmp 0x4004aa
0x000000000047defc : cmovl eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000047defb : cmovl rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000413030 : cmovne eax, ecx ; add rsp, 8 ; ret
0x000000000045ac71 : cmovne eax, ecx ; ret
0x000000000046b957 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000414b13 : cmovne eax, edx ; ret
0x000000000045ac70 : cmovne r8, rcx ; ret
0x000000000041302f : cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000414b12 : cmovne rax, rdx ; ret
0x00000000004383ec : cmovns eax, dword ptr [rbx - 0x7cb7fb39] ; ret 0x4801
0x00000000004375ec : cmovns eax, edx ; ret
0x00000000004194ed : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf -0x7cb8
0x0000000000484c78 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x000000000040cd38 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x40cd39 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004b2760 : cmp al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000004b3078 : cmp al, 0 ; add byte ptr [rax], al ; retf
0x00000000004319b1 : cmp al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004af6a8 : cmp al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ecx ; add byte ptr [rax], al ; retf -6
0x000000000045c5f5 : cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000043352a : cmp al, 0x25 ; add byte ptr [rbx], al ; add byte ptr [rax], al ; call 8
0x000000000040dc04 : cmp al, 0x2f ; xor esi, esi ; sub rdx, rbp ; call 0x419e59
0x000000000040e3ed : cmp al, 0x30 ; ret
0x00000000004a25a0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a14a3 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004a3f8b : cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x000000000047f9e6 : cmp al, 0xa ; jne 0x47f999 ; call rbx
0x00000000004b2254 : cmp al, 0xbd ; add byte ptr [rax], al ; push rsi ; cld ; call qword ptr [rax]
0x0000000000484de5 : cmp al, 0xcc ; mov rsi, qword ptr [r15] ; call r14
0x00000000004b3654 : cmp al, 0xd1 ; add byte ptr [rax], al ; mov byte ptr [rdi], ch ; std ; call qword ptr [rbx]
0x00000000004afedc : cmp al, 0xfb ; cli ; jmp qword ptr [rdx]
0x00000000004a57c5 : cmp al, 0xfd ; jmp qword ptr [rax]
0x000000000040e85e : cmp al, 2 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a6d54 : cmp al, 8 ; add byte ptr [rax], al ; call 0x124a634a
0x00000000004326a0 : cmp al, bl ; nop word ptr [rax + rax] ; ret
0x00000000004302d6 : cmp al, byte ptr [rsi - 1] ; jne 0x4302fc ; xor eax, eax ; ret
0x000000000046a50f : cmp al, ch ; mov edx, dword ptr [rcx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000419766 : cmp al, dh ; ret
0x0000000000419765 : cmp al, r14b ; ret
0x00000000004a7154 : cmp bh, bl ; cmc ; jmp qword ptr [rdx]
0x00000000004a57c1 : cmp bh, ch ; inc dword ptr [rax + 0x3c] ; std ; jmp qword ptr [rax]
0x00000000004a6e48 : cmp bl, ch ; cmc ; jmp rbx
0x00000000004201fb : cmp bl, dh ; ret
0x000000000048073d : cmp byte ptr [r11], r12b ; add byte ptr [rcx - 0x46], al ; retf
0x000000000040bb2a : cmp byte ptr [r8 - 0x77], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x29e9
0x000000000040896b : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000041a34f : cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004197a7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000040db89 : cmp byte ptr [rax - 0x75], cl ; imul eax, dword ptr [rax + 0x48], -0x77 ; retf 0x2b48
0x000000000040bb2b : cmp byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x29e9
0x0000000000467586 : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000040896c : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000004320f2 : cmp byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000004595fc : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x0000000000482c44 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000419796 : cmp byte ptr [rax], ah ; ret
0x000000000045fd8e : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000040c724 : cmp byte ptr [rax], al ; mov rbx, rdi ; je 0x40c738 ; pop rbx ; ret
0x0000000000414b10 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000419786 : cmp byte ptr [rax], dl ; ret
0x0000000000419785 : cmp byte ptr [rax], r10b ; ret
0x0000000000419795 : cmp byte ptr [rax], r12b ; ret
0x0000000000414b0f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046750b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x00000000004a6d14 : cmp byte ptr [rbx - 0x4ff1b9f9], al ; add dword ptr [rbx], eax ; retf 0xa02
0x000000000048073e : cmp byte ptr [rbx], ah ; add byte ptr [rcx - 0x46], al ; retf
0x000000000043808d : cmp byte ptr [rcx + 0x41082444], cl ; call rdi
0x000000000043790f : cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x000000000046a8bc : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000438ba6 : cmp byte ptr [rcx - 0xa], al ; ret
0x0000000000471983 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf -0xa
0x0000000000412a31 : cmp byte ptr [rcx], dh ; shr cl, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000046dcc9 : cmp byte ptr [rdi], cl ; test cl, al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000042285d : cmp byte ptr [rdi], dl ; ret
0x0000000000423370 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000423359 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000423342 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000421dfe : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046073c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000445ee8 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000413905 : cmp cl, byte ptr [rbx + rcx*4 + 0x47] ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000423a21 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x0000000000423b71 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000423cc1 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x0000000000423e11 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x0000000000423f61 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x00000000004240b1 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x0000000000424201 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000424351 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x00000000004244a1 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x00000000004245f1 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x0000000000424741 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000424891 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x00000000004249e1 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x0000000000424b31 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000424c81 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x000000000042627a : cmp cl, byte ptr [rdi] ; retf 0xf01
0x00000000004263fa : cmp cl, byte ptr [rdi] ; retf 0xf02
0x000000000042657a : cmp cl, byte ptr [rdi] ; retf 0xf03
0x00000000004266fa : cmp cl, byte ptr [rdi] ; retf 0xf04
0x000000000042687a : cmp cl, byte ptr [rdi] ; retf 0xf05
0x00000000004269fa : cmp cl, byte ptr [rdi] ; retf 0xf06
0x0000000000426b7a : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000426cfa : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000426e7a : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000426ffa : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x000000000042717a : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x00000000004272fa : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x000000000042747a : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x00000000004275fa : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x000000000042777a : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x0000000000462db2 : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8349
0x00000000004a4366 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004a5eb4 : cmp cl, cl ; std ; ljmp ptr [rax + 0x49fffdc9] ; ret
0x00000000004606f4 : cmp dh, byte ptr [rcx + rdi*4 - 0xd] ; ret
0x00000000004a8725 : cmp dh, dh ; jmp qword ptr [rdx]
0x000000000043881c : cmp dh, dh ; ret 0x4801
0x00000000004740b9 : cmp dh, dh ; ret 0x7401
0x00000000004606f2 : cmp dl, 0x3a ; je 0x4606b6 ; ret
0x000000000048afe5 : cmp dl, bh ; call rax
0x0000000000434285 : cmp dword ptr [rax], ebp ; add al, ch ; ret
0x00000000004279ac : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000433830 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000410e7f : cmp dword ptr [rdx], ebp ; add byte ptr [rcx - 0x7d], cl ; retf 0x4d01
0x000000000045a53c : cmp dword ptr [rsi + 0x30], 0 ; je 0x45a54f ; pop rbx ; ret
0x0000000000484d94 : cmp dword ptr [rsi + 8], edi ; cmovbe eax, ecx ; ret
0x0000000000431bd3 : cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x000000000040e569 : cmp eax, 0x1000 ; je 0x40e581 ; xor eax, eax ; ret
0x0000000000474eb6 : cmp eax, 0x242449 ; call rax
0x0000000000474dd3 : cmp eax, 0x24252c ; jmp rax
0x000000000040e749 : cmp eax, 0x83480002 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000044586f : cmp eax, 0x85000008 ; ror byte ptr [rdi], 0x88 ; ret
0x00000000004a188b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000400edd : cmp eax, 0xe ; mov rbp, rsp ; ja 0x400ef0 ; pop rbp ; ret
0x000000000046b0cc : cmp eax, 0xfd ; jbe 0x46b0dd ; ret
0x000000000040ccb1 : cmp eax, 0xff ; je 0x40ccc2 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000045a9ea : cmp eax, 0xff ; je 0x45a9fb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000045aa2e : cmp eax, 0xff ; je 0x45aa3f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000409309 : cmp eax, 0xff ; jne 0x409316 ; pop rbx ; ret
0x000000000040ccff : cmp eax, 0xff ; jne 0x40ccf0 ; pop rbx ; ret
0x000000000043383a : cmp eax, 0xff ; jne 0x433841 ; nop ; xor eax, eax ; leave ; ret
0x00000000004319e6 : cmp eax, 0xfffff000 ; ja 0x431a0c ; ret
0x0000000000431a35 : cmp eax, 0xfffff000 ; ja 0x431a5c ; ret
0x0000000000431ba3 : cmp eax, 0xfffff000 ; ja 0x431be4 ; ret
0x000000000043f7c8 : cmp eax, 0xfffff000 ; ja 0x43f7f5 ; ret
0x000000000043fa41 : cmp eax, 0xfffff000 ; ja 0x43fa52 ; ret
0x0000000000460046 : cmp eax, 0xfffff000 ; ja 0x46006c ; ret
0x000000000046009b : cmp eax, 0xfffff000 ; ja 0x4600c4 ; ret
0x00000000004600e1 : cmp eax, 0xfffff000 ; ja 0x4600f2 ; ret
0x0000000000460348 : cmp eax, 0xfffff000 ; ja 0x460357 ; ret
0x000000000042088a : cmp eax, 1 ; ja 0x420871 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043356a : cmp eax, 4 ; je 0x433575 ; ret
0x000000000040afa9 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x40afc1 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000045ac6e : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x00000000004a3757 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x000000000040daf9 : cmp eax, ecx ; jae 0x40db27 ; movzx eax, byte ptr [rax] ; ret
0x00000000004302f3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004334a0 : cmp eax, edx ; jne 0x4334b4 ; mov eax, 0xca ; syscall
0x000000000046b5a4 : cmp eax, esi ; je 0x46b5b4 ; ret
0x00000000004674fe : cmp ebp, 0x89c085ff ; ret
0x0000000000402513 : cmp ebp, dword ptr [rbx] ; add byte ptr [rax + 1], cl ; retf -0x76b8
0x0000000000439d47 : cmp ebp, eax ; ret
0x0000000000433506 : cmp ebx, 0xa ; je 0x433511 ; ret
0x00000000004349ae : cmp ebx, eax ; setne dl ; jmp 0x43499a
0x000000000048a7b5 : cmp ecx, 0xff ; loopne 0x48a743 ; stc ; jmp rax
0x000000000048a7b9 : cmp ecx, 0xff ; loopne 0x48a748 ; stc ; jmp rax
0x00000000004146c1 : cmp ecx, dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x1ed
0x00000000004684b4 : cmp ecx, dword ptr [rsi + rdi] ; jae 0x468478 ; xor eax, eax ; ret
0x000000000042338b : cmp ecx, eax ; jne 0x4233b9 ; xor eax, eax ; ret
0x000000000040e642 : cmp ecx, edi ; je 0x40e486 ; ret
0x000000000040cd3a : cmp ecx, esi ; jne 0x40cd37 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000044608e : cmp edi, ecx ; ja 0x446077 ; mov eax, r8d ; ret
0x00000000004863cb : cmp edi, ecx ; jae 0x486395 ; mov rdx, rcx ; jmp 0x4863ad
0x000000000047e3e8 : cmp edx, 0 ; mov eax, edx ; jle 0x47e3f9 ; ret
0x000000000046847c : cmp edx, 0xff ; cmovne rax, rdx ; ret
0x0000000000474a51 : cmp edx, 0xff ; je 0x474a69 ; mov rax, rdx ; pop rbx ; ret
0x0000000000433712 : cmp edx, eax ; jne 0x4336f5 ; ret
0x000000000045e294 : cmp edx, ecx ; jb 0x45e265 ; ret
0x0000000000419f1c : cmp edx, ecx ; jne 0x419f05 ; ret
0x0000000000419f5c : cmp edx, ecx ; jne 0x419f48 ; sfence ; ret
0x0000000000467ee7 : cmp edx, ecx ; jne 0x467e9f ; mov eax, dword ptr [rdx] ; ret
0x000000000043348a : cmp edx, edi ; setae al ; ret
0x00000000004a3924 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x00000000004004d4 : cmp esi, ecx ; cmovge eax, edx ; jmp 0x4004aa
0x00000000004004d4 : cmp esi, ecx ; cmovge eax, edx ; jmp 0x4004ac
0x000000000045aa8a : cmp esi, ecx ; jb 0x45aa87 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004602f1 : cmp esi, edx ; ja 0x460305 ; ret
0x00000000004a9061 : cmp esi, esi ; call qword ptr [rcx]
0x00000000004a888d : cmp esi, esi ; jmp qword ptr [rdx]
0x000000000045a53b : cmp qword ptr [rsi + 0x30], 0 ; je 0x45a550 ; pop rbx ; ret
0x0000000000484d93 : cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x00000000004606f1 : cmp r10b, 0x3a ; je 0x4606b7 ; ret
0x00000000004201fa : cmp r11b, r14b ; ret
0x0000000000433505 : cmp r11d, 0xa ; je 0x433512 ; ret
0x00000000004319e5 : cmp rax, -0x1000 ; ja 0x431a0d ; ret
0x0000000000431a34 : cmp rax, -0x1000 ; ja 0x431a5d ; ret
0x0000000000431ba2 : cmp rax, -0x1000 ; ja 0x431be5 ; ret
0x000000000043f7c7 : cmp rax, -0x1000 ; ja 0x43f7f6 ; ret
0x000000000043fa40 : cmp rax, -0x1000 ; ja 0x43fa53 ; ret
0x0000000000460045 : cmp rax, -0x1000 ; ja 0x46006d ; ret
0x000000000046009a : cmp rax, -0x1000 ; ja 0x4600c5 ; ret
0x00000000004600e0 : cmp rax, -0x1000 ; ja 0x4600f3 ; ret
0x0000000000460347 : cmp rax, -0x1000 ; ja 0x460358 ; ret
0x000000000046b0cb : cmp rax, 0xfd ; jbe 0x46b0de ; ret
0x000000000045ac6d : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000040daf8 : cmp rax, rcx ; jae 0x40db28 ; movzx eax, byte ptr [rax] ; ret
0x000000000046b5a3 : cmp rax, rsi ; je 0x46b5b5 ; ret
0x00000000004684b3 : cmp rcx, qword ptr [rsi + rdi] ; jae 0x468479 ; xor eax, eax ; ret
0x000000000042338a : cmp rcx, rax ; jne 0x4233ba ; xor eax, eax ; ret
0x000000000040cd39 : cmp rcx, rsi ; jne 0x40cd38 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004863ca : cmp rdi, r9 ; jae 0x486396 ; mov rdx, rcx ; jmp 0x4863ae
0x000000000046847b : cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x0000000000433711 : cmp rdx, rax ; jne 0x4336f6 ; ret
0x000000000045e293 : cmp rdx, rcx ; jb 0x45e266 ; ret
0x0000000000419f1b : cmp rdx, rcx ; jne 0x419f06 ; ret
0x0000000000419f1a : cmp rdx, rcx ; jne 0x419f07 ; ret
0x0000000000419f5b : cmp rdx, rcx ; jne 0x419f49 ; sfence ; ret
0x0000000000467ee6 : cmp rdx, rcx ; jne 0x467ea0 ; mov eax, dword ptr [rdx] ; ret
0x0000000000433489 : cmp rdx, rdi ; setae al ; ret
0x000000000045aa89 : cmp rsi, rcx ; jb 0x45aa88 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004602f0 : cmp rsi, rdx ; ja 0x460306 ; ret
0x0000000000479d47 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a047 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047af47 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047ac47 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000422e09 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004a9d3f : cmpsb byte ptr [rsi], byte ptr [rdi] ; idiv bh ; sbb al, 0xd ; jle 0x4a9d45 ; jmp qword ptr [rdx]
0x00000000004a9d87 : cmpsb byte ptr [rsi], byte ptr [rdi] ; idiv bh ; sbb al, 0xd ; pop rdx ; jle 0x4a9d8d ; jmp qword ptr [rdx]
0x00000000004a9dcf : cmpsb byte ptr [rsi], byte ptr [rdi] ; idiv bh ; sbb al, 0xd ; push rcx ; jg 0x4a9dd5 ; jmp qword ptr [rdx]
0x00000000004ac384 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jb 0x4ac382 ; jmp qword ptr [rdx]
0x0000000000474d96 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x474da4 ; ret
0x00000000004a1956 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a1922 ; mov ecx, 0x5b92ac50 ; retf
0x000000000041d896 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a947 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a647 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3a71 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x000000000048a851 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax]
0x000000000048a871 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp rax
0x000000000048a831 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; push qword ptr [rax] ; test al, 0xf9 ; call qword ptr [rax]
0x00000000004acca9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rdx]
0x000000000045d4f4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004ace71 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; call qword ptr [rax]
0x00000000004a9c67 : cmpsd dword ptr [rsi], dword ptr [rdi] ; idiv bh ; sbb al, 0xd ; idiv dword ptr [rcx - 0xa] ; jmp qword ptr [rdx]
0x00000000004a9cf7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; idiv bh ; sbb al, 0xd ; jle 0x4a9cfd ; jmp qword ptr [rdx]
0x00000000004a143f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x000000000044e79b : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000412a35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000048a8d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call qword ptr [rax]
0x0000000000473121 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000467b9d : cwde ; add byte ptr [rax], al ; add al, ch ; retf -0x362
0x00000000004395e0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000439d77 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000040a9ee : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000484058 : cwde ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000402fb5 : cwde ; je 0x402fc7 ; mov edi, 0x6b60c0 ; call rax
0x000000000040b009 : cwde ; ret
0x000000000048a438 : cwde ; sar eax, -1 ; push 0x38fff8c2 ; ret
0x00000000004a8dd8 : cwde ; xor esi, esi ; call rdi
0x000000000044160d : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x000000000042bff1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000040a826 : dec byte ptr [rax + 0x21] ; retf -0x76b7
0x000000000042bff2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000410305 : dec byte ptr [rax - 0x73] ; ret
0x00000000004478b2 : dec byte ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000463f78 : dec byte ptr [rax - 0x77] ; ret
0x000000000047439f : dec byte ptr [rax - 0x77] ; ret 0x8948
0x000000000040c6da : dec byte ptr [rcx - 0x3b7cb7fd] ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404286 : dec byte ptr [rdi + rcx - 0x7b] ; ret 0
0x000000000044160e : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000457ae6 : dec dword ptr [r8 + 0x39] ; ret
0x000000000046b0c9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x46b0e0 ; ret
0x000000000042c132 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000467ade : dec dword ptr [rax + 0x29] ; ret 0x33e9
0x0000000000483933 : dec dword ptr [rax + 0x29] ; ret 0x8941
0x000000000046d218 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000472444 : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000448c49 : dec dword ptr [rax + 0x29] ; ror byte ptr [rax + 0x29], 1 ; retf -0x8b8
0x000000000040b324 : dec dword ptr [rax + 0x39] ; ret
0x000000000040a325 : dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000043ad5f : dec dword ptr [rax + 0x39] ; retf -0x7cf1
0x0000000000471fcd : dec dword ptr [rax + 0x63] ; ret 0x25e9
0x000000000046d099 : dec dword ptr [rax + 0x63] ; ret 0x31e9
0x000000000046f9e4 : dec dword ptr [rax + 0x63] ; ret 0xe6e9
0x000000000045f943 : dec dword ptr [rax + 0x63] ; std ; mov al, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000468ca6 : dec dword ptr [rax + 0x69] ; ret
0x000000000045b8c9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000046847e : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000040709e : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000040aa8e : dec dword ptr [rax + 0xf] ; ret 0xe0ba
0x0000000000466b06 : dec dword ptr [rax + 1] ; int1 ; call rcx
0x0000000000454888 : dec dword ptr [rax - 0x39] ; ret
0x000000000044b62f : dec dword ptr [rax - 0x3f] ; stc ; add cl, byte ptr [rax - 0x77] ; retf -0x76b8
0x0000000000482eb1 : dec dword ptr [rax - 0x42] ; mov eax, 0xf ; syscall
0x000000000043add8 : dec dword ptr [rax - 0x73] ; add qword ptr [r9], r14 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000043aa2d : dec dword ptr [rax - 0x73] ; add qword ptr [rcx], rsi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000435149 : dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x000000000045d623 : dec dword ptr [rax - 0x73] ; les r9, ptr [r8 - 0x77] ; ret 0x8948
0x000000000046655f : dec dword ptr [rax - 0x75] ; adc byte ptr [r9 + 3], cl ; add al, 0x24 ; call rax
0x0000000000450736 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x77] ; add ch, cl ; ret 0xb
0x0000000000408968 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000412f8d : dec dword ptr [rax - 0x75] ; je 0x412fbf ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000435503 : dec dword ptr [rax - 0x75] ; js 0x435529 ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x000000000041a0c8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000004018b5 : dec dword ptr [rax - 0x77] ; ret
0x00000000004602e1 : dec dword ptr [rax - 0x77] ; ret 0x2d77
0x000000000041153f : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x000000000046023e : dec dword ptr [rax - 0x77] ; ret 0x7577
0x0000000000439871 : dec dword ptr [rax - 0x77] ; ret 0x8349
0x00000000004110c8 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000043f91f : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000441491 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000474b6d : dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000443cf8 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000045f49f : dec dword ptr [rax - 0x77] ; ret 0xb8e9
0x00000000004142a1 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000004608b5 : dec dword ptr [rax - 0x77] ; ret 0xe75
0x0000000000459600 : dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000045cf4b : dec dword ptr [rax - 0x77] ; retf
0x000000000044120c : dec dword ptr [rax - 0x77] ; retf -0x76b8
0x0000000000463212 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000414281 : dec dword ptr [rax - 0x7b] ; xlatb ; je 0x414298 ; pop rbx ; ret
0x000000000046b0ca : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x46b0df ; ret
0x00000000004052ff : dec dword ptr [rax - 0x7d] ; ret
0x0000000000465108 : dec dword ptr [rax - 0x7d] ; ret 0x3110
0x000000000043ab64 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046511a : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000047ff29 : dec dword ptr [rax - 0x7d] ; ret 0x4908
0x000000000040b69c : dec dword ptr [rax - 0x7d] ; ret 0x8301
0x00000000004500fd : dec dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000045893d : dec dword ptr [rax - 0x7d] ; ret 0xeb02
0x0000000000400a28 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x0000000000453246 : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000468c31 : dec dword ptr [rax - 0x7d] ; retf 0x31ff
0x0000000000411744 : dec dword ptr [rax - 0x7d] ; retf 0x4801
0x000000000043f6ca : dec dword ptr [rax - 0x7f] ; ret 0x200
0x00000000004279b0 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000400776 : dec dword ptr [rax - 1] ; retf -0x6f15
0x0000000000460fe1 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret 0x3949
0x00000000004a5f1f : dec dword ptr [rax] ; retf -3
0x00000000004193e6 : dec dword ptr [rbp + 0x29] ; retf -0x72b5
0x00000000004522a0 : dec dword ptr [rbp - 0x77] ; out 0x89, al ; ret
0x000000000040755e : dec dword ptr [rbp - 0x77] ; ret
0x000000000046b1ec : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x000000000045fb5e : dec dword ptr [rbx + 4] ; jne 0x45fb84 ; pop rbx ; ret
0x000000000045c610 : dec dword ptr [rbx - 0x16e3dbbc] ; ret
0x0000000000418e6c : dec dword ptr [rcx + 0x29] ; ret 0xf748
0x000000000044132b : dec dword ptr [rcx + 0x39] ; ret 0x6775
0x0000000000444cca : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000004a5f3f : dec dword ptr [rcx + 0x4dfffdc2] ; retf -3
0x000000000046ff2f : dec dword ptr [rcx + 0x63] ; retf -0x47b8
0x00000000004a5f2b : dec dword ptr [rcx + 0x8fffdca] ; retf -3
0x000000000046a143 : dec dword ptr [rcx + 0xc8b48c1] ; retf -0x7e0a
0x000000000046658c : dec dword ptr [rcx + 0xf] ; adc byte ptr [r8 - 0x77], r9b ; ret 0x96e8
0x000000000043ef32 : dec dword ptr [rcx + rcx*4 - 0x11] ; mov ax, 3 ; syscall
0x0000000000455e2c : dec dword ptr [rcx + rcx*4 - 0x1e] ; mov r14, r9 ; jmp 0x452897
0x0000000000455dac : dec dword ptr [rcx + rcx*4 - 0x1e] ; mov r14, rax ; jmp 0x452897
0x000000000040e611 : dec dword ptr [rcx + rcx*4 - 0x40] ; nop dword ptr [rax] ; ret
0x00000000004475ef : dec dword ptr [rcx - 0x39] ; ret
0x0000000000457ae3 : dec dword ptr [rcx - 0x73] ; dec dword ptr [r8 + 0x39] ; ret
0x000000000040212d : dec dword ptr [rcx - 0x73] ; mov edi, 0x80 ; call rax
0x00000000004a5f33 : dec dword ptr [rcx - 0x7600023e] ; ret 0xfffd
0x0000000000483d31 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000456adb : dec dword ptr [rcx - 0x77] ; ret 0x20e9
0x0000000000452216 : dec dword ptr [rcx - 0x77] ; ret 0x81e9
0x000000000044af5e : dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000045177e : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000046d846 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc2802056
0x0000000000439b50 : dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x000000000040b222 : dec dword ptr [rcx] ; retf -0x7ebf
0x0000000000431a85 : dec dword ptr [rdi] ; and esp, 0x30 ; add byte ptr [rax], al ; ret
0x000000000045d806 : dec dword ptr [rdi] ; mov bh, 0x7d ; ret 0xb70f
0x0000000000458b66 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x00000000004375eb : dec dword ptr [rdi] ; ret 0x41c3
0x000000000040e116 : dec dword ptr [rdi] ; ret 0x6348
0x000000000046b926 : dec dword ptr [rdi] ; ret 0x8348
0x000000000043343f : dec dword ptr [rdi] ; sub dword ptr [rdx], 0x17 ; add byte ptr [rax], al ; ret
0x000000000044625a : dec dword ptr [rdi] ; test bl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000043f178 : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x0000000000439968 : dec dword ptr [rdi] ; test byte ptr [rdx - 0x77000000], ch ; ret 0xe281
0x0000000000430180 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044e9fd : dec dword ptr [rdi] ; test ebp, ecx ; ret 0xffff
0x000000000044f1a9 : dec dword ptr [rdi] ; test ebx, ebx ; ret
0x0000000000462629 : dec dword ptr [rdi] ; test ebx, edi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; retf -0x3015
0x000000000044e1c9 : dec dword ptr [rdi] ; test ecx, edi ; retf
0x000000000044f209 : dec dword ptr [rdi] ; test ecx, esi ; ret 0xffff
0x00000000004550bc : dec dword ptr [rdi] ; xchg dword ptr [rbx - 0x77000000], esi ; ret 0x348
0x0000000000455ac2 : dec dword ptr [rdi] ; xchg dword ptr [rip - 0x76ffffff], ebx ; ret 0x348
0x000000000047e128 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd138
0x0000000000464d11 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x0000000000410123 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb4e9
0x0000000000401340 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc031
0x00000000004748dc : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000431b79 : dec dword ptr [rdi] ; xor eax, 0x2f ; add byte ptr [rax], al ; ret
0x0000000000408033 : dec dword ptr [rdx] ; jne 0x40807e ; mov rdi, rsi ; call 0x484ac9
0x0000000000458585 : dec dword ptr [rdx] ; jne 0x458590 ; ret
0x0000000000487a76 : dec dword ptr [rip + 0x22ec1c] ; jne 0x487aa5 ; ret
0x000000000048a9af : dec dword ptr [rsi - 0x26] ; stc ; call rax
0x000000000047443d : dec ecx ; ret
0x0000000000400778 : dec edx ; jmp 0x40070d
0x0000000000400982 : dec edx ; jmp 0x400917
0x000000000042c131 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000439870 : dec qword ptr [rax - 0x77] ; ret 0x8349
0x0000000000400775 : dec qword ptr [rax - 1] ; retf -0x6f15
0x0000000000400777 : dec rdx ; jmp 0x40070e
0x0000000000400981 : dec rdx ; jmp 0x400918
0x000000000048326d : div byte ptr [rax + rbx - 0x80] ; cli ; adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x000000000043f7a1 : div byte ptr [rbp + 0x34] ; mov eax, 0xba ; syscall
0x000000000045b3d2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000043da51 : div byte ptr [rbp + rax*8 + 0x5b] ; ret
0x0000000000431fb5 : div dword ptr [rcx] ; fucomi st(0) ; fild dword ptr [r10] ; add bl, ch ; retf
0x00000000004595d5 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474b80 : div ebp ; pop rbp ; pop r12 ; ret
0x00000000004460a5 : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000430cde : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004595d4 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474b7f : div rbp ; pop rbp ; pop r12 ; ret
0x00000000004004dc : enter -0x1401, -0x3a ; ret
0x00000000004302f4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000043f269 : enter -0x72b7, 0xc ; retf 0x718b
0x000000000042bfee : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000042c12e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000046a165 : enter -0x74b2, 4 ; ret 0xf641
0x0000000000435025 : enter -0x74b8, 0x74 ; sbb ah, byte ptr [rax] ; call rax
0x000000000043382e : enter -0x7cb8, 0x7c ; retf 0x1f8
0x0000000000444bfb : enter -1, -0x17 ; cdq ; retf
0x0000000000498870 : enter 0, 0 ; retf 0
0x0000000000400560 : enter 0x108a, -1 ; retf
0x0000000000414ab4 : enter 0x19d, 0 ; ret
0x000000000040dafa : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000045cdaa : enter 0x31c3, -0x40 ; nop ; ret
0x000000000041613d : enter 0x31c3, -0x40 ; ret
0x0000000000400a27 : enter 0x48ff, -0x7d ; ret 0xeb04
0x000000000047eab4 : enter 0x4c20, 0x39 ; ret 0x8188
0x00000000004019ca : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000405946 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x00000000004331df : enter 0x6349, -1 ; mov eax, 3 ; syscall
0x00000000004a40dc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000495470 : enter 0xc, 0 ; retf
0x0000000000495870 : enter 0xf, 0 ; retf
0x000000000044005c : enter 0xf00, -0x7c ; ret
0x0000000000422eb6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000414b61 : enter 0xf66, -0x15 ; ret
0x000000000041953b : enter 0xfc3, 0x1f ; add byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000498a70 : enter 1, 0 ; retf 1
0x0000000000495d90 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000498c70 : enter 2, 0 ; retf 2
0x0000000000498e70 : enter 3, 0 ; retf 3
0x0000000000499070 : enter 4, 0 ; retf 4
0x0000000000481914 : enter 5, 0 ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000499270 : enter 5, 0 ; retf 5
0x0000000000499470 : enter 6, 0 ; retf 6
0x0000000000499670 : enter 7, 0 ; retf 7
0x0000000000499870 : enter 8, 0 ; retf 8
0x0000000000495070 : enter 9, 0 ; retf
0x0000000000499a70 : enter 9, 0 ; retf 9
0x000000000040c4c7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000040c883 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000407619 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000433836 : fadd dword ptr [rax] ; leave ; ret
0x0000000000449865 : fadd dword ptr [rcx - 0x77] ; ret
0x0000000000434a42 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047dce7 : fadd st(1) ; call 0xffffffff8a0a0612
0x000000000046ab6d : fadd st(3) ; mov eax, 0xffffffff ; ret
0x00000000004342d1 : faddp st(1) ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000422a01 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000471740 : fchs ; jmp 0x471190
0x00000000004a3718 : fcmovb st(0), st(3) ; ret
0x00000000004a5f98 : fcmovbe st(0), st(2) ; std ; call rax
0x000000000041169a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000407ed5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040b23a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043240f : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004127d4 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004a4499 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a2700 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000430db0 : fcompi st(3) ; ret
0x000000000048a9e1 : fdiv st(1), st(0) ; call qword ptr [rax + 0x20fff9db]
0x000000000048abd9 : fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000048aa9d : fdiv st(1), st(0) ; call rdx
0x000000000048aa99 : fdiv st(1), st(0) ; inc dword ptr [rdx - 0x24] ; stc ; call rdx
0x000000000048aa1d : fdiv st(1), st(0) ; jmp rsi
0x000000000048aa8d : fdivp st(1) ; call qword ptr [rdx + 0x22fff9dd]
0x000000000048aa09 : fdivp st(1) ; call qword ptr [rsi]
0x000000000048abc9 : fdivp st(1) ; call rax
0x000000000048abc5 : fdivp st(1) ; inc dword ptr [rax - 0x22] ; stc ; call rax
0x000000000048ab49 : fdivp st(1) ; jmp rsp
0x00000000004537a3 : fdivp st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000045ff8e : fdivr dword ptr [rsi + 0x81] ; syscall
0x000000000045fe49 : fdivr st(2) ; dec dword ptr [rax + 0x39] ; ret
0x000000000045fe41 : fdivr st(2) ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a1a55 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004a5ff9 : fdivr st(5) ; call rsp
0x00000000004a60e9 : fdivr st(5) ; inc dword ptr [rax + rbx*8 - 3] ; jmp rsp
0x00000000004a60ed : fdivr st(5) ; jmp rsp
0x00000000004302f8 : fdivr st(7) ; ret
0x000000000040709c : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8348
0x0000000000431bd2 : fiadd dword ptr [rbx + 0x2e8247c] ; cmove eax, edx ; ret
0x0000000000446091 : fiadd word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000004a9834 : ficom word ptr [rdx - 0xa] ; jmp qword ptr [rdx]
0x0000000000432899 : ficomp word ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000004a42e6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000419ede : fidiv word ptr [rcx + 0x394c0029] ; retf 0x3b77
0x0000000000434955 : fidivr dword ptr [rax + 1] ; ret
0x0000000000431fb9 : fild dword ptr [r10] ; add bl, ch ; retf
0x0000000000431fba : fild dword ptr [rdx] ; add bl, ch ; retf
0x000000000043370d : fild word ptr [rbp + 0x28] ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000044aeed : fild word ptr [rcx + rax] ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000046262c : fild word ptr [rcx] ; add byte ptr [rax], al ; mov r10, rcx ; jmp 0x46260a
0x0000000000437d7a : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000046d48f : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000044a379 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000439841 : fimul dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000041a0f2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048606a : fimul dword ptr [rbp - 0x77] ; retf 0x34c
0x0000000000431315 : fimul dword ptr [rcx + 0x63] ; cld ; mov eax, 3 ; syscall
0x000000000046b7ef : fimul dword ptr [rcx] ; ret 0xb70f
0x00000000004099a2 : fimul word ptr [rax - 0x77] ; ret 0x8d4a
0x000000000043af5c : fimul word ptr [rax - 0x77] ; retf
0x0000000000448076 : fimul word ptr [rax - 0x7d] ; ret
0x00000000004745ac : fimul word ptr [rbp + 0x11] ; retf
0x000000000047456e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4745c8
0x00000000004814be : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x481518
0x000000000047f026 : fimul word ptr [rdx + 0x39480023] ; ret 0xf48
0x00000000004aabf3 : fimul word ptr [rdx] ; ret
0x000000000040aaf2 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040c60c : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004073b4 : fisttp dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x4073d8
0x00000000004866c1 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004739f1 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000401812 : fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x00000000004681c6 : fisttp dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x94 ; ret
0x00000000004671a9 : fisttp dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000473a0b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000462d9e : fisttp dword ptr [rcx - 0x77] ; ret 0xd284
0x0000000000419123 : fisttp qword ptr [rax - 0x77] ; ret
0x0000000000471bc1 : fisttp qword ptr [rax - 0x77] ; retf
0x00000000004435e2 : fisttp word ptr [rax + 0x39] ; ret
0x00000000004320c9 : fisttp word ptr [rax - 0x77] ; ret 0x14c
0x000000000043be97 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x00000000004413e7 : fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x0000000000473a8f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000466097 : fisttp word ptr [rcx + 0xf] ; adc byte ptr [r8 - 0x77], r9b ; ret 0x8be8
0x000000000041ebcd : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004602c1 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x0000000000422dd1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000422ad1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000473afb : fld dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047ec03 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004a2741 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000047482a : fld xword ptr [rsp - 0x18] ; ret
0x000000000043f6f9 : fldcw word ptr [rsp - 2] ; ret
0x0000000000419699 : fldenv dword ptr [rsi + 0xf] ; je 0x4196f6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000420577 : fldenv dword ptr [rsi + 0xf] ; je 0x4205d4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000422e51 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000419591 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000474614 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000432445 : fmul dword ptr [rax + 0x39] ; ret
0x000000000040ee40 : fmul dword ptr [rax + 3] ; add byte ptr [r8 + 0x39], r9b ; ret 0xd575
0x00000000004305c7 : fmul dword ptr [rax + 9] ; retf 0x4466
0x00000000004463f1 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000466d20 : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000460fe4 : fmul dword ptr [rcx + 0x21] ; ret 0x3949
0x00000000004555df : fmul dword ptr [rcx - 0x77] ; ret
0x00000000004673b8 : fmul dword ptr [rdi + rcx + 0x44] ; retf -0x74b8
0x000000000046a98d : fmul qword ptr [rax - 0x75] ; sbb al, 0x24 ; add rsp, 0x30 ; ret
0x000000000046c68e : fmul qword ptr [rax - 0x77] ; ret
0x0000000000403754 : fmul qword ptr [rcx + 0x63] ; cld ; mov eax, 3 ; syscall
0x0000000000414ef9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041a99f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004a6ff4 : fmul qword ptr [rdx] ; add byte ptr [rax], al ; or ah, dh ; cmc ; call qword ptr [rax]
0x0000000000470801 : fmulp st(1) ; ret
0x00000000004a3f8a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf -0x51ce
0x0000000000406185 : fpatan ; ret
0x000000000047e411 : frstor dword ptr [rcx + rcx*4 + 0x34] ; and eax, 0x2d0 ; ret
0x0000000000422bd1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a6401 : fscale ; jmp qword ptr [rax]
0x000000000045fe0a : fsqrt ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a2427 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000042088e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004ac876 : fstp dword ptr [rsi + 0xd1cfff8] ; ret
0x00000000004a27a0 : fstp st(0) ; ret 0xde5d
0x00000000004a6400 : fstp st(1), st(0) ; std ; jmp qword ptr [rax]
0x00000000004a196b : fstp st(3), st(0) ; retf -0x147d
0x0000000000431bf8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000431a0c : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, 0xffffffffffffffff ; ret
0x00000000004a9d3e : fsub dword ptr [rsi + 0xd1cfff6] ; jle 0x4a9d46 ; jmp qword ptr [rdx]
0x0000000000422ed1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ae64 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004a3d58 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000043070b : fsub qword ptr [rsi + 0xf] ; jmp 0x4306d7
0x0000000000422cd1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000414c7c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004b28dc : fsub st(5), st(0) ; cld ; jmp qword ptr [rdx]
0x00000000004b14f4 : fsubr qword ptr [rdi - 0x5c980000] ; sti ; call qword ptr [rax]
0x000000000040abc5 : fsubr st(3) ; retf
0x00000000004a4478 : fucom st(5) ; loop 0x4a44d1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000431fb7 : fucomi st(0) ; fild dword ptr [r10] ; add bl, ch ; retf
0x0000000000474a17 : fucompi st(0) ; push rbx ; retf
0x000000000043dd67 : fucompi st(0) ; ret
0x000000000040c9cf : fucompi st(0) ; retf
0x00000000004a3abe : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000478549 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000486598 : hlt ; adc byte ptr [rbx], ah ; add byte ptr [rbx + 0x48], bl ; mov dword ptr [rsi + 0x28], eax ; ret
0x00000000004372ae : hlt ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000479449 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a6ff9 : hlt ; cmc ; call qword ptr [rax]
0x00000000004aa014 : hlt ; jg 0x4aa010 ; jmp qword ptr [rdx]
0x00000000004a2828 : hlt ; jmp 0x4a27fd
0x00000000004ade0c : hlt ; js 0x4ade16 ; add byte ptr [rax], ah ; sub cl, bh ; call qword ptr [rbx]
0x0000000000427e1a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042546e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431180 : hlt ; mov rdi, rdx ; mov eax, r9d ; syscall
0x000000000042fe03 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004a710c : hlt ; or eax, dword ptr [rax] ; add byte ptr [rax - 5], al ; cmc ; call qword ptr [rbx]
0x0000000000400ef0 : hlt ; pop rbp ; mov edi, 0x6b5b70 ; jmp rax
0x00000000004535c8 : hlt ; retf
0x00000000004a2963 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000042fe07 : hlt ; sub eax, edx ; ret
0x000000000046d097 : idiv bh ; dec dword ptr [rax + 0x63] ; ret 0x31e9
0x0000000000483d2f : idiv bh ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000474442 : idiv bh ; dec ecx ; ret
0x00000000004ab1aa : idiv bh ; retf 1
0x00000000004a9830 : idiv bh ; sbb al, 0xd ; ficom word ptr [rdx - 0xa] ; jmp qword ptr [rdx]
0x00000000004aa010 : idiv bh ; sbb al, 0xd ; hlt ; jg 0x4aa014 ; jmp qword ptr [rdx]
0x00000000004a9c68 : idiv bh ; sbb al, 0xd ; idiv dword ptr [rcx - 0xa] ; jmp qword ptr [rdx]
0x00000000004a9cf8 : idiv bh ; sbb al, 0xd ; jle 0x4a9cfc ; jmp qword ptr [rdx]
0x00000000004a9d40 : idiv bh ; sbb al, 0xd ; jle 0x4a9d44 ; jmp qword ptr [rdx]
0x00000000004a89f0 : idiv bh ; sbb al, 0xd ; mov dword ptr [rbx - 0xa], eax ; jmp qword ptr [rdx]
0x00000000004a89a8 : idiv bh ; sbb al, 0xd ; mov eax, dword ptr [rbx - 0xa] ; jmp qword ptr [rdx]
0x00000000004a9998 : idiv bh ; sbb al, 0xd ; movsxd rsi, esi ; jmp qword ptr [rdx]
0x00000000004a7ab8 : idiv bh ; sbb al, 0xd ; or r14b, sil ; jmp qword ptr [rdx]
0x00000000004a8720 : idiv bh ; sbb al, 0xd ; pop rax ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000004a7b00 : idiv bh ; sbb al, 0xd ; pop rbx ; or dh, dh ; jmp qword ptr [rdx]
0x00000000004a9d88 : idiv bh ; sbb al, 0xd ; pop rdx ; jle 0x4a9d8c ; jmp qword ptr [rdx]
0x00000000004a8768 : idiv bh ; sbb al, 0xd ; push rcx ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000004a9dd0 : idiv bh ; sbb al, 0xd ; push rcx ; jg 0x4a9dd4 ; jmp qword ptr [rdx]
0x00000000004a9bd8 : idiv bh ; sbb al, 0xd ; ret
0x00000000004a9a70 : idiv bh ; sbb al, 0xd ; ret 0xf665
0x00000000004aa2e0 : idiv bh ; sbb al, 0xd ; retf -0x97f
0x00000000004a99e0 : idiv bh ; sbb al, 0xd ; sbb esp, dword ptr [rbx - 0xa] ; jmp qword ptr [rdx]
0x00000000004a9ea8 : idiv bh ; sbb al, 0xd ; scasb al, byte ptr [rdi] ; jg 0x4a9eac ; jmp qword ptr [rdx]
0x00000000004a9e60 : idiv bh ; sbb al, 0xd ; stc ; jle 0x4a9e64 ; jmp qword ptr [rdx]
0x00000000004a8840 : idiv bh ; sbb al, 0xd ; std ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000004aa0e8 : idiv bh ; sbb al, 0xd ; std ; jg 0x4aa0ec ; jmp qword ptr [rdx]
0x00000000004a9710 : idiv bh ; sbb al, 0xd ; xor byte ptr [rbx - 0xa], cl ; jmp qword ptr [rdx]
0x00000000004375e6 : idiv byte ptr [rax - 1] ; cmovns eax, edx ; ret
0x00000000004017f6 : idiv byte ptr [rdi + 1] ; call rax
0x00000000004a89ef : idiv dil ; sbb al, 0xd ; mov dword ptr [rbx - 0xa], eax ; jmp qword ptr [rdx]
0x00000000004a89a7 : idiv dil ; sbb al, 0xd ; mov eax, dword ptr [rbx - 0xa] ; jmp qword ptr [rdx]
0x00000000004a9c6c : idiv dword ptr [rcx - 0xa] ; jmp qword ptr [rdx]
0x00000000004402c9 : idiv ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000473126 : idiv ecx ; pop r15 ; ret
0x000000000043ab62 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000047443b : idiv edi ; dec ecx ; ret
0x00000000004a883f : idiv r15b ; sbb al, 0xd ; std ; cmp dh, dh ; jmp qword ptr [rdx]
0x0000000000473125 : idiv r9 ; pop r15 ; ret
0x000000000044814b : imul cl ; ret
0x0000000000412cd9 : imul cl ; retf
0x00000000004adf3c : imul dword ptr [rsi] ; stc ; jmp qword ptr [rdx]
0x000000000044aeeb : imul eax ; fild word ptr [rcx + rax] ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004570bf : imul eax ; retf
0x000000000040db8c : imul eax, dword ptr [rax + 0x48], -0x77 ; retf 0x2b48
0x0000000000414346 : imul eax, dword ptr [rax], -0x18 ; ret
0x000000000046a49e : imul eax, dword ptr [rax], -1 ; loopne 0x46a503 ; ret
0x0000000000402737 : imul eax, dword ptr [rax], -1 ; sar dword ptr [rdi + 0x6b6000], cl ; call rbx
0x00000000004010ab : imul eax, dword ptr [rax], 0 ; mov eax, 0 ; leave ; ret
0x000000000046b5d2 : imul eax, dword ptr [rax], 0x48 ; add esp, 8 ; jmp rax
0x000000000046b3f8 : imul eax, dword ptr [rax], 0x48 ; add esp, 8 ; ret
0x0000000000401582 : imul eax, dword ptr [rax], 0x48 ; mov dword ptr [rsi], esi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000043e00d : imul eax, dword ptr [rax], 0x48 ; test eax, eax ; je 0x43e01d ; call rax
0x0000000000487400 : imul eax, dword ptr [rax], 0x48 ; test eax, eax ; je 0x487410 ; call rax
0x00000000004652a5 : imul eax, dword ptr [rax], 0x5b ; pop rbp ; jmp rax
0x0000000000410aad : imul eax, dword ptr [rax], 0xf ; xchg eax, ebp ; ret 0x8348
0x0000000000411a0a : imul eax, dword ptr [rax], 0xf ; xchg eax, ebp ; ret 0x948
0x00000000004ace6d : imul eax, dword ptr [rax], 0xf8a77000 ; call qword ptr [rax]
0x00000000004aced5 : imul eax, dword ptr [rax], 0xf8ab1800 ; jmp rcx
0x000000000042e961 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000418907 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000418307 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x000000000040e785 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418007 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004ac3aa : imul ecx, dword ptr [rsi], 0x10 ; add dword ptr [rdx], 0x59 ; ret
0x0000000000417a07 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000417707 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000417407 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x000000000045d19e : imul esi, edx ; add eax, esi ; ret
0x000000000047b464 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042dddc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000414345 : imul rax, qword ptr [rax], -0x18 ; ret
0x0000000000410aac : imul rax, qword ptr [rax], 0xf ; xchg eax, ebp ; ret 0x8348
0x0000000000411a09 : imul rax, qword ptr [rax], 0xf ; xchg eax, ebp ; ret 0x948
0x00000000004b2894 : in al, -0x13 ; cld ; jmp qword ptr [rdx]
0x000000000045fe48 : in al, -0x28 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000004a60f0 : in al, -0x2c ; std ; jmp rsp
0x00000000004836eb : in al, -0x7d ; call qword ptr [rcx]
0x0000000000427dfa : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004af99d : in al, -6 ; jmp qword ptr [rdx]
0x0000000000431a88 : in al, 0x30 ; add byte ptr [rax], al ; ret
0x0000000000471f60 : in al, 0x4c ; lea edi, dword ptr [rsp + 0x50] ; jmp 0x471f3a
0x00000000004a3da1 : in al, 0x4c ; pop rax ; retf
0x00000000004ac1fc : in al, 0x5c ; add byte ptr [rax], al ; nop ; jb 0x4ac202 ; jmp qword ptr [rdi]
0x000000000041701c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043ad73 : in al, 0x74 ; retf -0x74b8
0x000000000045e1f3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004146c4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x1ed
0x0000000000404fbb : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000004405bc : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0xd2
0x00000000004685b5 : in al, dx ; add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004168c0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000487a79 : in al, dx ; and al, byte ptr [rax] ; jne 0x487aa2 ; ret
0x00000000004740b8 : in al, dx ; cmp dh, dh ; ret 0x7401
0x0000000000467b9c : in al, dx ; cwde ; add byte ptr [rax], al ; add al, ch ; retf -0x362
0x0000000000484057 : in al, dx ; cwde ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000004a5ff8 : in al, dx ; fdivr st(5) ; call rsp
0x0000000000474829 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004ad904 : in al, dx ; jae 0x4ad90e ; add byte ptr [rax + 0x1d], bl ; stc ; call qword ptr [rcx]
0x0000000000460106 : in al, dx ; jo 0x460102 ; ret 0x4840
0x000000000042546a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004281fa : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043310b : in al, dx ; movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000045b207 : in al, dx ; or al, ch ; ret 1
0x0000000000412d3a : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046076e : in al, dx ; or byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000041178a : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004ace04 : in al, dx ; push -0x5d580000 ; clc ; call qword ptr [rsi]
0x00000000004a3f8d : in al, dx ; retf -0x51ce
0x000000000045c9f6 : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3a20b66
0x00000000004b1fb4 : in al, dx ; sub bh, ah ; jmp qword ptr [rdx]
0x00000000004a3ebe : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a3e51 ; ret 0x48f
0x00000000004a3ebd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a3e52 ; ret 0x48f
0x00000000004a261a : in eax, -0x1b ; retf 0x2a91
0x00000000004a4479 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004ae98c : in eax, -0x65 ; cli ; jmp qword ptr [rdx]
0x0000000000427e7a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000041faaa : in eax, -0xd ; ret
0x000000000041429f : in eax, -1 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000004a3941 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004afa2d : in eax, -6 ; jmp qword ptr [rdx]
0x0000000000431398 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004a25c3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041a01a : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000440b82 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a1859 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000045ea33 : in eax, 0x75 ; retf -0x74b8
0x000000000045c393 : in eax, 0xf ; je 0x45c3b8 ; add rax, 2 ; ret
0x00000000004046c0 : in eax, dx ; add r9b, bpl ; retf
0x00000000004b2895 : in eax, dx ; cld ; jmp qword ptr [rdx]
0x00000000004af99c : in eax, dx ; in al, -6 ; jmp qword ptr [rdx]
0x000000000044e8c9 : in eax, dx ; jmp 0x44ab49
0x0000000000486f5f : in eax, dx ; jne 0x486f41 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000430622 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004a1b85 : in eax, dx ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a1bf6 ; salc ; retf
0x000000000047e401 : in eax, dx ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000042527a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042827a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000478f50 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047fb22 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000487142 : in eax, dx ; pop rbx ; ret
0x000000000040c372 : in eax, dx ; ret
0x00000000004a2398 : in eax, dx ; retf
0x0000000000430772 : in eax, dx ; sub rax, 1 ; ret
0x0000000000419f88 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004a5837 : inc dword ptr [rax + 0x14] ; std ; call qword ptr [rax - 0x1f0002ea]
0x00000000004a57a3 : inc dword ptr [rax + 0x2d] ; std ; jmp qword ptr [rax]
0x00000000004a57c3 : inc dword ptr [rax + 0x3c] ; std ; jmp qword ptr [rax]
0x000000000048a587 : inc dword ptr [rax + 0x48] ; stc ; call qword ptr [rax - 0x1f0006b7]
0x000000000048ae97 : inc dword ptr [rax + 0xfff9c1] ; ret
0x00000000004a60e7 : inc dword ptr [rax + rbx*8 - 3] ; inc dword ptr [rax + rbx*8 - 3] ; jmp rsp
0x00000000004a60eb : inc dword ptr [rax + rbx*8 - 3] ; jmp rsp
0x000000000044b49b : inc dword ptr [rax - 0x114c43] ; jmp qword ptr [rax]
0x000000000048abc7 : inc dword ptr [rax - 0x22] ; stc ; call rax
0x000000000048a953 : inc dword ptr [rax - 0x2f000666] ; wait ; stc ; jmp qword ptr [rax]
0x000000000048a597 : inc dword ptr [rax - 0x2f0006b3] ; stc ; jmp qword ptr [rax]
0x000000000044162b : inc dword ptr [rax - 0x51843] ; jmp qword ptr [rax]
0x0000000000442086 : inc dword ptr [rax - 0x54543] ; jmp qword ptr [rax]
0x000000000048a91f : inc dword ptr [rax - 0x54] ; stc ; call qword ptr [rax]
0x000000000048a7f7 : inc dword ptr [rax - 0x56] ; stc ; jmp qword ptr [rax]
0x000000000048a997 : inc dword ptr [rax - 0x64] ; stc ; call qword ptr [rax - 0x1f000663]
0x000000000048a943 : inc dword ptr [rax - 0x6b] ; stc ; call qword ptr [rax - 0x1f00066a]
0x000000000048a7e7 : inc dword ptr [rax - 0x75] ; stc ; jmp rax
0x000000000047f05b : inc dword ptr [rax - 0x7bf0ffc8] ; retf
0x0000000000404283 : inc dword ptr [rax - 0x80] ; dec byte ptr [rdi + rcx - 0x7b] ; ret 0
0x000000000044f01f : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x3ce9
0x000000000044dcdc : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x7fe9
0x00000000004233e7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000048af83 : inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x000000000048a9df : inc dword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax + 0x20fff9db]
0x000000000048a6a3 : inc dword ptr [rax] ; jb 0x48a6a4 ; jmp qword ptr [rax]
0x000000000048abb7 : inc dword ptr [rax] ; loopne 0x48abbc ; call qword ptr [rax + 0x20fff9df]
0x000000000048a5bf : inc dword ptr [rax] ; or edi, ecx ; call qword ptr [rax]
0x000000000048ae9b : inc dword ptr [rax] ; ret
0x000000000048ac27 : inc dword ptr [rax] ; sar ecx, 1 ; push qword ptr [rax - 0x30] ; stc ; jmp rsi
0x000000000048af53 : inc dword ptr [rax] ; xor bh, dl ; jmp qword ptr [rax]
0x00000000004a57ab : inc dword ptr [rax] ; xor ebp, edi ; jmp rax
0x000000000048af2b : inc dword ptr [rax] ; xor edx, edi ; call qword ptr [rax]
0x00000000004442b6 : inc dword ptr [rbp + 0x29] ; retf
0x0000000000444151 : inc dword ptr [rbp + 0x29] ; retf -0x77f1
0x000000000044e8c6 : inc dword ptr [rbp + 0x31] ; in eax, dx ; jmp 0x44ab4c
0x0000000000465692 : inc dword ptr [rbp + 0x5b0275c0] ; ret
0x0000000000465769 : inc dword ptr [rbp + 0x5b0278c0] ; ret
0x0000000000437381 : inc dword ptr [rbp - 0x74f18b40] ; add ebp, ecx ; ret
0x00000000004448ff : inc dword ptr [rbx + 0x34e901c1] ; retf
0x000000000048ab63 : inc dword ptr [rbx + rbx*8 - 7] ; call rsp
0x000000000044acaa : inc dword ptr [rbx - 0x10e743] ; jmp qword ptr [rax]
0x000000000045548b : inc dword ptr [rbx - 0x7af00008] ; call rdi
0x0000000000438205 : inc dword ptr [rbx - 0x7af0f808] ; retf
0x00000000004455c7 : inc dword ptr [rbx - 0x7bf00008] ; retf
0x000000000043e364 : inc dword ptr [rbx - 0x7cb7fe40] ; ret 0x8308
0x000000000044f638 : inc dword ptr [rbx - 0x7cf0cf06] ; retf 0
0x0000000000430cf1 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000430c0f : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000442f0c : inc dword ptr [rcx + 0x29] ; ret 0x3944
0x000000000044c1e2 : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x000000000044aff2 : inc dword ptr [rcx + 0x39] ; ret
0x00000000004441ce : inc dword ptr [rcx + 0x39] ; ret 0x870f
0x0000000000408801 : inc dword ptr [rcx + 0x5f] ; ret
0x000000000040b443 : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000453f4f : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x4501c9
0x0000000000460f9d : inc dword ptr [rcx - 0x75] ; push rdi ; sub dh, dh ; ret 0xf04
0x0000000000403c6b : inc dword ptr [rcx - 0x75] ; sbb byte ptr [rdi], cl ; retf
0x000000000046a162 : inc dword ptr [rcx - 0x77] ; enter -0x74b2, 4 ; ret 0xf641
0x0000000000446d97 : inc dword ptr [rcx - 0x77] ; sahf ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000048a717 : inc dword ptr [rcx - 0x77] ; stc ; call rcx
0x000000000040b83f : inc dword ptr [rcx - 0x7f] ; retf
0x000000000044dae9 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000047f1f9 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff3
0x0000000000402cbb : inc dword ptr [rcx] ; add byte ptr [rax], al ; mov edi, 0x6b7060 ; call rax
0x0000000000458111 : inc dword ptr [rcx] ; jmp 0x457c09
0x00000000004b3896 : inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000048141c : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048aa9b : inc dword ptr [rdx - 0x24] ; stc ; call rdx
0x000000000048acab : inc dword ptr [rdx - 0x30] ; stc ; call rdx
0x000000000048a6db : inc dword ptr [rdx - 0x7b] ; stc ; jmp rax
0x000000000048a6d7 : inc dword ptr [rdx - 0x7c] ; stc ; inc dword ptr [rdx - 0x7b] ; stc ; jmp rax
0x000000000048aa8b : inc dword ptr [rdx] ; fdivp st(1) ; call qword ptr [rdx + 0x22fff9dd]
0x000000000041f3ad : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000048a9f7 : inc dword ptr [rsi - 0x20] ; stc ; call rsi
0x000000000048a75f : inc dword ptr [rsi - 0x76] ; stc ; call rsi
0x000000000048a733 : inc dword ptr [rsi - 0x7d] ; stc ; call qword ptr [rsi]
0x000000000048a5af : inc eax ; add bh, cl ; call rax
0x00000000004a5817 : inc eax ; add ebp, edi ; call qword ptr [rax]
0x000000000048a963 : inc eax ; lahf ; stc ; call qword ptr [rax]
0x000000000048a69b : inc eax ; outsd dx, dword ptr [rsi] ; stc ; jmp rax
0x000000000048a67b : inc eax ; stc ; jmp rax
0x00000000004a580b : inc eax ; std ; jmp qword ptr [rax]
0x000000000048a977 : inc eax ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x000000000048af1b : inc eax ; xor dl, bh ; call rax
0x000000000048af73 : inc eax ; xor eax, 0x35d0fffa ; cli ; jmp rax
0x000000000048af4b : inc eax ; xor edx, edi ; jmp rax
0x000000000046ab73 : inc ebx ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000045ac7c : inc ebx ; nop ; xor eax, eax ; ret
0x00000000004302f9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004051dd : inc ecx ; cli ; add al, byte ptr [rcx] ; retf -0x2e77
0x00000000004a5e67 : inc ecx ; ret
0x000000000046a161 : inc qword ptr [rcx - 0x77] ; enter -0x74b2, 4 ; ret 0xf641
0x00000000004ad125 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; ret
0x000000000047482b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000043f6fa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004a447e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b2284 : insb byte ptr [rdi], dx ; mov ebp, 0x75e80000 ; cld ; call qword ptr [rax]
0x0000000000403887 : insb byte ptr [rdi], dx ; mov qword ptr gs:[r13 + 0x10], rcx ; call 0x4002e8
0x0000000000403886 : insb byte ptr [rdi], dx ; mov qword ptr gs:[r13 + 0x10], rcx ; call 0x4002e9
0x00000000004b2f84 : insb byte ptr [rdi], dx ; retf 0
0x000000000047316d : insb byte ptr [rdi], dx ; retf 0x45f0
0x00000000004a3846 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x00000000004787d0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004796d0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004ac039 : insd dword ptr [rdi], dx ; clc ; call qword ptr [rdx]
0x00000000004a447f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a282d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004a373f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004a3d9b : int 0x66
0x00000000004a3907 : int 0x80
0x0000000000439f30 : int 0xcb
0x000000000046b85d : int 0xff
0x00000000004460a6 : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000419d9e : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458bd1 : int1 ; and eax, 0x48b4800 ; ret 0x8548
0x0000000000466b09 : int1 ; call rcx
0x000000000040cd3b : int1 ; jne 0x40cd36 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000045cc6b : int1 ; lea rsi, qword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x00000000004a3704 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x0000000000414266 : int1 ; mov eax, 0x16 ; je 0x414278 ; ret
0x0000000000427c6b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000425a3f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fdd3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000430cdf : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004334b2 : int1 ; pop rdx ; pop r10 ; ret
0x00000000004a3e56 : int1 ; ret 0x5803
0x000000000042fdd7 : int1 ; sub eax, edx ; ret
0x00000000004863cc : iretd ; jae 0x486394 ; mov rdx, rcx ; jmp 0x4863ac
0x0000000000400ee3 : ja 0x400eea ; pop rbp ; ret
0x0000000000407fe2 : ja 0x408046 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000419e88 : ja 0x419e93 ; ret
0x000000000041fa38 : ja 0x41fa32 ; ret 0x7401
0x000000000042088d : ja 0x42086e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042df27 : ja 0x42df2d ; ret
0x000000000042df43 : ja 0x42df4d ; mov dword ptr [rdi], ecx ; ret
0x000000000042df84 : ja 0x42df93 ; mov qword ptr [rdi], rcx ; ret
0x000000000042e009 : ja 0x42e01d ; ret
0x000000000042e05f : ja 0x42e077 ; ret
0x000000000042e0e1 : ja 0x42e0fd ; ret
0x000000000042e547 : ja 0x42e551 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000042e563 : ja 0x42e571 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000042e5b4 : ja 0x42e5c7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000042e699 : ja 0x42e6b1 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000042e70f : ja 0x42e72b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000042e791 : ja 0x42e7b1 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043117e : ja 0x4311a4 ; hlt ; mov rdi, rdx ; mov eax, r9d ; syscall
0x00000000004319eb : ja 0x431a07 ; ret
0x0000000000431a3a : ja 0x431a57 ; ret
0x0000000000431ba8 : ja 0x431bdf ; ret
0x000000000043269c : ja 0x4326b3 ; mov qword ptr [rdx], rdi ; ret
0x000000000043f7cd : ja 0x43f7f0 ; ret
0x000000000043fa46 : ja 0x43fa4d ; ret
0x000000000043fa46 : ja 0x43fa50 ; ret
0x0000000000446090 : ja 0x446075 ; mov eax, r8d ; ret
0x000000000046004b : ja 0x460067 ; ret
0x00000000004600a0 : ja 0x4600bf ; ret
0x00000000004600e6 : ja 0x4600ed ; ret
0x00000000004600e6 : ja 0x4600f0 ; ret
0x000000000046012f : ja 0x46016d ; add rsp, 0x70 ; pop rbx ; ret
0x00000000004602f3 : ja 0x460303 ; ret
0x000000000046034d : ja 0x460352 ; ret
0x000000000046034d : ja 0x460355 ; ret
0x000000000046802d : ja 0x46802c ; and al, 0 ; mov qword ptr [rsi], rax ; ret
0x000000000046a8db : ja 0x46a904 ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000046aa49 : ja 0x46aa72 ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000047350e : ja 0x473560 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a3ec4 : ja 0x4a3e4b ; ret 0x48f
0x00000000004a9b95 : ja 0x4a9b8f ; jmp qword ptr [rdx]
0x00000000004a9bdd : ja 0x4a9bd7 ; jmp qword ptr [rdx]
0x00000000004b0db1 : ja 0x4b0db0 ; call rsi
0x000000000040afac : jae 0x40afbe ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000040dafb : jae 0x40db25 ; movzx eax, byte ptr [rax] ; ret
0x0000000000419829 : jae 0x419882 ; add dword ptr [rax], eax ; ret
0x0000000000434954 : jae 0x434937 ; mov eax, 1 ; ret
0x0000000000431a86 : jae 0x434b76 ; ret
0x00000000004684b7 : jae 0x468475 ; xor eax, eax ; ret
0x00000000004684b6 : jae 0x468476 ; xor eax, eax ; ret
0x00000000004863cd : jae 0x486393 ; mov rdx, rcx ; jmp 0x4863ab
0x00000000004a2482 : jae 0x4a2464 ; jo 0x4a2500 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a331e : jae 0x4a32f9 ; push rsi ; pop rdx ; je 0x4a32ee ; ret 0xacfc
0x00000000004aa0e6 : jae 0x4aa094 ; idiv bh ; sbb al, 0xd ; std ; jg 0x4aa0ee ; jmp qword ptr [rdx]
0x00000000004ad82d : jae 0x4ad835 ; add byte ptr [rax], dh ; sbb cl, bh ; call qword ptr [rcx]
0x00000000004ad8bd : jae 0x4ad8c5 ; add byte ptr [rax + 0x1d], al ; stc ; call qword ptr [rdi]
0x00000000004ad8d5 : jae 0x4ad8dd ; add byte ptr [rax + 0x1d], cl ; stc ; call qword ptr [rcx]
0x00000000004ad8ed : jae 0x4ad8f5 ; add byte ptr [rax + 0x1d], dl ; stc ; call qword ptr [rcx]
0x00000000004ad905 : jae 0x4ad90d ; add byte ptr [rax + 0x1d], bl ; stc ; call qword ptr [rcx]
0x0000000000418b3b : jb 0x418b4c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x0000000000423a4a : jb 0x423a5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423b9a : jb 0x423baa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423cea : jb 0x423cfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423e3a : jb 0x423e4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423f8a : jb 0x423f9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004240da : jb 0x4240ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042422a : jb 0x42423a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042437a : jb 0x42438a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004244ca : jb 0x4244da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042461a : jb 0x42462a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042476a : jb 0x42477a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004248ba : jb 0x4248ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424a0a : jb 0x424a1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424b5a : jb 0x424b6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424caa : jb 0x424cba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000045aa8c : jb 0x45aa85 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000045b98b : jb 0x45b99c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000045e296 : jb 0x45e263 ; ret
0x0000000000466a9e : jb 0x466ada ; ror byte ptr [rcx - 0x7d], cl ; std ; and al, 0xf ; xchg eax, esp ; ret 0xc031
0x0000000000481c02 : jb 0x481c67 ; and eax, dword ptr [rax] ; ret
0x0000000000487856 : jb 0x48785a ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000048a6a5 : jb 0x48a6a2 ; jmp qword ptr [rax]
0x00000000004a3ad8 : jb 0x4a3b32 ; call 0x4c146497
0x00000000004ac1d1 : jb 0x4ac1cd ; call qword ptr [rdi]
0x00000000004ac201 : jb 0x4ac1fd ; jmp qword ptr [rdi]
0x00000000004ac33d : jb 0x4ac339 ; jmp qword ptr [rdx]
0x00000000004ac385 : jb 0x4ac381 ; jmp qword ptr [rdx]
0x00000000004aebd4 : jb 0x4aeb83 ; cli ; jmp qword ptr [rdx]
0x00000000004aed14 : jb 0x4aecc5 ; cli ; jmp qword ptr [rdx]
0x0000000000401589 : jbe 0x40159d ; syscall
0x0000000000403841 : jbe 0x4038c9 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x400309
0x000000000040ba29 : jbe 0x40ba74 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c578 : jbe 0x40c51e ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000040c577 : jbe 0x40c51f ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000417109 : jbe 0x417158 ; bsf eax, edx ; ret
0x00000000004197a6 : jbe 0x4197e5 ; add rax, rdi ; ret
0x00000000004197b6 : jbe 0x4197e7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000004197c6 : jbe 0x4197e7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004197d6 : jbe 0x4197e7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000041faa3 : jbe 0x41fabe ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x41fa99 ; ret
0x000000000045a8bf : jbe 0x45a823 ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000046b0cf : jbe 0x46b0da ; ret
0x000000000048a768 : jbe 0x48a6f8 ; stc ; call qword ptr [rsi]
0x00000000004a3d5c : jbe 0x4a3d2f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004a3d5b : jbe 0x4a3d30 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000400772 : je 0x400783 ; mov byte ptr [rdx - 1], cl ; dec rdx ; jmp 0x400713
0x000000000040097c : je 0x40098d ; mov byte ptr [rdx - 1], cl ; dec rdx ; jmp 0x40091d
0x0000000000400eef : je 0x400eed ; pop rbp ; mov edi, 0x6b5b70 ; jmp rax
0x0000000000400f5a : je 0x400f6a ; mov edi, 0x4a6518 ; call rax
0x0000000000400f9f : je 0x400faf ; mov edi, 0x6b3ee8 ; call rax
0x00000000004017f3 : je 0x401807 ; xor esi, esi ; mov edi, 1 ; call rax
0x0000000000401e5a : je 0x401e6e ; lea rdi, qword ptr [r15 + 0x80] ; call rax
0x0000000000401eb0 : je 0x401ec4 ; lea rdi, qword ptr [r15 + 0x80] ; call rax
0x00000000004020bc : je 0x4020d0 ; lea rdi, qword ptr [r15 + 0x80] ; call rax
0x000000000040261a : je 0x40262e ; lea rdi, qword ptr [r15 + 0x80] ; call rax
0x0000000000402732 : je 0x402749 ; mov edi, 0x6b7060 ; call rbx
0x00000000004027e9 : je 0x4027f9 ; mov edi, 0x6b6060 ; call rax
0x0000000000402e85 : je 0x402e9c ; mov edi, 0x6b6060 ; call rax
0x0000000000402fb6 : je 0x402fc6 ; mov edi, 0x6b60c0 ; call rax
0x000000000040312b : je 0x40313b ; mov edi, 0x6b60c0 ; call rax
0x0000000000409f89 : je 0x409f93 ; pop rbx ; ret
0x000000000040bc7b : je 0x40bc21 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040c543 : je 0x40c500 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040c61b : je 0x40c5d0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040c729 : je 0x40c733 ; pop rbx ; ret
0x000000000040ccb4 : je 0x40ccbf ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000040d40d : je 0x40d437 ; or al, ch ; retf
0x000000000040e644 : je 0x40e484 ; ret
0x000000000040e56e : je 0x40e57c ; xor eax, eax ; ret
0x000000000040f442 : je 0x40f453 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040f55d : je 0x40f563 ; call rdx
0x00000000004116d6 : je 0x411702 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000041250c : je 0x412538 ; sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000412f90 : je 0x412fbc ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000413342 : je 0x413348 ; call rax
0x000000000041426c : je 0x414272 ; ret
0x0000000000414285 : je 0x414294 ; pop rbx ; ret
0x00000000004142d1 : je 0x4142e7 ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000414aaf : je 0x414ac1 ; lea rax, qword ptr [rip + 0x19dc8] ; ret
0x00000000004161f3 : je 0x4161bd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000416ec5 : je 0x416ecd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000416f42 : je 0x416f54 ; lea rax, qword ptr [rip + 0x13c95] ; ret
0x00000000004170bb : je 0x4170c5 ; bsf eax, edx ; ret
0x00000000004170bb : je 0x4170c6 ; bsf eax, edx ; ret
0x0000000000417164 : je 0x417175 ; bsf rax, rdx ; ret
0x0000000000417164 : je 0x417176 ; bsf rax, rdx ; ret
0x0000000000417108 : je 0x417186 ; bsf rax, rdx ; ret
0x000000000041969c : je 0x4196f3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041981c : je 0x41982f ; lea rax, qword ptr [rip + 0x858b] ; ret
0x000000000041a432 : je 0x41a444 ; lea rax, qword ptr [rip + 0x11f55] ; ret
0x000000000041c923 : je 0x41c8ed ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000041e4b3 : je 0x41e47d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042057a : je 0x4205d1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000420631 : je 0x420649 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000423147 : je 0x423151 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000430c1d : je 0x430be6 ; movzx eax, dl ; pop rbx ; ret
0x0000000000430bf5 : je 0x430be8 ; movzx eax, cl ; pop rbx ; ret
0x0000000000430c1d : je 0x430be8 ; movzx eax, dl ; pop rbx ; ret
0x0000000000430d36 : je 0x430d60 ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000430daf : je 0x430d93 ; ret
0x0000000000430e98 : je 0x430ea8 ; mov edi, 0x6b7060 ; call rax
0x0000000000430fb2 : je 0x430fc2 ; mov edi, 0x6b7060 ; call rax
0x000000000043246a : je 0x432471 ; ret
0x0000000000432df8 : je 0x432e09 ; lea rax, qword ptr [r12 - 1] ; jmp 0x432dcc
0x0000000000433509 : je 0x43350e ; ret
0x000000000043356d : je 0x433572 ; ret
0x0000000000434666 : je 0x434676 ; mov edi, 0x6b5140 ; call rax
0x00000000004347e3 : je 0x4347f3 ; mov edi, 0x6b5140 ; call rax
0x0000000000434978 : je 0x434982 ; ret
0x0000000000434994 : je 0x4349a9 ; mov dword ptr [rip + 0x27f5fc], edx ; pop rbx ; ret
0x000000000043da52 : je 0x43da1c ; pop rbx ; ret
0x000000000043dee1 : je 0x43def1 ; mov edi, 0x6b7060 ; call rax
0x000000000043df06 : je 0x43df16 ; mov edi, 0x6b7060 ; call rax
0x000000000043e012 : je 0x43e018 ; call rax
0x000000000043e071 : je 0x43e081 ; mov edi, 0x6b7060 ; call rax
0x000000000043e178 : je 0x43e188 ; mov edi, 0x6b7060 ; call rax
0x000000000043e2f2 : je 0x43e2f8 ; call rax
0x000000000043e37e : je 0x43e38e ; mov edi, 0x6b7060 ; call rax
0x000000000043e45d : je 0x43e474 ; mov edi, 0x6b7060 ; call rax
0x000000000043f00b : je 0x43f011 ; call rax
0x000000000043f5cb : je 0x43f5d3 ; ret
0x000000000045628b : je 0x453623 ; jmp 0x45250c
0x000000000045a0f9 : je 0x45a14a ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045a0f8 : je 0x45a14b ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045a10f : je 0x45a160 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045a10e : je 0x45a161 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045a540 : je 0x45a54b ; pop rbx ; ret
0x000000000045a9ed : je 0x45a9f8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000045aa31 : je 0x45aa3c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000045ab05 : je 0x45ab2f ; or al, ch ; ret
0x000000000045b4e3 : je 0x45b505 ; bsf rax, rdx ; ret
0x000000000045b4e3 : je 0x45b506 ; bsf rax, rdx ; ret
0x000000000045b473 : je 0x45b519 ; bsf rax, rdx ; ret
0x000000000045bd94 : je 0x45bdbf ; sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000045c379 : je 0x45c399 ; mov cl, dl ; and cl, 0xf ; je 0x45c3a9 ; ret
0x000000000045c380 : je 0x45c3a2 ; ret
0x000000000045c395 : je 0x45c3b6 ; add rax, 2 ; ret
0x000000000045c738 : je 0x45c766 ; mov rdi, qword ptr [r13] ; call r12
0x000000000045c949 : je 0x45c972 ; call rbx
0x000000000045c9d2 : je 0x45c9ff ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000045cb44 : je 0x45cb70 ; xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000045cc6e : je 0x45cc9a ; xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000045fd2e : je 0x45fd34 ; call rax
0x000000000045feeb : je 0x45fef5 ; call rdx
0x000000000045ff6b : je 0x45ff75 ; call rax
0x00000000004606f5 : je 0x4606b3 ; ret
0x00000000004606ef : je 0x4606c1 ; cmp r10b, 0x3a ; je 0x4606b9 ; ret
0x0000000000462bb0 : je 0x462b94 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004641d2 : je 0x463ef3 ; call rax
0x0000000000463f4d : je 0x463f53 ; call rax
0x00000000004645ae : je 0x4645be ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000465234 : je 0x465244 ; mov edi, 0x6b5100 ; call rax
0x00000000004680bc : je 0x4680e0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000468b9e : je 0x468bae ; mov edi, 0x6b5140 ; call rax
0x0000000000468c22 : je 0x468c32 ; mov edi, 0x6b5140 ; call rax
0x0000000000468ce7 : je 0x468cf7 ; mov edi, 0x6b5140 ; call rax
0x0000000000469f34 : je 0x469f44 ; mov edi, 0x6b5100 ; call rax
0x000000000046a47f : je 0x46a48f ; mov edi, 0x6b5140 ; call rax
0x000000000046a498 : je 0x46a4aa ; pop rbx ; mov edi, 0x6b5140 ; jmp rax
0x000000000046b46b : je 0x46b43c ; mov edi, 0x6b5140 ; call rax
0x000000000046b44c : je 0x46b47a ; sbb byte ptr [rdi + 0x6b5140], bh ; call rax
0x000000000046b5a6 : je 0x46b5b2 ; ret
0x000000000046b5bc : je 0x46b5cc ; mov edi, 0x6b5140 ; call rax
0x0000000000474a54 : je 0x474a66 ; mov rax, rdx ; pop rbx ; ret
0x0000000000475132 : je 0x47513f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004779d3 : je 0x47799d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000479983 : je 0x47994d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000047d837 : je 0x47d813 ; ret
0x000000000047ff98 : je 0x47ffa8 ; mov edi, 0x6b5140 ; call rax
0x000000000048007a : je 0x48008a ; mov edi, 0x6b5140 ; call rax
0x000000000048011d : je 0x480131 ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x00000000004818bb : je 0x4818cb ; mov edi, 0x6b5140 ; call rax
0x00000000004818e2 : je 0x4818f2 ; mov edi, 0x6b5140 ; call rax
0x0000000000481940 : je 0x481950 ; mov edi, 0x6b5140 ; call rax
0x0000000000481967 : je 0x481977 ; mov edi, 0x6b5140 ; call rax
0x0000000000482c42 : je 0x482c6d ; cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000484638 : je 0x48462a ; add rsp, 8 ; ret
0x000000000048669d : je 0x4866f7 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000486d8a : je 0x486d9a ; mov edi, 0x6b5100 ; call rax
0x0000000000486e4b : je 0x486e5b ; mov edi, 0x6b5100 ; call rax
0x0000000000487405 : je 0x48740b ; call rax
0x00000000004876cf : je 0x4876da ; call rdx
0x00000000004a188c : je 0x4a18ba ; push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a25e8 : je 0x4a25b3 ; xor al, 0xd8 ; ret
0x00000000004a2827 : je 0x4a2824 ; jmp 0x4a27fe
0x00000000004a3322 : je 0x4a32ea ; ret 0xacfc
0x00000000004a9894 : je 0x4a98cb ; add byte ptr [rax], al ; retf -0x955
0x00000000004abe8c : je 0x4abeee ; add byte ptr [rax], al ; xor byte ptr [rsi - 8], ah ; call qword ptr [rdi]
0x00000000004009f1 : jg 0x400983 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000040c723 : jg 0x40c766 ; add byte ptr [rax - 0x77], cl ; sti ; je 0x40c739 ; pop rbx ; ret
0x0000000000419f14 : jg 0x419f60 ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1f8b
0x000000000041a017 : jg 0x41a030 ; jne 0x41a007 ; mov rax, rdi ; ret
0x000000000041faa7 : jg 0x41fabe ; jne 0x41fa95 ; ret
0x0000000000425629 : jg 0x42567c ; ret
0x0000000000425670 : jg 0x4256c0 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000425675 : jg 0x4256c8 ; retf
0x00000000004256af : jg 0x4256fa ; ret
0x00000000004256ef : jg 0x42573a ; retf
0x0000000000425829 : jg 0x42587c ; ret 0x894c
0x0000000000425870 : jg 0x4258c0 ; mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x0000000000425875 : jg 0x4258c8 ; retf -0x76b4
0x00000000004258af : jg 0x4258fa ; ret 0x894c
0x00000000004258eb : jg 0x425936 ; retf -0x76b4
0x0000000000427c48 : jg 0x427c99 ; loope 0x427c47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427cbf : jg 0x427d0a ; ret 0xff2
0x0000000000427cd8 : jg 0x427d29 ; loop 0x427cd7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427d4f : jg 0x427d9a ; ret
0x0000000000427d68 : jg 0x427db9 ; jrcxz 0x427d67 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427df8 : jg 0x427e49 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427e78 : jg 0x427ec9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427ef8 : jg 0x427f49 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427f78 : jg 0x427fc9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427ff8 : jg 0x428049 ; call 0x4fc18ffa
0x0000000000428078 : jg 0x4280c9 ; jmp 0x4fc1907a
0x00000000004280d5 : jg 0x428125 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004280df : jg 0x42812a ; retf 0xff2
0x0000000000428155 : jg 0x4281a5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000042815f : jg 0x4281aa ; retf
0x00000000004281f8 : jg 0x428249 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000428278 : jg 0x4282c9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000428308 : jg 0x428359 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000428388 : jg 0x4283d9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004283fc : jg 0x428407 ; ret
0x0000000000428456 : jg 0x428469 ; ret
0x0000000000428451 : jg 0x4284a1 ; psllq mm1, qword ptr [rdi] ; jg 0x42846e ; ret
0x00000000004284c6 : jg 0x4284d9 ; ret
0x0000000000428536 : jg 0x428549 ; ret
0x0000000000428531 : jg 0x428581 ; or eax, 0xf7f0ff3 ; ret
0x00000000004285a6 : jg 0x4285b9 ; ret
0x00000000004285a1 : jg 0x4285f1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000428616 : jg 0x428629 ; ret
0x0000000000428611 : jg 0x428661 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000428686 : jg 0x428699 ; ret
0x0000000000428681 : jg 0x4286d1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004286f6 : jg 0x428709 ; ret
0x00000000004286f1 : jg 0x428741 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000428766 : jg 0x428779 ; ret
0x0000000000428761 : jg 0x4287b1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004287d6 : jg 0x4287e9 ; ret
0x0000000000428846 : jg 0x428859 ; ret
0x00000000004288b6 : jg 0x4288c9 ; ret
0x00000000004288b1 : jg 0x428901 ; add eax, 0xf7f0ff3 ; ret
0x0000000000428926 : jg 0x428939 ; ret
0x0000000000428921 : jg 0x428971 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000428996 : jg 0x4289a9 ; ret
0x0000000000428991 : jg 0x4289e1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000428a06 : jg 0x428a19 ; ret
0x0000000000428a01 : jg 0x428a51 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000428a76 : jg 0x428a89 ; ret
0x0000000000428a71 : jg 0x428ac1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000042dff6 : jg 0x42e001 ; ret
0x000000000042e006 : jg 0x42e014 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000042e01a : jg 0x42e029 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000042e039 : jg 0x42e047 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000042e049 : jg 0x42e057 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000042e059 : jg 0x42e06a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000042e07a : jg 0x42e089 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000042e09a : jg 0x42e0a9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000042e0ba : jg 0x42e0c9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000042e0da : jg 0x42e0ec ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000042e11d : jg 0x42e12f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000042e13d : jg 0x42e14f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000042e15b : jg 0x42e16b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000042e17b : jg 0x42e18b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000042e19b : jg 0x42e1ab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042e1bb : jg 0x42e1cb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042e686 : jg 0x42e695 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000042e696 : jg 0x42e6a8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000042e6c9 : jg 0x42e6db ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000042e6e9 : jg 0x42e6fb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000042e80f : jg 0x42e86f ; or eax, 0x1c478d48 ; ret
0x0000000000430bb0 : jg 0x430bed ; ret 0x2b77
0x0000000000445891 : jg 0x4458be ; retf -0x3eff
0x000000000044baac : jg 0x44bad9 ; retf -0x3eff
0x000000000044c8cb : jg 0x44c8d6 ; test dword ptr [rax + 0x29ffffef], ecx ; retf -0x2fc7
0x000000000044f3e9 : jg 0x44f3fe ; test dword ptr [rsi], ebp ; retf
0x0000000000458cb8 : jg 0x458c4a ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000046a8df : jg 0x46a90c ; call r11
0x000000000046aa4d : jg 0x46aa7a ; call r11
0x000000000046b7aa : jg 0x46b7b0 ; add byte ptr [rcx], cl ; ret 0xd089
0x000000000046b76b : jg 0x46b7bd ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000004a5f4c : jg 0x4a5f1d ; std ; dec dword ptr [rax] ; retf -3
0x00000000004a9dd5 : jg 0x4a9dcf ; jmp qword ptr [rdx]
0x00000000004a9e1d : jg 0x4a9e17 ; jmp qword ptr [rdx]
0x00000000004a9ead : jg 0x4a9ea7 ; jmp qword ptr [rdx]
0x00000000004aa015 : jg 0x4aa00f ; jmp qword ptr [rdx]
0x00000000004aa05d : jg 0x4aa057 ; jmp qword ptr [rdx]
0x00000000004aa0ed : jg 0x4aa0e7 ; jmp qword ptr [rdx]
0x00000000004ae404 : jg 0x4ae3c6 ; stc ; jmp qword ptr [rdx]
0x00000000004b0f99 : jg 0x4b0f98 ; call qword ptr [rax]
0x00000000004b1e64 : jg 0x4b1e93 ; cld ; jmp qword ptr [rdx]
0x000000000040180c : jge 0x401893 ; add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000403842 : jge 0x403894 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x400308
0x00000000004324ef : jge 0x43251b ; add byte ptr [rax], al ; ret
0x000000000043292f : jge 0x4328fa ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000435024 : jge 0x434ff5 ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000045c73d : jge 0x45c742 ; call r12
0x0000000000463bc6 : jge 0x463bd3 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x0000000000474b6b : jge 0x474b6b ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000048492f : jge 0x48492c ; leave ; ret
0x00000000004849ca : jge 0x4849cd ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000484a5b : jge 0x484a58 ; leave ; ret
0x0000000000484aaa : jge 0x484aad ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000484b77 : jge 0x484b7a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000484c0f : jge 0x484c0c ; leave ; ret
0x0000000000484c63 : jge 0x484c66 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a18ea : jge 0x4a18cb ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a3234 : jge 0x4a32a5 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a982e : jge 0x4a97e4 ; idiv bh ; sbb al, 0xd ; ficom word ptr [rdx - 0xa] ; jmp qword ptr [rdx]
0x00000000004aaf69 : jge 0x4aaf63 ; call rdx
0x00000000004adfcd : jge 0x4adfca ; jmp qword ptr [rdx]
0x0000000000401276 : jl 0x4012a4 ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000040180d : jl 0x40185f ; add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000431c97 : jl 0x431cc1 ; or al, 0x89 ; ret
0x0000000000432776 : jl 0x4327a4 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000043790d : jl 0x43793b ; cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x0000000000437bdc : jl 0x437c09 ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000043808b : jl 0x4380b9 ; cmp byte ptr [rcx + 0x41082444], cl ; call rdi
0x00000000004381f7 : jl 0x438225 ; cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x00000000004384d0 : jl 0x4384fd ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000004389c8 : jl 0x4389f6 ; mov qword ptr [rsp + 8], rax ; call r14
0x0000000000438ae9 : jl 0x438b17 ; mov qword ptr [rsp + 8], rax ; call r14
0x00000000004391a6 : jl 0x4391d3 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000004396b6 : jl 0x4396e4 ; or byte ptr [rax - 0x75], cl ; jl 0x4396e9 ; push rax ; call rax
0x00000000004396bb : jl 0x4396e4 ; push rax ; call rax
0x0000000000439c65 : jl 0x439c92 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043a38c : jl 0x43a3ba ; mov qword ptr [rsp + 8], rax ; call r12
0x000000000043ab02 : jl 0x43ab30 ; mov qword ptr [rsp + 8], rax ; call r15
0x000000000043b30f : jl 0x43b33d ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043b650 : jl 0x43b67e ; push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043ba62 : jl 0x43ba8f ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043c252 : jl 0x43c280 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043c598 : jl 0x43c5c6 ; push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043c9a2 : jl 0x43c9cf ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000446bb4 : jl 0x446b7e ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000460386 : jl 0x4603b4 ; or byte ptr [rax + 0x14], bh ; syscall
0x0000000000467509 : jl 0x467538 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000471f63 : jl 0x471f8d ; push rax ; jmp 0x471f37
0x000000000047fc5a : jl 0x47fc59 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000485e9b : jl 0x485ec6 ; sbb al, ch ; pop rbp ; retf
0x00000000004a3432 : jl 0x4a3491 ; leave ; retf
0x00000000004b0f94 : jl 0x4b0f47 ; add byte ptr [rax], al ; or byte ptr [rdi - 5], bh ; call qword ptr [rax]
0x00000000004b1e1c : jl 0x4b1e4b ; cld ; jmp qword ptr [rdx]
0x00000000004b2832 : jl 0x4b2837 ; ret
0x000000000043da62 : jle 0x43da75 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000045a53d : jle 0x45a575 ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x000000000047e3ed : jle 0x47e3f4 ; ret
0x0000000000484d95 : jle 0x484da4 ; cmovbe eax, ecx ; ret
0x00000000004a18e2 : jle 0x4a187b ; xlatb ; retf -0x5e15
0x00000000004a34a5 : jle 0x4a34e0 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004a9cb5 : jle 0x4a9caf ; jmp qword ptr [rdx]
0x00000000004a9cfd : jle 0x4a9cf7 ; jmp qword ptr [rdx]
0x00000000004a9cfc : jle 0x4a9cf8 ; jmp qword ptr [rdx]
0x00000000004a9d45 : jle 0x4a9d3f ; jmp qword ptr [rdx]
0x00000000004a9d44 : jle 0x4a9d40 ; jmp qword ptr [rdx]
0x00000000004a9d8d : jle 0x4a9d87 ; jmp qword ptr [rdx]
0x00000000004a9e65 : jle 0x4a9e5f ; jmp qword ptr [rdx]
0x00000000004ae015 : jle 0x4ae012 ; jmp qword ptr [rdx]
0x0000000000414dcd : jmp 0x100b7719
0x0000000000414e76 : jmp 0x100b77c2
0x0000000000414fb6 : jmp 0x100b7902
0x00000000004150f6 : jmp 0x100b7a42
0x0000000000415236 : jmp 0x100b7b82
0x0000000000415376 : jmp 0x100b7cc2
0x00000000004154b6 : jmp 0x100b7e02
0x00000000004155f6 : jmp 0x100b7f42
0x0000000000415736 : jmp 0x100b8082
0x0000000000415876 : jmp 0x100b81c2
0x00000000004159b6 : jmp 0x100b8302
0x0000000000415af6 : jmp 0x100b8442
0x0000000000415c36 : jmp 0x100b8582
0x0000000000415d76 : jmp 0x100b86c2
0x0000000000415eb6 : jmp 0x100b8802
0x0000000000415ff6 : jmp 0x100b8942
0x0000000000416219 : jmp 0x100b8b65
0x00000000004162a6 : jmp 0x100b8bf2
0x0000000000416376 : jmp 0x100b8cc2
0x0000000000416446 : jmp 0x100b8d92
0x0000000000416506 : jmp 0x100b8e52
0x00000000004165d6 : jmp 0x100b8f22
0x00000000004166a6 : jmp 0x100b8ff2
0x0000000000416776 : jmp 0x100b90c2
0x0000000000416846 : jmp 0x100b9192
0x0000000000416916 : jmp 0x100b9262
0x00000000004169e6 : jmp 0x100b9332
0x0000000000416ab6 : jmp 0x100b9402
0x0000000000416b86 : jmp 0x100b94d2
0x0000000000416c56 : jmp 0x100b95a2
0x0000000000416d26 : jmp 0x100b9672
0x0000000000416df6 : jmp 0x100b9742
0x000000000041730d : jmp 0x100b9c59
0x00000000004173e6 : jmp 0x100b9d32
0x0000000000417566 : jmp 0x100b9eb2
0x00000000004176e6 : jmp 0x100ba032
0x0000000000417866 : jmp 0x100ba1b2
0x00000000004179e6 : jmp 0x100ba332
0x0000000000417b66 : jmp 0x100ba4b2
0x0000000000417ce6 : jmp 0x100ba632
0x0000000000417e66 : jmp 0x100ba7b2
0x0000000000417fe6 : jmp 0x100ba932
0x0000000000418166 : jmp 0x100baab2
0x00000000004182e6 : jmp 0x100bac32
0x0000000000418466 : jmp 0x100badb2
0x00000000004185e6 : jmp 0x100baf32
0x0000000000418766 : jmp 0x100bb0b2
0x00000000004188e6 : jmp 0x100bb232
0x000000000041a757 : jmp 0x100bd0a3
0x000000000041a8dc : jmp 0x100bd228
0x000000000041aaec : jmp 0x100bd438
0x000000000041acfc : jmp 0x100bd648
0x000000000041af0c : jmp 0x100bd858
0x000000000041b11c : jmp 0x100bda68
0x000000000041b32c : jmp 0x100bdc78
0x000000000041b53c : jmp 0x100bde88
0x000000000041b74c : jmp 0x100be098
0x000000000041b95c : jmp 0x100be2a8
0x000000000041bb6c : jmp 0x100be4b8
0x000000000041bd7c : jmp 0x100be6c8
0x000000000041bf8c : jmp 0x100be8d8
0x000000000041c19c : jmp 0x100beae8
0x000000000041c3ac : jmp 0x100becf8
0x000000000041c5bc : jmp 0x100bef08
0x000000000041c98f : jmp 0x100bf2db
0x000000000041caf8 : jmp 0x100bf444
0x000000000041cc98 : jmp 0x100bf5e4
0x000000000041ce38 : jmp 0x100bf784
0x000000000041cfd8 : jmp 0x100bf924
0x000000000041d178 : jmp 0x100bfac4
0x000000000041d318 : jmp 0x100bfc64
0x000000000041d4b8 : jmp 0x100bfe04
0x000000000041d658 : jmp 0x100bffa4
0x000000000041d7f8 : jmp 0x100c0144
0x000000000041d998 : jmp 0x100c02e4
0x000000000041db38 : jmp 0x100c0484
0x000000000041dcd8 : jmp 0x100c0624
0x000000000041de78 : jmp 0x100c07c4
0x000000000041e018 : jmp 0x100c0964
0x000000000041e1b8 : jmp 0x100c0b04
0x000000000041e505 : jmp 0x100c0e51
0x000000000041e60e : jmp 0x100c0f5a
0x000000000041e75e : jmp 0x100c10aa
0x000000000041e8ae : jmp 0x100c11fa
0x000000000041e9fe : jmp 0x100c134a
0x000000000041eb4e : jmp 0x100c149a
0x000000000041ec9e : jmp 0x100c15ea
0x000000000041edee : jmp 0x100c173a
0x000000000041ef3e : jmp 0x100c188a
0x000000000041f08e : jmp 0x100c19da
0x000000000041f1de : jmp 0x100c1b2a
0x000000000041f32e : jmp 0x100c1c7a
0x000000000041f47e : jmp 0x100c1dca
0x000000000041f5ce : jmp 0x100c1f1a
0x000000000041f71e : jmp 0x100c206a
0x000000000041f86e : jmp 0x100c21ba
0x000000000042094d : jmp 0x100c3299
0x00000000004209f6 : jmp 0x100c3342
0x0000000000420b16 : jmp 0x100c3462
0x0000000000420c36 : jmp 0x100c3582
0x0000000000420d56 : jmp 0x100c36a2
0x0000000000420e76 : jmp 0x100c37c2
0x0000000000420f96 : jmp 0x100c38e2
0x00000000004210b6 : jmp 0x100c3a02
0x00000000004211d6 : jmp 0x100c3b22
0x00000000004212f6 : jmp 0x100c3c42
0x0000000000421416 : jmp 0x100c3d62
0x0000000000421536 : jmp 0x100c3e82
0x0000000000421656 : jmp 0x100c3fa2
0x0000000000421776 : jmp 0x100c40c2
0x0000000000421896 : jmp 0x100c41e2
0x00000000004219b6 : jmp 0x100c4302
0x0000000000428c17 : jmp 0x100cb563
0x0000000000428d9c : jmp 0x100cb6e8
0x0000000000428f9c : jmp 0x100cb8e8
0x000000000042919c : jmp 0x100cbae8
0x000000000042939c : jmp 0x100cbce8
0x000000000042959c : jmp 0x100cbee8
0x000000000042979c : jmp 0x100cc0e8
0x000000000042999c : jmp 0x100cc2e8
0x0000000000429b9c : jmp 0x100cc4e8
0x0000000000429d9c : jmp 0x100cc6e8
0x0000000000429f9c : jmp 0x100cc8e8
0x000000000042a19c : jmp 0x100ccae8
0x000000000042a39c : jmp 0x100ccce8
0x000000000042a59c : jmp 0x100ccee8
0x000000000042a79c : jmp 0x100cd0e8
0x000000000042a99c : jmp 0x100cd2e8
0x00000000004753f7 : jmp 0x10117d43
0x000000000047559c : jmp 0x10117ee8
0x00000000004757ec : jmp 0x10118138
0x0000000000475a3c : jmp 0x10118388
0x0000000000475c8c : jmp 0x101185d8
0x0000000000475edc : jmp 0x10118828
0x000000000047612c : jmp 0x10118a78
0x000000000047637c : jmp 0x10118cc8
0x00000000004765cc : jmp 0x10118f18
0x000000000047681c : jmp 0x10119168
0x0000000000476a6c : jmp 0x101193b8
0x0000000000476cbc : jmp 0x10119608
0x0000000000476f0c : jmp 0x10119858
0x000000000047715c : jmp 0x10119aa8
0x00000000004773ac : jmp 0x10119cf8
0x00000000004775fc : jmp 0x10119f48
0x0000000000477a3f : jmp 0x1011a38b
0x0000000000477bd8 : jmp 0x1011a524
0x0000000000477db8 : jmp 0x1011a704
0x0000000000477f98 : jmp 0x1011a8e4
0x0000000000478168 : jmp 0x1011aab4
0x0000000000478348 : jmp 0x1011ac94
0x0000000000478528 : jmp 0x1011ae74
0x0000000000478708 : jmp 0x1011b054
0x00000000004788e8 : jmp 0x1011b234
0x0000000000478ac8 : jmp 0x1011b414
0x0000000000478ca8 : jmp 0x1011b5f4
0x0000000000478e88 : jmp 0x1011b7d4
0x0000000000479068 : jmp 0x1011b9b4
0x0000000000479248 : jmp 0x1011bb94
0x0000000000479428 : jmp 0x1011bd74
0x0000000000479608 : jmp 0x1011bf54
0x00000000004799d5 : jmp 0x1011c321
0x0000000000479b1e : jmp 0x1011c46a
0x0000000000479c9e : jmp 0x1011c5ea
0x0000000000479e1e : jmp 0x1011c76a
0x0000000000479f9e : jmp 0x1011c8ea
0x000000000047a11e : jmp 0x1011ca6a
0x000000000047a29e : jmp 0x1011cbea
0x000000000047a41e : jmp 0x1011cd6a
0x000000000047a59e : jmp 0x1011ceea
0x000000000047a71e : jmp 0x1011d06a
0x000000000047a89e : jmp 0x1011d1ea
0x000000000047aa1e : jmp 0x1011d36a
0x000000000047ab9e : jmp 0x1011d4ea
0x000000000047ad1e : jmp 0x1011d66a
0x000000000047ae9e : jmp 0x1011d7ea
0x000000000047b01e : jmp 0x1011d96a
0x000000000047b447 : jmp 0x1011dd93
0x000000000047b5ec : jmp 0x1011df38
0x000000000047b82c : jmp 0x1011e178
0x000000000047ba6c : jmp 0x1011e3b8
0x000000000047bcac : jmp 0x1011e5f8
0x000000000047beec : jmp 0x1011e838
0x000000000047c12c : jmp 0x1011ea78
0x000000000047c36c : jmp 0x1011ecb8
0x000000000047c5ac : jmp 0x1011eef8
0x000000000047c7ec : jmp 0x1011f138
0x000000000047ca2c : jmp 0x1011f378
0x000000000047cc6c : jmp 0x1011f5b8
0x000000000047ceac : jmp 0x1011f7f8
0x000000000047d0ec : jmp 0x1011fa38
0x000000000047d32c : jmp 0x1011fc78
0x000000000047d56c : jmp 0x1011feb8
0x000000000047e1a0 : jmp 0x101219c7
0x00000000004004d9 : jmp 0x4004a7
0x0000000000400e23 : jmp 0x400de8
0x0000000000401d3f : jmp 0x401d55
0x0000000000404acb : jmp 0x404ccf
0x0000000000404db8 : jmp 0x404d86
0x0000000000404f5d : jmp 0x404f6b
0x0000000000407142 : jmp 0x407088
0x0000000000409ee1 : jmp 0x409eaf
0x000000000040abc6 : jmp 0x40ab94
0x0000000000410850 : jmp 0x410815
0x000000000041184d : jmp 0x41185f
0x0000000000411fc5 : jmp 0x411fd7
0x0000000000412356 : jmp 0x412368
0x0000000000486730 : jmp 0x412a02
0x000000000048722b : jmp 0x412a07
0x000000000041494a : jmp 0x412f6d
0x0000000000414b64 : jmp 0x414b2a
0x0000000000414cb8 : jmp 0x414c7d
0x000000000042068c : jmp 0x420652
0x00000000004207d8 : jmp 0x42079d
0x0000000000422258 : jmp 0x422226
0x00000000004222d6 : jmp 0x4222a4
0x0000000000422768 : jmp 0x422736
0x00000000004227e6 : jmp 0x4227b4
0x00000000004305ce : jmp 0x430594
0x000000000043069f : jmp 0x430665
0x000000000043070e : jmp 0x4306d4
0x0000000000431fbd : jmp 0x431f8b
0x0000000000432dff : jmp 0x432dc5
0x0000000000435422 : jmp 0x435417
0x0000000000435762 : jmp 0x4356b6
0x000000000043689d : jmp 0x436863
0x0000000000436944 : jmp 0x436911
0x00000000004378a6 : jmp 0x43786b
0x000000000043f7eb : jmp 0x43f7b8
0x000000000043f7eb : jmp 0x43f7bb
0x0000000000440936 : jmp 0x440828
0x000000000044319e : jmp 0x44316b
0x000000000044dfd1 : jmp 0x44aac1
0x000000000044e8c2 : jmp 0x44ab48
0x000000000044e1fe : jmp 0x44acba
0x000000000044e987 : jmp 0x44b3bd
0x0000000000453aee : jmp 0x44fddd
0x0000000000453b2b : jmp 0x44fde0
0x0000000000453f56 : jmp 0x4501c2
0x0000000000454884 : jmp 0x45069d
0x0000000000456291 : jmp 0x452506
0x00000000004562cb : jmp 0x4525bd
0x0000000000455db3 : jmp 0x452890
0x00000000004562cc : jmp 0x456291
0x0000000000458113 : jmp 0x457c07
0x000000000045bcf1 : jmp 0x45bbe0
0x000000000045f5a8 : jmp 0x45f3b2
0x000000000045fa81 : jmp 0x45fa46
0x0000000000460164 : jmp 0x460116
0x000000000046237e : jmp 0x462315
0x000000000046240e : jmp 0x4623dc
0x0000000000467c08 : jmp 0x467bd5
0x0000000000469619 : jmp 0x4691fe
0x000000000046f08d : jmp 0x46e8cd
0x000000000046f117 : jmp 0x46eb03
0x0000000000470614 : jmp 0x4705d9
0x00000000004716bc : jmp 0x470f43
0x0000000000471742 : jmp 0x47118e
0x0000000000471f66 : jmp 0x471f34
0x0000000000473b32 : jmp 0x473aff
0x0000000000474022 : jmp 0x473fef
0x0000000000474572 : jmp 0x4745c4
0x000000000047549e : jmp 0x4754b4
0x0000000000479c1e : jmp 0x479c34
0x000000000047a21e : jmp 0x47a234
0x000000000047a51e : jmp 0x47a534
0x000000000047a81e : jmp 0x47a834
0x000000000047ab1e : jmp 0x47ab34
0x000000000047ae1e : jmp 0x47ae34
0x00000000004814c2 : jmp 0x481514
0x000000000048296b : jmp 0x482931
0x00000000004829e6 : jmp 0x482937
0x0000000000483375 : jmp 0x482e1c
0x0000000000484591 : jmp 0x48455e
0x00000000004327a1 : jmp 0x4939b0f8
0x0000000000468263 : jmp 0x49467d89
0x00000000004a1aea : jmp 0x4a1b29
0x00000000004a2829 : jmp 0x4a27fc
0x00000000004a34a9 : jmp 0x4a3477
0x00000000004a3820 : jmp 0x4a37b4
0x00000000004a381f : jmp 0x4a37b5
0x00000000004a39f6 : jmp 0x4a39c4
0x00000000004a6449 : jmp 0x4a644e
0x000000000046d878 : jmp 0x4e10e1cc
0x000000000042807a : jmp 0x4fc19078
0x0000000000428079 : jmp 0x4fc19079
0x0000000000482aef : jmp 0x50b20fa
0x00000000004a1a97 : jmp 0xffffffff9114346e
0x0000000000473511 : jmp 0xffffffffc356be66
0x000000000040e5a6 : jmp 0xffffffffc3ca32b0
0x0000000000468b70 : jmp 0xffffffffc3d08b78
0x0000000000452c2a : jmp 0xfffffffffac92c37
0x000000000048ade7 : jmp qword ptr [rax + 0x10fff9d0]
0x000000000048ac1b : jmp qword ptr [rax + 0x20fff9d2]
0x000000000048ac13 : jmp qword ptr [rax + 0x20fff9d3]
0x000000000048ac0b : jmp qword ptr [rax + 0x20fff9d4]
0x000000000048ac03 : jmp qword ptr [rax + 0x20fff9d5]
0x000000000048abfb : jmp qword ptr [rax + 0x20fff9d6]
0x000000000040e193 : jmp qword ptr [rax]
0x00000000004605fd : jmp qword ptr [rbx]
0x000000000043e331 : jmp qword ptr [rcx + rax*8 + 0x5740049]
0x0000000000456a46 : jmp qword ptr [rcx + rcx*4 + 6]
0x00000000004a8e93 : jmp qword ptr [rcx]
0x0000000000433fa1 : jmp qword ptr [rdi]
0x0000000000403e4d : jmp qword ptr [rdx]
0x0000000000432d69 : jmp qword ptr [rsi + 0xf]
0x000000000048a757 : jmp qword ptr [rsi]
0x0000000000414da9 : jmp r10
0x000000000046a53e : jmp r11
0x0000000000483889 : jmp r8
0x0000000000423430 : jmp r9
0x0000000000400ef7 : jmp rax
0x000000000046a53f : jmp rbx
0x0000000000421dd4 : jmp rcx
0x0000000000400f37 : jmp rdx
0x000000000048aa1f : jmp rsi
0x000000000048ab4b : jmp rsp
0x0000000000400f20 : jne 0x400f27 ; pop rbp ; ret
0x00000000004037bc : jne 0x403837 ; adc dword ptr [rbp - 0x77], eax ; ret 0x8341
0x0000000000404ac9 : jne 0x404ae8 ; jmp 0x404cd1
0x0000000000404f5b : jne 0x404fd7 ; jmp 0x404f6d
0x0000000000406184 : jne 0x406162 ; ret
0x00000000004073b3 : jne 0x407398 ; lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x4073d9
0x0000000000407d3a : jne 0x407db5 ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000407fe1 : jne 0x408062 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000408035 : jne 0x40807c ; mov rdi, rsi ; call 0x484ac7
0x000000000040930c : jne 0x409313 ; pop rbx ; ret
0x000000000040b319 : jne 0x40b323 ; pop rbx ; ret
0x000000000040c371 : jne 0x40c363 ; ret
0x000000000040cd02 : jne 0x40cced ; pop rbx ; ret
0x000000000040cd3c : jne 0x40cd35 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000040d446 : jne 0x40d43b ; ret
0x000000000040bd57 : jne 0x40d832 ; ret
0x000000000040d7e2 : jne 0x40dab4 ; ret
0x000000000040edda : jne 0x414469 ; ret
0x00000000004101cb : jne 0x414533 ; pop rbx ; ret
0x0000000000414d12 : jne 0x414d24 ; lea rax, qword ptr [rip + 5] ; ret
0x0000000000419759 : jne 0x4197b5 ; xor rax, rax ; ret
0x0000000000419719 : jne 0x4197d9 ; xor rax, rax ; ret
0x0000000000419808 : jne 0x41981b ; lea rax, qword ptr [rip + 0x1f] ; ret
0x0000000000419f1e : jne 0x419f03 ; ret
0x0000000000419f5e : jne 0x419f46 ; sfence ; ret
0x000000000041a0c3 : jne 0x419faf ; mov rax, rdi ; ret
0x000000000041a019 : jne 0x41a005 ; mov rax, rdi ; ret
0x000000000041a55e : jne 0x41a570 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000041a5c1 : jne 0x41a5d3 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000041fb68 : jne 0x41fa40 ; ret
0x000000000041faa9 : jne 0x41fa93 ; ret
0x0000000000420836 : jne 0x420821 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000421d9c : jne 0x421d86 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042338d : jne 0x4233b7 ; xor eax, eax ; ret
0x0000000000422981 : jne 0x4233bb ; xor eax, eax ; ret
0x00000000004229a9 : jne 0x4233c7 ; xor eax, eax ; ret
0x000000000042e975 : jne 0x42e906 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000042e947 : jne 0x42e906 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000042e946 : jne 0x42e907 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004300d4 : jne 0x4302e8 ; xor eax, eax ; ret
0x00000000004302d9 : jne 0x4302f9 ; xor eax, eax ; ret
0x0000000000430181 : jne 0x4302fd ; xor eax, eax ; ret
0x00000000004302f1 : jne 0x4302fe ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000430401 : jne 0x4303f2 ; ret
0x00000000004304b1 : jne 0x4304a2 ; ret
0x0000000000430621 : jne 0x430616 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000430771 : jne 0x430766 ; sub rax, 1 ; ret
0x0000000000431a77 : jne 0x431a94 ; mov eax, 2 ; syscall
0x0000000000431ad7 : jne 0x431af4 ; mov eax, 0 ; syscall
0x0000000000431b37 : jne 0x431b54 ; mov eax, 1 ; syscall
0x0000000000431cc7 : jne 0x431ce4 ; mov eax, 3 ; syscall
0x0000000000432898 : jne 0x432880 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000432d43 : jne 0x432d53 ; ret
0x0000000000433278 : jne 0x433247 ; movsxd rdi, r15d ; mov al, 3 ; syscall
0x00000000004333d7 : jne 0x4333f4 ; mov eax, 8 ; syscall
0x00000000004334b1 : jne 0x4334a9 ; pop rdx ; pop r10 ; ret
0x00000000004334a2 : jne 0x4334b2 ; mov eax, 0xca ; syscall
0x0000000000433714 : jne 0x4336f3 ; ret
0x000000000043383d : jne 0x43383e ; nop ; xor eax, eax ; leave ; ret
0x000000000043689b : jne 0x436873 ; jmp 0x436865
0x000000000043f7a2 : jne 0x43f7df ; mov eax, 0xba ; syscall
0x0000000000440b81 : jne 0x440b6d ; mov rax, rsi ; ret
0x0000000000440c05 : jne 0x440be5 ; mov rax, rsi ; ret
0x000000000044a48b : jne 0x44a4f9 ; mov eax, edx ; pop rbx ; ret
0x000000000044e126 : jne 0x44cb2d ; jmp 0x44ab4e
0x000000000044e8f2 : jne 0x44d34e ; jmp 0x44ab4e
0x000000000044e91b : jne 0x44d609 ; jmp 0x44ab4e
0x0000000000458587 : jne 0x45858e ; ret
0x000000000045a031 : jne 0x45a023 ; ret
0x000000000045b3d3 : jne 0x45b3de ; xor rax, rax ; ret
0x000000000045c4b3 : jne 0x45c4be ; mov dword ptr [rcx + 8], esi ; ret
0x000000000045cd9b : jne 0x45cd56 ; nop dword ptr [rax] ; ret
0x000000000045cddc : jne 0x45cdd3 ; ret
0x000000000045fb61 : jne 0x45fb81 ; pop rbx ; ret
0x00000000004606b3 : jne 0x46071a ; mov rax, r9 ; ret
0x0000000000462379 : jne 0x462309 ; mov byte ptr [rax], 0 ; jmp 0x46231a
0x000000000046262a : jne 0x462817 ; mov r10, rcx ; jmp 0x46260c
0x0000000000465695 : jne 0x46569c ; pop rbx ; ret
0x0000000000465a6b : jne 0x465a83 ; mov dword ptr [rbp - 0x98], edx ; call rax
0x0000000000466b01 : jne 0x465f0c ; add rcx, rsi ; call rcx
0x0000000000466b53 : jne 0x46643a ; add rcx, rsi ; call rcx
0x0000000000467ee9 : jne 0x467e9d ; mov eax, dword ptr [rdx] ; ret
0x0000000000469829 : jne 0x46a416 ; ret
0x0000000000469828 : jne 0x46a417 ; ret
0x000000000046b1c1 : jne 0x46b1d6 ; add rsp, 0x38 ; ret
0x000000000046b911 : jne 0x46b94e ; add rsp, 8 ; ret
0x000000000046dff1 : jne 0x46e02e ; add rsp, 8 ; ret
0x00000000004706d1 : jne 0x47070e ; add rsp, 8 ; ret
0x0000000000474b56 : jne 0x474b66 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000474d97 : jne 0x474da3 ; ret
0x00000000004751de : jne 0x4751f0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000475241 : jne 0x475253 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000047e400 : jne 0x47e3f8 ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047f9e8 : jne 0x47f997 ; call rbx
0x00000000004816e6 : jne 0x481757 ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x000000000048458b : jne 0x4844bf ; jmp 0x484564
0x000000000048492b : jne 0x484924 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000484a57 : jne 0x484a50 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000484c0b : jne 0x484c04 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000484e3d : jne 0x484e42 ; call r14
0x00000000004851e9 : jne 0x485219 ; mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000485f69 : jne 0x485f99 ; mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000486508 : jne 0x486513 ; pop rbx ; ret
0x0000000000486714 : jne 0x486723 ; ret
0x0000000000486f15 : jne 0x486f03 ; pop rbx ; ret
0x0000000000486f60 : jne 0x486f40 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004870a9 : jne 0x487077 ; add rsp, 8 ; ret
0x0000000000487141 : jne 0x487134 ; pop rbx ; ret
0x0000000000487a7c : jne 0x487a9f ; ret
0x00000000004a1957 : jne 0x4a1921 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a38eb : jne 0x4a3912 ; retf 0x32dd
0x00000000004b2289 : jne 0x4b2289 ; call qword ptr [rax]
0x0000000000422c3e : jno 0x422c4d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000455489 : jno 0x45548e ; inc dword ptr [rbx - 0x7af00008] ; call rdi
0x000000000045a74d : jno 0x45a7be ; nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000045c4b1 : jno 0x45c4bf ; jne 0x45c4c0 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000045c4b6 : jno 0x45c4c3 ; ret
0x000000000045c645 : jno 0x45c6b8 ; add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x0000000000473404 : jno 0x473456 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004ac171 : jno 0x4ac16d ; call qword ptr [rcx]
0x000000000043583b : jnp 0x435857 ; call rax
0x00000000004a1b82 : jnp 0x4a1bd0 ; mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a1bf9 ; salc ; retf
0x00000000004a2305 : jnp 0x4a22c2 ; ret
0x00000000004a3302 : jnp 0x4a3360 ; retf
0x00000000004a3709 : jnp 0x4a3756 ; retf -0x6620
0x00000000004a4369 : jnp 0x4a43aa ; retf
0x0000000000400e1d : jns 0x400d00 ; jmp 0x400dee
0x0000000000408966 : jns 0x408970 ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000040d723 : jns 0x40d792 ; sub al, byte ptr [rax] ; ret
0x000000000041a563 : jns 0x41a569 ; add byte ptr [rax], al ; ret
0x000000000041e607 : jns 0x41e5e2 ; retf -0x152d
0x000000000041e757 : jns 0x41e732 ; retf -0x152d
0x000000000041e8a7 : jns 0x41e882 ; retf -0x152d
0x000000000041e9f7 : jns 0x41e9d2 ; retf -0x152d
0x000000000041eb47 : jns 0x41eb22 ; retf -0x152d
0x000000000041ec97 : jns 0x41ec72 ; retf -0x152d
0x000000000041ede7 : jns 0x41edc2 ; retf -0x152d
0x000000000041ef37 : jns 0x41ef12 ; retf -0x152d
0x000000000041f087 : jns 0x41f062 ; retf -0x152d
0x000000000041f1d7 : jns 0x41f1b2 ; retf -0x152d
0x000000000041f327 : jns 0x41f302 ; retf -0x152d
0x000000000041f477 : jns 0x41f452 ; retf -0x152d
0x000000000041f5c7 : jns 0x41f5a2 ; retf -0x152d
0x000000000041f717 : jns 0x41f6f2 ; retf -0x152d
0x000000000041f867 : jns 0x41f842 ; retf -0x152d
0x000000000043aa97 : jns 0x43aa24 ; retf 0x5b9
0x000000000043f92b : jns 0x43f941 ; add rsp, 0xd0 ; ret
0x000000000045ff8b : jns 0x45ffbe ; mov eax, ebx ; mov esi, 0x81 ; syscall
0x00000000004751e3 : jns 0x4751e9 ; add byte ptr [rax], al ; ret
0x0000000000479b17 : jns 0x479af2 ; retf -0x152d
0x0000000000479c97 : jns 0x479c72 ; retf -0x152d
0x0000000000479e17 : jns 0x479df2 ; retf -0x152d
0x0000000000479f97 : jns 0x479f72 ; retf -0x152d
0x000000000047a117 : jns 0x47a0f2 ; retf -0x152d
0x000000000047a297 : jns 0x47a272 ; retf -0x152d
0x000000000047a417 : jns 0x47a3f2 ; retf -0x152d
0x000000000047a597 : jns 0x47a572 ; retf -0x152d
0x000000000047a717 : jns 0x47a6f2 ; retf -0x152d
0x000000000047a897 : jns 0x47a872 ; retf -0x152d
0x000000000047aa17 : jns 0x47a9f2 ; retf -0x152d
0x000000000047ab97 : jns 0x47ab72 ; retf -0x152d
0x000000000047ad17 : jns 0x47acf2 ; retf -0x152d
0x000000000047ae97 : jns 0x47ae72 ; retf -0x152d
0x000000000047b017 : jns 0x47aff2 ; retf -0x152d
0x0000000000486a06 : jns 0x486a14 ; mov r8, qword ptr [r8] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004a140e : jns 0x4a13a4 ; ret 0xf869
0x00000000004a140d : jns 0x4a13a5 ; ret 0xf869
0x00000000004a381e : jns 0x4a3875 ; jmp 0x4a37b6
0x00000000004a6b2c : jns 0x4a6af8 ; cmc ; jmp qword ptr [rdx]
0x00000000004a9c6d : jns 0x4a9c67 ; jmp qword ptr [rdx]
0x00000000004aae71 : jns 0x4aae6b ; call qword ptr [rcx]
0x00000000004ade25 : jns 0x4ade2d ; add byte ptr [rax], ch ; sub cl, bh ; call qword ptr [rax]
0x00000000004ade3d : jns 0x4ade45 ; add byte ptr [rax], ah ; sub cl, bh ; call qword ptr [rdx]
0x000000000040b001 : jo 0x40aff4 ; shr byte ptr [rdx + 2], cl ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x000000000040b1d4 : jo 0x40b225 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004142d6 : jo 0x414335 ; ret
0x00000000004326d9 : jo 0x4326e5 ; ret
0x0000000000432712 : jo 0x432726 ; ret
0x00000000004363e8 : jo 0x436435 ; add byte ptr [rdi + 0x6b7008], bh ; call rax
0x000000000043648d : jo 0x4364da ; add byte ptr [rdi + 0x6b7008], bh ; call rax
0x000000000045a0aa : jo 0x45a0c2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045c4e0 : jo 0x45c542 ; pop rbp ; pop r12 ; ret
0x0000000000460107 : jo 0x460101 ; ret 0x4840
0x0000000000460134 : jo 0x460193 ; ret
0x000000000047283c : jo 0x472849 ; add al, bpl ; retf
0x000000000047483a : jo 0x4747c7 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000474839 : jo 0x4747c8 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000482965 : jo 0x48296f ; add rax, 3 ; jmp 0x482937
0x000000000048a530 : jo 0x48a55a ; stc ; call qword ptr [rax]
0x000000000048a550 : jo 0x48a587 ; stc ; call qword ptr [rax]
0x000000000048a6a1 : jo 0x48a6a2 ; inc dword ptr [rax] ; jb 0x48a6a6 ; jmp qword ptr [rax]
0x000000000048a830 : jo 0x48a7df ; stc ; push qword ptr [rax] ; test al, 0xf9 ; call qword ptr [rax]
0x000000000048a8d0 : jo 0x48a87e ; stc ; push qword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call qword ptr [rax]
0x000000000048a960 : jo 0x48a907 ; stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x000000000048a974 : jo 0x48a90d ; stc ; inc eax ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x000000000048ac2c : jo 0x48ac01 ; stc ; jmp rsi
0x00000000004a1b88 : jo 0x4a1bf3 ; salc ; retf
0x00000000004a2484 : jo 0x4a24fe ; mov ebp, 0xfb67d10d ; ret
0x00000000004a5814 : jo 0x4a581c ; cld ; inc eax ; add ebp, edi ; call qword ptr [rax]
0x00000000004ace70 : jo 0x4ace1c ; clc ; call qword ptr [rax]
0x00000000004adf84 : jo 0x4adfb8 ; stc ; jmp qword ptr [rdx]
0x00000000004af170 : jo 0x4af12b ; cli ; call qword ptr [rax]
0x00000000004b2e30 : jo 0x4b2e4a ; std ; jmp rsp
0x0000000000414280 : jp 0x41428a ; test rdx, rdi ; je 0x414299 ; pop rbx ; ret
0x0000000000419fa5 : jp 0x419f9f ; ret 0x7401
0x00000000004a2613 : jp 0x4a25cd ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x00000000004a97a4 : jp 0x4a978b ; std ; jmp qword ptr [rdx]
0x00000000004a9c25 : jp 0x4a9c1f ; jmp qword ptr [rdx]
0x0000000000427d6a : jrcxz 0x427d65 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427d69 : jrcxz 0x427d66 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433503 : jrcxz 0x4334c8 ; cmp r11d, 0xa ; je 0x433514 ; ret
0x00000000004547cd : jrcxz 0x4547e7 ; xchg dword ptr [rax + rax - 0x7cb80000], edi ; ret
0x000000000046833d : jrcxz 0x46838c ; add al, ch ; retf
0x00000000004a1265 : jrcxz 0x4a12bf ; ret
0x00000000004a342d : jrcxz 0x4a33f0 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004a3f89 : jrcxz 0x4a3f6d ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004a6c2d : jrcxz 0x4a6c26 ; jmp qword ptr [rdx]
0x0000000000435506 : js 0x435526 ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x000000000045e47b : js 0x45e48e ; retf -0x31f1
0x000000000046576c : js 0x465773 ; pop rbx ; ret
0x000000000047483d : js 0x47484b ; ret
0x00000000004829e4 : js 0x4829d2 ; jmp 0x482939
0x0000000000484859 : js 0x484866 ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000484866 : js 0x484872 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a3301 : js 0x4a3381 ; pop rdx ; retf
0x00000000004ade0d : js 0x4ade15 ; add byte ptr [rax], ah ; sub cl, bh ; call qword ptr [rbx]
0x00000000004a3943 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000041f10d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3232 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a3a34 : lahf ; push -0x57d3205 ; call 0xffffffffab580536
0x00000000004a1a40 : lahf ; push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004ac834 : lahf ; pushfq ; clc ; jmp qword ptr [rdx]
0x0000000000432664 : lahf ; ret 0x8545
0x00000000004a119d : lahf ; ret 0x871e
0x0000000000452cb9 : lahf ; ret 0x9529
0x000000000044bbbd : lahf ; retf -1
0x0000000000450dbf : lahf ; rol byte ptr [rbp - 0x78], 0x3c ; sbb eax, dword ptr [rcx + 0x29] ; ret 0x8341
0x000000000048a965 : lahf ; stc ; call qword ptr [rax]
0x00000000004b11d1 : lahf ; sti ; jmp qword ptr [rdx]
0x000000000046fb48 : lar eax, word ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000041f79d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048a437 : lcall ptr [rax + 0x68fff8c1] ; ret 0xfff8
0x00000000004686ad : lcall ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000004129d1 : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000045c7b1 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000440496 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000043d44b : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000409578 : lcall ptr [rbx + 0x5d] ; ret
0x000000000046881c : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004283f6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000040cd4b : lea eax, dword ptr [r8 - 1] ; ret
0x0000000000430990 : lea eax, dword ptr [rax + 1] ; pop rbp ; ret
0x000000000047dd8d : lea eax, dword ptr [rax + rcx] ; ret
0x0000000000419784 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000419794 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000419764 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x000000000040cd4c : lea eax, dword ptr [rax - 1] ; ret
0x00000000004499b5 : lea eax, dword ptr [rax] ; add ecx, ebp ; ret
0x00000000004073b6 : lea eax, dword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x4073d6
0x000000000045b7dd : lea eax, dword ptr [rcx + rsi] ; ret
0x0000000000430624 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000042e69c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000042e6b1 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000042e6cf : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000042e6ef : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000042e712 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000042e731 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000042e751 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000042e771 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000042e794 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000042e7b9 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000042e7d7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000042e7f7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000042e813 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000042e833 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000042e853 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000042e873 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000042e5ed : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000042e60d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000042e62f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000042e64f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000042e66f : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000042e689 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000042e537 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000042e54a : lea eax, dword ptr [rdi + 2] ; ret
0x000000000042e555 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000042e568 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000042e57d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000042e59b : lea eax, dword ptr [rdi + 6] ; ret
0x000000000042e5a7 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000042e5ba : lea eax, dword ptr [rdi + 8] ; ret
0x000000000042e5cf : lea eax, dword ptr [rdi + 9] ; ret
0x00000000004197b9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x00000000004197c9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00000000004196b3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000414c2a : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000420637 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000045b6d9 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000046b0c8 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x46b0e1 ; ret
0x000000000042e523 : lea eax, dword ptr [rdi] ; ret
0x000000000042db0d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000042db2d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000042db4f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000042db6f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000042db8f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000042da1f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000042da47 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000042da5d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000042da75 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000042da8b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000042da9d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000042dabb : lea eax, dword ptr [rdx + 6] ; ret
0x000000000042d9c7 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000042dacd : lea eax, dword ptr [rdx + 8] ; ret
0x000000000042daed : lea eax, dword ptr [rdx + 9] ; ret
0x000000000040cd3e : lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000430c7c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000413041 : lea eax, dword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x000000000042da35 : lea eax, dword ptr [rdx] ; ret
0x000000000041a435 : lea eax, dword ptr [rip + 0x11f55] ; ret
0x0000000000416f45 : lea eax, dword ptr [rip + 0x13c95] ; ret
0x0000000000419827 : lea eax, dword ptr [rip + 0x15373] ; ret
0x0000000000414ab2 : lea eax, dword ptr [rip + 0x19dc8] ; ret
0x000000000041980b : lea eax, dword ptr [rip + 0x1f] ; ret
0x000000000041a561 : lea eax, dword ptr [rip + 0x79] ; ret
0x000000000041981f : lea eax, dword ptr [rip + 0x858b] ; ret
0x0000000000414d15 : lea eax, dword ptr [rip + 5] ; ret
0x000000000041a5c4 : lea eax, dword ptr [rip + 6] ; ret
0x0000000000432dfb : lea eax, dword ptr [rsp - 1] ; jmp 0x432dc9
0x000000000048392f : lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff] ; ret 0x8941
0x00000000004a1a51 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000045c5f8 : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000045c9d6 : lea ecx, dword ptr [rax + 4] ; call rbx
0x0000000000423487 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000042ddbe : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000045a7d1 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000474570 : lea ecx, dword ptr [rdx] ; jmp 0x4745c6
0x00000000004814c0 : lea ecx, dword ptr [rdx] ; jmp 0x481516
0x000000000044cf6d : lea ecx, dword ptr [rsi + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000443782 : lea ecx, dword ptr [rsi + rdx] ; add rdx, rbx ; call qword ptr [r11 + rax*8]
0x000000000045c943 : lea ecx, dword ptr [rsp + 0x20] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004035f3 : lea edi, dword ptr [rbp + 0x80] ; xor esi, esi ; call rax
0x0000000000435023 : lea edi, dword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000041a016 : lea edi, dword ptr [rdi + 0x10] ; jne 0x41a008 ; mov rax, rdi ; ret
0x000000000041faa6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x41fa96 ; ret
0x0000000000401e5d : lea edi, dword ptr [rdi + 0x80] ; call rax
0x0000000000471f62 : lea edi, dword ptr [rsp + 0x50] ; jmp 0x471f38
0x0000000000484de4 : lea edi, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [r15] ; call r14
0x000000000045e290 : lea edx, dword ptr [rax + 1] ; cmp rdx, rcx ; jb 0x45e269 ; ret
0x0000000000443197 : lea edx, dword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x443172
0x0000000000423554 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000460497 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000045abbd : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000414da6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000423948 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000045cb43 : lea esi, dword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x000000000045c948 : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000045c9d1 : lea esi, dword ptr [rsp + 0x40] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000045c737 : lea esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [r13] ; call r12
0x00000000004079a0 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000045f275 : lea esp, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000414da5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000484de3 : lea r15, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [r15] ; call r14
0x0000000000471f61 : lea r15, qword ptr [rsp + 0x50] ; jmp 0x471f39
0x00000000004499b4 : lea r8d, dword ptr [rax] ; add ecx, ebp ; ret
0x0000000000423486 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000047456f : lea r9, qword ptr [rdx] ; jmp 0x4745c7
0x00000000004814bf : lea r9, qword ptr [rdx] ; jmp 0x481517
0x0000000000432dfa : lea rax, qword ptr [r12 - 1] ; jmp 0x432dca
0x000000000043098f : lea rax, qword ptr [r8 + 1] ; pop rbp ; ret
0x000000000047dd8c : lea rax, qword ptr [r8 + rcx] ; ret
0x0000000000419783 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000419793 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000419763 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004073b5 : lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x4073d7
0x000000000045b7dc : lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000430623 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000042e69b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000042e6b0 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000042e6ce : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000042e6ee : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000042e711 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000042e730 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000042e750 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000042e770 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000042e793 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000042e7b8 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000042e7d6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000042e7f6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000042e812 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000042e832 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000042e852 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000042e872 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000042e5ec : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000042e60c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000042e62e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000042e64e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000042e66e : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000042e688 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000042e536 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000042e549 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000042e554 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000042e567 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000042e57c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000042e59a : lea rax, qword ptr [rdi + 6] ; ret
0x000000000042e5a6 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000042e5b9 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000042e5ce : lea rax, qword ptr [rdi + 9] ; ret
0x00000000004197b8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000004197c8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004196b2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000420636 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000045b6d8 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000042e522 : lea rax, qword ptr [rdi] ; ret
0x000000000042db0c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000042db2c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000042db4e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042db6e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000042db8e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042da1e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042da46 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000042da5c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000042da74 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000042da8a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000042da9c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000042daba : lea rax, qword ptr [rdx + 6] ; ret
0x000000000042d9c6 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000042dacc : lea rax, qword ptr [rdx + 8] ; ret
0x000000000042daec : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000413040 : lea rax, qword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x000000000042da34 : lea rax, qword ptr [rdx] ; ret
0x000000000041a434 : lea rax, qword ptr [rip + 0x11f55] ; ret
0x0000000000416f44 : lea rax, qword ptr [rip + 0x13c95] ; ret
0x0000000000419826 : lea rax, qword ptr [rip + 0x15373] ; ret
0x0000000000414ab1 : lea rax, qword ptr [rip + 0x19dc8] ; ret
0x000000000041980a : lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000041a560 : lea rax, qword ptr [rip + 0x79] ; ret
0x000000000041981e : lea rax, qword ptr [rip + 0x858b] ; ret
0x0000000000414d14 : lea rax, qword ptr [rip + 5] ; ret
0x000000000041a5c3 : lea rax, qword ptr [rip + 6] ; ret
0x000000000042ddbd : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000045c5f7 : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000045c9d5 : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000004035f2 : lea rdi, qword ptr [r13 + 0x80] ; xor esi, esi ; call rax
0x0000000000401e5c : lea rdi, qword ptr [r15 + 0x80] ; call rax
0x0000000000435022 : lea rdi, qword ptr [rbp - 0x38] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000041a015 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x41a009 ; mov rax, rdi ; ret
0x000000000041faa5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x41fa97 ; ret
0x0000000000423553 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000443196 : lea rdx, qword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x443173
0x0000000000460496 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000423947 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000045cb42 : lea rsi, qword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x000000000045c947 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000045c9d0 : lea rsi, qword ptr [rsp + 0x40] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000488ad9 : leave ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf
0x00000000004b2e2d : leave ; add byte ptr [rax], al ; jo 0x4b2e4d ; std ; jmp rsp
0x000000000049afb1 : leave ; add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], dh ; retf 0x44
0x000000000040f96a : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000481a26 : leave ; cmove rax, rdx ; ret
0x0000000000484d92 : leave ; cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x000000000044e1fd : leave ; jmp 0x44acbb
0x0000000000430400 : leave ; jne 0x4303f3 ; ret
0x00000000004304b0 : leave ; jne 0x4304a3 ; ret
0x0000000000430770 : leave ; jne 0x430767 ; sub rax, 1 ; ret
0x00000000004ae3fe : leave ; mov edi, 0xd1cfff9 ; jg 0x4ae3cc ; stc ; jmp qword ptr [rdx]
0x0000000000482217 : leave ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000040040e : leave ; movsxd rdi, r12d ; mov eax, 3 ; syscall
0x00000000004010b3 : leave ; ret
0x00000000004a3434 : leave ; retf
0x00000000004a0249 : leave ; retf -0x3335
0x00000000004a1c01 : leave ; retf 0x6ee8
0x00000000004a5eb5 : leave ; std ; ljmp ptr [rax + 0x49fffdc9] ; ret
0x000000000040b446 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045d626 : les r9, ptr [r8 - 0x77] ; ret 0x8948
0x000000000045d700 : les r9d, ptr [r13 + rcx*4 + 0x65] ; ret 0x8d4c
0x000000000040bbbb : les r9d, ptr [rax + 0x29] ; ret 0x8948
0x00000000004a5eb7 : ljmp ptr [rax + 0x49fffdc9] ; ret
0x000000000046ab3f : ljmp ptr [rcx] ; ret 0xd089
0x000000000044298f : ljmp ptr [rcx] ; retf -0x2fc7
0x000000000047ecfe : ljmp ptr [rcx] ; retf -0x74b8
0x00000000004004cf : ljmp ptr [rcx] ; salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x4004af
0x000000000048adaf : ljmp ptr [rdx + 0x50fff9cf] ; xlatb ; stc ; call rax
0x0000000000400770 : ljmp ptr [rsp + rsi*2] ; or byte ptr [rax - 0xb700b6], cl ; retf -0x6f15
0x0000000000407e50 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000459cf5 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042218e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048141b : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416c00 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046dcd5 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042fd80 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004b11cd : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000004b111d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; nop ; cdq ; sti ; call rcx
0x00000000004adb54 : lodsb al, byte ptr [rsi] ; and al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004aeccd : lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rdx]
0x00000000004a970f : lodsb al, byte ptr [rsi] ; idiv bh ; sbb al, 0xd ; xor byte ptr [rbx - 0xa], cl ; jmp qword ptr [rdx]
0x00000000004a3326 : lodsb al, byte ptr [rsi] ; loop 0x4a32f3 ; retf
0x00000000004a40dd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000048a921 : lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000048a81d : lodsb al, byte ptr [rsi] ; stc ; push rax ; lodsd eax, dword ptr [rsi] ; stc ; jmp rax
0x00000000004a1b86 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a1bf5 ; salc ; retf
0x00000000004a195b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046bdc4 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b12e5 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; clc ; std ; jmp qword ptr [rdi]
0x00000000004a3705 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x0000000000478b90 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000473572 : lodsd eax, dword ptr [rsi] ; ret
0x000000000048a8a1 : lodsd eax, dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000048a821 : lodsd eax, dword ptr [rsi] ; stc ; jmp rax
0x000000000040ab23 : loop 0x40ab74 ; mov eax, dword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x0000000000421d9d : loop 0x421dd5 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000427cda : loop 0x427cd5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427cd9 : loop 0x427cd6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044cf72 : loop 0x44cfb9 ; call qword ptr [rbx + rax*8]
0x0000000000453244 : loop 0x45324a ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000453243 : loop 0x45324b ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000455daf : loop 0x455e00 ; mov esi, eax ; jmp 0x452894
0x0000000000455e2f : loop 0x455e84 ; mov esi, ecx ; jmp 0x452894
0x0000000000463a97 : loop 0x463a83 ; ret
0x00000000004673b3 : loop 0x467407 ; add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rdi + rcx + 0x44] ; retf -0x74b8
0x000000000048201f : loop 0x482071 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x0000000000484d6f : loop 0x484dc1 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x00000000004a3327 : loop 0x4a32f2 ; retf
0x00000000004a447a : loop 0x4a44cf ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a6be5 : loop 0x4a6bde ; jmp qword ptr [rdx]
0x00000000004a975d : loop 0x4a975e ; jmp qword ptr [rdx]
0x00000000004a97a5 : loop 0x4a97a6 ; jmp qword ptr [rdx]
0x0000000000427c4a : loope 0x427c45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427c49 : loope 0x427c46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042eaab : loope 0x42eab5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000434a5f : loope 0x434a6a ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x000000000043566f : loope 0x4356c2 ; mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000045c37e : loope 0x45c393 ; je 0x45c3a4 ; ret
0x000000000045fc7c : loope 0x45fc09 ; ret 0xf631
0x0000000000473407 : loope 0x473459 ; mov dword ptr [rdi], ecx ; ret
0x0000000000473438 : loope 0x47348b ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000004734ad : loope 0x473500 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000047dd87 : loope 0x47dd98 ; sub rcx, rax ; lea rax, qword ptr [r8 + rcx] ; ret
0x000000000048454b : loope 0x484507 ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048775e : loope 0x4877c4 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004a3431 : loope 0x4a34b3 ; pop rdx ; leave ; retf
0x00000000004041c0 : loopne 0x404185 ; add cl, bpl ; retf -0xd
0x000000000040adca : loopne 0x40ae14 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040ae78 : loopne 0x40aec2 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040d156 : loopne 0x40d1ba ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041406f : loopne 0x4140d1 ; pop rbp ; pop r12 ; ret
0x0000000000419f1f : loopne 0x419f16 ; ret
0x0000000000419f5f : loopne 0x419f75 ; scasb al, byte ptr [rdi] ; clc ; ret
0x000000000042083c : loopne 0x420882 ; pop rsp ; ret
0x0000000000420837 : loopne 0x42089c ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000004239a1 : loopne 0x4239b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004239a0 : loopne 0x4239b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423af1 : loopne 0x423b08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423af0 : loopne 0x423b09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423c41 : loopne 0x423c58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423c40 : loopne 0x423c59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423d91 : loopne 0x423da8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423d90 : loopne 0x423da9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423ee1 : loopne 0x423ef8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423ee0 : loopne 0x423ef9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424031 : loopne 0x424048 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424030 : loopne 0x424049 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424181 : loopne 0x424198 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424180 : loopne 0x424199 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004242cf : loopne 0x4242e6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004242ce : loopne 0x4242e7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424421 : loopne 0x424438 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424420 : loopne 0x424439 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424571 : loopne 0x424588 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424570 : loopne 0x424589 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004246c1 : loopne 0x4246d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004246c0 : loopne 0x4246d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424811 : loopne 0x424828 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424810 : loopne 0x424829 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424961 : loopne 0x424978 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424960 : loopne 0x424979 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424ab1 : loopne 0x424ac8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424ab0 : loopne 0x424ac9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424c01 : loopne 0x424c18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000424c00 : loopne 0x424c19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004309e7 : loopne 0x4309ef ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x0000000000433568 : loopne 0x43357d ; cmp eax, 4 ; je 0x433577 ; ret
0x0000000000433697 : loopne 0x4336a9 ; pop r12 ; ret
0x0000000000434a63 : loopne 0x434ac4 ; ret
0x0000000000445e2a : loopne 0x445e8e ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000458cff : loopne 0x458d4d ; mov dword ptr [rdi], edx ; ret
0x000000000045d59c : loopne 0x45d5e6 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045d588 : loopne 0x45d5ee ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045e006 : loopne 0x45e011 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000460842 : loopne 0x4608a6 ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000463056 : loopne 0x4630bc ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000463111 : loopne 0x463177 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000046982b : loopne 0x46983d ; add byte ptr [rax], al ; ret
0x000000000046a4a1 : loopne 0x46a500 ; ret
0x000000000046b5d9 : loopne 0x46b635 ; ret
0x0000000000472f4d : loopne 0x472f56 ; sub eax, 1 ; ret
0x0000000000473226 : loopne 0x473272 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000474dd9 : loopne 0x474e38 ; ret
0x000000000047e494 : loopne 0x47e4fb ; sar rax, 3 ; pop r12 ; ret
0x000000000047f9e4 : loopne 0x47f9fb ; cmp al, 0xa ; jne 0x47f99b ; call rbx
0x000000000048a6a0 : loopne 0x48a719 ; stc ; inc dword ptr [rax] ; jb 0x48a6a7 ; jmp qword ptr [rax]
0x000000000048a7b8 : loopne 0x48a740 ; stc ; jmp rax
0x000000000048a7bc : loopne 0x48a745 ; stc ; jmp rax
0x000000000048a824 : loopne 0x48a7d8 ; stc ; jmp rax
0x000000000048a828 : loopne 0x48a7de ; stc ; jmp rax
0x000000000048a8c4 : loopne 0x48a877 ; stc ; jmp rax
0x000000000048a8c8 : loopne 0x48a87d ; stc ; jmp rax
0x000000000048a9f9 : loopne 0x48a9f6 ; call rsi
0x000000000048a9f5 : loopne 0x48a9f6 ; inc dword ptr [rsi - 0x20] ; stc ; call rsi
0x000000000048a9f8 : loopne 0x48a9f7 ; call rsi
0x000000000048abb9 : loopne 0x48abba ; call qword ptr [rax + 0x20fff9df]
0x000000000048af50 : loopne 0x48af8a ; cli ; inc dword ptr [rax] ; xor bh, dl ; jmp qword ptr [rax]
0x00000000004a1a54 : loopne 0x4a1a34 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004abca0 : loopne 0x4abd01 ; clc ; jmp qword ptr [rdi]
0x00000000004ac170 : loopne 0x4ac1e6 ; clc ; call qword ptr [rcx]
0x00000000004a146a : mov ah, 0x13 ; ret
0x0000000000482151 : mov ah, 0x24 ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004adfcc : mov ah, 0x7d ; stc ; jmp qword ptr [rdx]
0x00000000004a1910 : mov ah, 0xa5 ; ret
0x00000000004b11cc : mov ah, 0xac ; add byte ptr [rax], al ; lahf ; sti ; jmp qword ptr [rdx]
0x0000000000405848 : mov ah, 0xd1 ; add byte ptr [rax], al ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000048ab60 : mov ah, 0xdb ; stc ; inc dword ptr [rbx + rbx*8 - 7] ; call rsp
0x0000000000458bd0 : mov ah, 0xf1 ; and eax, 0x48b4800 ; ret 0x8548
0x000000000048454c : mov ah, 0xf9 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b2369 : mov ah, 0xfc ; call qword ptr [rax]
0x00000000004a1264 : mov ah, bl ; push rsi ; ret
0x000000000047f027 : mov ah, byte ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004b153d : mov al, 0 ; add byte ptr [rax - 0x5d], ah ; sti ; call qword ptr [rdx]
0x00000000004b1525 : mov al, 0 ; add byte ptr [rax - 0x5d], ch ; sti ; call qword ptr [rax]
0x0000000000484743 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000431abc : mov al, 0x30 ; add byte ptr [rax], al ; ret
0x000000000048af18 : mov al, 0x30 ; cli ; inc eax ; xor dl, bh ; call rax
0x000000000048afa0 : mov al, 0x36 ; cli ; call rax
0x000000000048afc4 : mov al, 0x37 ; cli ; call rax
0x000000000048afe4 : mov al, 0x38 ; cli ; call rax
0x00000000004363e7 : mov al, 0x70 ; add byte ptr [r15 + 0x6b7008], dil ; call rax
0x00000000004ac8c4 : mov al, 0x9c ; clc ; jmp qword ptr [rdx]
0x00000000004ae250 : mov al, 0xa2 ; stc ; call qword ptr [rbx]
0x00000000004aeab0 : mov al, 0xa8 ; cli ; call qword ptr [rdx]
0x0000000000464dc6 : mov al, 0xca ; mov esi, 0x81 ; syscall
0x000000000048ae20 : mov al, 0xd1 ; stc ; jmp qword ptr [rax]
0x000000000048abc4 : mov al, 0xde ; stc ; inc dword ptr [rax - 0x22] ; stc ; call rax
0x00000000004a3716 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000048a929 : mov al, 0xf9 ; call qword ptr [rax]
0x000000000048a8c9 : mov al, 0xf9 ; jmp rax
0x000000000045f947 : mov al, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000043327d : mov al, 3 ; syscall
0x0000000000407e14 : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x000000000040135c : mov al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x0000000000460499 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x000000000042c2a6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000042c2c4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000042da30 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042c280 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000407e4f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043ef36 : mov ax, 3 ; syscall
0x000000000042c290 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000428a11 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004a37a0 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000045fbf7 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000045d361 : mov bh, 0x47 ; adc byte ptr [rcx], ch ; ret 0x428d
0x000000000042e948 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004a3a78 : mov bh, 0x4e ; retf -0x6283
0x000000000045dc44 : mov bh, 0x55 ; ret 0xf41
0x000000000045d808 : mov bh, 0x7d ; ret 0xb70f
0x0000000000448c6c : mov bh, 0x84 ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000460cf2 : mov bh, 0x84 ; and al, 0xb0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a2744 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a0246 : mov bh, 0xc8 ; leave ; retf -0x3335
0x00000000004a3e53 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000048a761 : mov bh, cl ; call rsi
0x000000000048a7e5 : mov bh, cl ; inc dword ptr [rax - 0x75] ; stc ; jmp rax
0x000000000048a765 : mov bh, cl ; push qword ptr [rsi - 0x75] ; stc ; call qword ptr [rsi]
0x000000000043023e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a3adb : mov bl, 0x29 ; retf -0x40b5
0x00000000004a3823 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004a3ac0 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000048a86d : mov bl, 0xf9 ; jmp qword ptr [rax]
0x00000000004a1441 : mov bx, 0xf32d ; retf
0x00000000004602b4 : mov byte ptr [r8 + 0x23], cl ; ret
0x0000000000401f1b : mov byte ptr [r8 - 0x77], r9b ; ret
0x00000000004602b5 : mov byte ptr [rax + 0x23], cl ; ret
0x000000000043f505 : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000049906c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000040e3ec : mov byte ptr [rax + rsi], bh ; ret
0x000000000040e3eb : mov byte ptr [rax + rsi], dil ; ret
0x0000000000401f1c : mov byte ptr [rax - 0x77], cl ; ret
0x000000000043f8f6 : mov byte ptr [rax - 0x77], cl ; ret 0xba41
0x000000000046237b : mov byte ptr [rax], 0 ; jmp 0x462318
0x0000000000438e93 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000044dfcf : mov byte ptr [rax], cl ; jmp 0x44aac3
0x0000000000453b26 : mov byte ptr [rax], dh ; xor r8d, r8d ; jmp 0x44fde5
0x0000000000453b25 : mov byte ptr [rax], r14b ; xor r8d, r8d ; jmp 0x44fde6
0x00000000004abc28 : mov byte ptr [rbp - 8], dl ; jmp rax
0x00000000004004cc : mov byte ptr [rbx - 0x29d60038], 1 ; retf -0x31c7
0x00000000004ab580 : mov byte ptr [rcx], al ; ret
0x000000000042e698 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000042e008 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000042e70e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000042e05e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000042e790 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000042e0e0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000042e546 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000042df26 : mov byte ptr [rdi + 2], dh ; ret
0x000000000042e562 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000042df42 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000042df83 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a3ad5 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf -0x40b5
0x0000000000424fcb : mov byte ptr [rdi - 1], dl ; ret
0x0000000000409edb : mov byte ptr [rdi], 0 ; mov rax, rdi ; jmp 0x409eb5
0x0000000000400493 : mov byte ptr [rdi], 0 ; ret
0x00000000004b3658 : mov byte ptr [rdi], ch ; std ; call qword ptr [rbx]
0x00000000004039f3 : mov byte ptr [rdi], cl ; retf -0x2d77
0x000000000042e520 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000042df00 : mov byte ptr [rdi], dh ; ret
0x0000000000428a83 : mov byte ptr [rdi], dl ; ret
0x000000000042da59 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x000000000042c2a9 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000042da87 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000042c2c7 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000400774 : mov byte ptr [rdx - 1], cl ; dec rdx ; jmp 0x400711
0x000000000040097e : mov byte ptr [rdx - 1], cl ; dec rdx ; jmp 0x40091b
0x000000000042da32 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042c282 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000482aa0 : mov byte ptr [rip + 0x2349f9], 8 ; ret
0x0000000000400f64 : mov byte ptr [rip + 0x2b4c15], 1 ; ret
0x0000000000440c03 : mov byte ptr [rsi], al ; jne 0x440be7 ; mov rax, rsi ; ret
0x0000000000440b7f : mov byte ptr [rsi], dl ; jne 0x440b6f ; mov rax, rsi ; ret
0x00000000004638c5 : mov byte ptr [rsp + 0x5f], 0 ; call 0x400357
0x00000000004a1262 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a25a3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a3236 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000045d08a : mov ch, 0x89 ; ret 0xe283
0x00000000004a393f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a42ea : mov ch, 0xab ; ret
0x0000000000422d06 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041971b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000043370b : mov cl, 0x3d ; fild word ptr [rbp + 0x28] ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000004a3d41 : mov cl, 0x3f ; retf
0x0000000000430c9c : mov cl, 0x48 ; add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x000000000048a714 : mov cl, 0x88 ; stc ; inc dword ptr [rcx - 0x77] ; stc ; call rcx
0x0000000000487817 : mov cl, 0xf8 ; push rbx ; ret
0x000000000048a869 : mov cl, 0xf9 ; call qword ptr [rax + 0x20fff9b3]
0x000000000048a8a9 : mov cl, 0xf9 ; jmp qword ptr [rax]
0x000000000048a829 : mov cl, 0xf9 ; jmp rax
0x000000000043365b : mov cl, 5 ; pop qword ptr [rsi + 0x28] ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000048a751 : mov cl, bh ; call qword ptr [rsi + 0x26fff988]
0x000000000048a715 : mov cl, bh ; inc dword ptr [rcx - 0x77] ; stc ; call rcx
0x000000000048a755 : mov cl, bh ; jmp qword ptr [rsi]
0x0000000000483635 : mov cl, byte ptr [rax + 1] ; retf -0x1d01
0x000000000041c7e5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000414da4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a3712 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000045c37b : mov cl, dl ; and cl, 0xf ; je 0x45c3a7 ; ret
0x00000000004a39cc : mov cs, edi ; ret 0x8b36
0x000000000041ec1e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000042df20 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000485191 : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040a1f6 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040afaf : mov dh, 0 ; pop rbx ; ret
0x000000000040dafe : mov dh, 0 ; ret
0x0000000000428a81 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000419904 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000406180 : mov dh, 0x17 ; test dl, dl ; jne 0x406166 ; ret
0x000000000046c471 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000441b72 : mov dh, 0x46 ; or al, 0x89 ; ret 0xeac0
0x000000000042fe11 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000042fe01 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000042fdd1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000042fdf1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000042fde1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043986f : mov dh, 0x48 ; dec dword ptr [rax - 0x77] ; ret 0x8349
0x00000000004602b0 : mov dh, 0x4c ; and al, 0xeb ; mov byte ptr [r8 + 0x23], cl ; ret
0x00000000004a2702 : mov dh, 0x4e ; ret 0x474c
0x0000000000439b4e : mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x0000000000404aea : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000458b68 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x000000000042fe15 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000042fe05 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000042fdd5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000042fde5 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000452914 : mov dh, 0x58 ; add ch, cl ; retf -0x2a
0x000000000048a75c : mov dh, 0x89 ; stc ; inc dword ptr [rsi - 0x76] ; stc ; call rsi
0x000000000043f77d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000482d30 : mov dh, 0xc0 ; movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x0000000000482e31 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000040b32c : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000047504d : mov dh, 0xc0 ; neg eax ; ret
0x0000000000474e53 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460216 : mov dh, 0xc0 ; ret
0x0000000000430bf8 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000430c20 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000040ba2c : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a3944 : mov dh, 0xc7 ; ret 0xe71f
0x0000000000482216 : mov dh, 0xc9 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000041992a : mov dh, 0xd2 ; sub eax, edx ; ret
0x0000000000416151 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000421de4 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000048a9f4 : mov dh, 0xe0 ; stc ; inc dword ptr [rsi - 0x20] ; stc ; call rsi
0x00000000004a676d : mov dh, 0xf5 ; jmp qword ptr [rdx]
0x00000000004af171 : mov dh, 0xfa ; call qword ptr [rax]
0x000000000046c218 : mov dh, 1 ; mov r13, rcx ; sub rdx, rcx ; jmp 0x46c265
0x000000000043498a : mov dh, 2 ; add byte ptr [rcx], bh ; ret
0x00000000004349a9 : mov dh, 2 ; add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000040a201 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004520d8 : mov dh, 4 ; and al, 0x84 ; sal byte ptr [rbp - 0x57], 0xe9 ; retf
0x0000000000421de1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000419901 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000416154 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000430dae : mov dh, byte ptr [rdi + rbx*8 - 0xd] ; ret
0x00000000004a8766 : mov dl, 0x50 ; idiv bh ; sbb al, 0xd ; push rcx ; cmp dh, dh ; jmp qword ptr [rdx]
0x000000000046240a : mov dl, 0x58 ; add byte ptr [rax], al ; jmp 0x4623e0
0x000000000048aa98 : mov dl, 0xdc ; stc ; inc dword ptr [rdx - 0x24] ; stc ; call rdx
0x0000000000425050 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043a5ba : mov dr0, ebp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000004a3d5e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000047e413 : mov dword ptr [0x2d0], esi ; ret
0x000000000045a069 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045a0a9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000432711 : mov dword ptr [rax + 0x10], esi ; ret
0x000000000045a609 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045a06d : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000045a6a7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040cafa : mov dword ptr [rax + 8], 0 ; ret
0x0000000000467616 : mov dword ptr [rax + 8], edx ; ret
0x00000000004326d8 : mov dword ptr [rax + 8], esi ; ret
0x0000000000419f85 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x0000000000467595 : mov dword ptr [rax], 0 ; call r12
0x000000000043fa25 : mov dword ptr [rax], 0x16 ; or eax, 0xffffffff ; ret
0x000000000044e8bc : mov dword ptr [rax], 0x4b ; jmp 0x44ab4e
0x0000000000411580 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x0000000000411730 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000045f995 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000412006 : mov dword ptr [rax], ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e086 : mov dword ptr [rax], ecx ; jmp 0x44aac3
0x000000000045a7d5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000474fa5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x00000000004602c3 : mov dword ptr [rax], edx ; or eax, 0xffffffff ; ret
0x0000000000474f99 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000043f5ef : mov dword ptr [rax], edx ; ret
0x000000000045abc1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000046850f : mov dword ptr [rbp + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040388a : mov dword ptr [rbp + 0x10], ecx ; call 0x4002e5
0x000000000044bbb6 : mov dword ptr [rbp - 0x1058], eax ; call 0x448668
0x000000000044e1b6 : mov dword ptr [rbp - 0x10c8], ecx ; call 0x45a3e8
0x00000000004562c5 : mov dword ptr [rbp - 0x1dc], eax ; jmp 0x4525c3
0x0000000000456047 : mov dword ptr [rbp - 0x1e8], edx ; call 0x412a98
0x00000000004571f9 : mov dword ptr [rbp - 0x1f8], edx ; call 0x433458
0x0000000000435509 : mov dword ptr [rbp - 0x58], eax ; call rcx
0x0000000000436185 : mov dword ptr [rbp - 0x60], eax ; call 0x4123e5
0x0000000000400630 : mov dword ptr [rbp - 0x80], 0 ; call 0x45c889
0x0000000000465a6d : mov dword ptr [rbp - 0x98], edx ; call rax
0x0000000000466069 : mov dword ptr [rbp - 0xb8], ebx ; call rax
0x0000000000466731 : mov dword ptr [rbp - 0xb8], ebx ; call rsi
0x00000000004478bb : mov dword ptr [rbp - 0xc8], ecx ; mov rdi, rbx ; call rax
0x0000000000466a78 : mov dword ptr [rbp - 0xe0], eax ; call rsi
0x0000000000472cd2 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000043da47 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000046b30e : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046b2c2 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000409f57 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000045fa79 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor eax, eax ; jmp 0x45fa4e
0x000000000040a969 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040f46b : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046b178 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000481895 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x000000000040c413 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047e4d3 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045df52 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f77f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040c575 : mov dword ptr [rbx + 0x48], edx ; jbe 0x40c521 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000040c49a : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000040b1d2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a0f7 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409f07 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000043da67 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000040c675 : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000004a89f4 : mov dword ptr [rbx - 0xa], eax ; jmp qword ptr [rdx]
0x0000000000481c46 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040c6ca : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000047f7c1 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000486a0c : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000045a60c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000409eac : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c416 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000045c4b0 : mov dword ptr [rcx + 4], esi ; jne 0x45c4c1 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000045c4b5 : mov dword ptr [rcx + 8], esi ; ret
0x00000000004606f0 : mov dword ptr [rcx - 0x80], 0xb9743afa ; ret
0x00000000004607a8 : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x00000000004846a9 : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x00000000004378a4 : mov dword ptr [rcx], edx ; jmp 0x43786d
0x000000000042e6ad : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000042e6eb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000042e76d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000042e05b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000042e0dd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000042e01d : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000042e120 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000042e140 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000042e101 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043269b : mov dword ptr [rdi + 0x10], esi ; mov qword ptr [rdx], rdi ; ret
0x000000000042e7d3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000042e123 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000040c3a3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000042030a : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042e7b5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000042e7f3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000042e105 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000045d3ed : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; ret
0x00000000004651f8 : mov dword ptr [rdi + 0x300], eax ; ret
0x00000000004651cc : mov dword ptr [rdi + 0x308], eax ; ret
0x00000000004201f9 : mov dword ptr [rdi + 0x38], ecx ; ret
0x000000000040c3d3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000040e1bd : mov dword ptr [rdi + 0x58], ecx ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004846e1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000042e72d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000042e07d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000042e6cb : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000042e74d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000042e03b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004288c5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000428708 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004289a8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000428855 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000428698 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000042e597 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000004287e5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000428628 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000042df67 : mov dword ptr [rdi + 3], edx ; ret
0x000000000040e1a7 : mov dword ptr [rdi + 4], eax ; ret
0x000000000042e579 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004285b8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000042df59 : mov dword ptr [rdi + 4], edx ; ret
0x000000000042e62b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000428548 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000042dfcb : mov dword ptr [rdi + 5], edx ; ret
0x000000000042e64b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004284d8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000042dfdb : mov dword ptr [rdi + 6], edx ; ret
0x000000000042e5e9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000042e66b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000428468 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000042dfa9 : mov dword ptr [rdi + 7], edx ; ret
0x000000000040c3a7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000473544 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000044319b : mov dword ptr [rdi + 8], edx ; jmp 0x44316e
0x000000000042e609 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000042e5cb : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000472ec4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000042df9b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000419f8c : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000419f95 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000048469b : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000424d15 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000424d53 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004734af : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042509c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427f18 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042527c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e98 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042546c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e18 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042563d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427d89 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042583d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427cf9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000425a3d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427c69 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042541d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000425235 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000425419 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x00000000004257f9 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000424ecf : mov dword ptr [rdi - 4], edx ; ret
0x00000000004257f6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004259f6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000425bf6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000424d19 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000424d57 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000424ecc : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000424fc8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000424f14 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427f98 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000047469e : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000042004a : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x0000000000473434 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000047353e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000044a3a6 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042e565 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000042e5b7 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000042e544 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000042df24 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000042e595 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000042df65 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000042e5e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000042dfa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000042e607 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000042dfb7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000419f8a : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000042dfc8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000042dfd8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000042dfe8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000419f92 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000042df56 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000042df98 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000041ffc9 : mov dword ptr [rdi], ecx ; ret
0x000000000042e534 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000042e552 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000042e5a4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000400a30 : mov dword ptr [rdi], edx ; ret
0x000000000047467f : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000423932 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000407e13 : mov dword ptr [rdx + 0x140], ecx ; ret
0x000000000042dab7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000042c2e7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000042da99 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042c2d9 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000042db4b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042dac9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x000000000042c2f9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000042db6b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000042dae9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x000000000042c309 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000042db09 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000042db8b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042c319 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000042db29 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000042da1b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042c26b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000040d4e8 : mov dword ptr [rdx + 8], ecx ; ret
0x000000000042da44 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042da72 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000042d9c4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000431bfa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000474733 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042c214 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000431a0e : mov dword ptr [rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000474f85 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000418b3e : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x000000000045a3d6 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040d454 : mov dword ptr [rdx], ecx ; ret
0x000000000043269f : mov dword ptr [rdx], edi ; ret
0x000000000043f5c5 : mov dword ptr [rip + 0x27646d], eax ; je 0x43f5d9 ; ret
0x0000000000434996 : mov dword ptr [rip + 0x27f5fc], edx ; pop rbx ; ret
0x0000000000434c11 : mov dword ptr [rip + 0x282fc9], ecx ; pop rbx ; ret
0x0000000000434c10 : mov dword ptr [rip + 0x282fc9], r9d ; pop rbx ; ret
0x00000000004016da : mov dword ptr [rip + 0x2b2990], eax ; xor eax, eax ; ret
0x0000000000400d5b : mov dword ptr [rip + 0x2b4367], eax ; pop r12 ; ret
0x00000000004326d4 : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rax + 8], rsi ; ret
0x0000000000401588 : mov dword ptr [rsi + 0x10], esi ; syscall
0x00000000004864ea : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000040d3eb : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000043270d : mov dword ptr [rsi + 8], edx ; mov qword ptr [rax + 0x10], rsi ; ret
0x00000000004846cb : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000040e4fb : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x0000000000468032 : mov dword ptr [rsi], eax ; ret
0x0000000000401585 : mov dword ptr [rsi], esi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000484e37 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [rbp] ; call r14
0x0000000000411023 : mov dword ptr [rsp + 0x18], ecx ; mov qword ptr [rsp + 8], rax ; call rdx
0x000000000046b44b : mov dword ptr [rsp + 0x18], esi ; mov edi, 0x6b5140 ; call rax
0x0000000000410e34 : mov dword ptr [rsp + 0x20], ebx ; call rax
0x0000000000410e33 : mov dword ptr [rsp + 0x20], r11d ; call rax
0x0000000000410e2f : mov dword ptr [rsp + 0x28], edx ; mov dword ptr [rsp + 0x20], r11d ; call rax
0x0000000000460160 : mov dword ptr [rsp + 0x38], eax ; jmp 0x46011a
0x000000000040595a : mov dword ptr [rsp + 4], esi ; call 0x4123e6
0x000000000043a38f : mov dword ptr [rsp + 8], eax ; call r12
0x0000000000437910 : mov dword ptr [rsp + 8], eax ; call r14
0x000000000043808e : mov dword ptr [rsp + 8], eax ; call r15
0x0000000000437826 : mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000411028 : mov dword ptr [rsp + 8], eax ; call rdx
0x00000000004396b5 : mov dword ptr [rsp + 8], edi ; mov rdi, qword ptr [rsp + 0x50] ; call rax
0x0000000000411e68 : mov dword ptr [rsp + 8], edx ; call 0x40e896
0x0000000000474826 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000043f6f5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000438e98 : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x0000000000435715 : mov dword ptr [rsp], eax ; call rbx
0x0000000000431af7 : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x0000000000431b57 : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x0000000000431a97 : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x0000000000431ce7 : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x00000000004333f7 : mov dword ptr [rsp], eax ; mov eax, 8 ; syscall
0x000000000047e412 : mov dword ptr fs:[0x2d0], esi ; ret
0x000000000044e8bb : mov dword ptr fs:[rax], 0x4b ; jmp 0x44ab4f
0x000000000041172f : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000045f994 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000004602c2 : mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x0000000000460328 : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000431bf9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000431a0d : mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000425230 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042df10 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004010ae : mov eax, 0 ; leave ; ret
0x0000000000431ad9 : mov eax, 0 ; syscall
0x0000000000430c9f : mov eax, 0x10 ; pop rbx ; ret
0x00000000004600d9 : mov eax, 0x101 ; syscall
0x0000000000460093 : mov eax, 0x106 ; syscall
0x0000000000460340 : mov eax, 0x14 ; syscall
0x00000000004601e0 : mov eax, 0x15 ; syscall
0x0000000000414267 : mov eax, 0x16 ; je 0x414277 ; ret
0x0000000000433433 : mov eax, 0x19 ; syscall
0x0000000000432520 : mov eax, 0x1c ; syscall
0x0000000000430cc2 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000481fc0 : mov eax, 0x26 ; syscall
0x0000000000430cbb : mov eax, 0x30 ; pop rbx ; ret
0x000000000045fd8d : mov eax, 0x38 ; syscall
0x00000000004319b0 : mov eax, 0x3c ; syscall
0x000000000045fcc0 : mov eax, 0x3f ; syscall
0x0000000000430cb4 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000484fc5 : mov eax, 0x41c00149 ; jmp rax
0x00000000004a185b : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000431b9b : mov eax, 0x48 ; syscall
0x000000000041a3ea : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x0000000000431d8b : mov eax, 0x4f ; syscall
0x0000000000430cad : mov eax, 0x60 ; pop rbx ; ret
0x00000000004323b0 : mov eax, 0x61 ; syscall
0x0000000000433356 : mov eax, 0x64 ; test edx, edx ; cmovne eax, edx ; ret
0x000000000045fff0 : mov eax, 0x66 ; syscall
0x0000000000460010 : mov eax, 0x68 ; syscall
0x0000000000460000 : mov eax, 0x6b ; syscall
0x0000000000412338 : mov eax, 0x6b4820 ; ret
0x0000000000434ddf : mov eax, 0x6b7be0 ; ret
0x0000000000460020 : mov eax, 0x6c ; syscall
0x0000000000430ca6 : mov eax, 0x80 ; pop rbx ; ret
0x00000000004438a0 : mov eax, 0x83fffffb ; ret 0x8908
0x0000000000443910 : mov eax, 0x83fffffb ; ret 0x8910
0x0000000000467935 : mov eax, 0x89fffffb ; ret 0xc083
0x00000000004652b3 : mov eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004617bf : mov eax, 0x9e ; syscall
0x0000000000432500 : mov eax, 0xa ; syscall
0x00000000004324e0 : mov eax, 0xb ; syscall
0x000000000043f7a4 : mov eax, 0xba ; syscall
0x00000000004697bb : mov eax, 0xbf0049e7 ; ret
0x000000000045d160 : mov eax, 0xc9 ; syscall
0x00000000004334a4 : mov eax, 0xca ; syscall
0x000000000043fa39 : mov eax, 0xe ; syscall
0x0000000000431397 : mov eax, 0xe5 ; syscall
0x000000000043f7c0 : mov eax, 0xea ; syscall
0x000000000043f811 : mov eax, 0xf ; syscall
0x00000000004375e7 : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x00000000004087fd : mov eax, 0xffffffff ; pop r15 ; ret
0x000000000040927d : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000043d447 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409574 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000409f11 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040c770 : mov eax, 0xffffffff ; ret
0x000000000041084b : mov eax, 1 ; jmp 0x41081a
0x0000000000474681 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x000000000044a3bd : mov eax, 1 ; pop r13 ; ret
0x000000000044a2ef : mov eax, 1 ; pop r14 ; ret
0x0000000000462e1b : mov eax, 1 ; pop r15 ; ret
0x0000000000436954 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000040ca50 : mov eax, 1 ; pop rbx ; ret
0x0000000000434956 : mov eax, 1 ; ret
0x0000000000431b39 : mov eax, 1 ; syscall
0x0000000000484f70 : mov eax, 2 ; add rsp, 8 ; ret
0x000000000045c3e1 : mov eax, 2 ; ret
0x0000000000431a79 : mov eax, 2 ; syscall
0x000000000045c3f1 : mov eax, 3 ; ret
0x0000000000400412 : mov eax, 3 ; syscall
0x0000000000484f60 : mov eax, 4 ; add rsp, 8 ; ret
0x000000000045c401 : mov eax, 4 ; ret
0x00000000004319de : mov eax, 4 ; syscall
0x000000000045c411 : mov eax, 5 ; ret
0x0000000000431a2d : mov eax, 5 ; syscall
0x000000000045c421 : mov eax, 6 ; ret
0x000000000046003e : mov eax, 6 ; syscall
0x000000000043789f : mov eax, 7 ; mov dword ptr [rcx], edx ; jmp 0x437872
0x000000000045c431 : mov eax, 7 ; ret
0x0000000000484f42 : mov eax, 8 ; add rsp, 8 ; ret
0x0000000000430cc9 : mov eax, 8 ; pop rbx ; ret
0x00000000004333d9 : mov eax, 8 ; syscall
0x00000000004324c3 : mov eax, 9 ; syscall
0x000000000045a40c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000040c4cc : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000409323 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040c60f : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000040c888 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x000000000040ab25 : mov eax, dword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x00000000004815d3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040c9fc : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000045ac94 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000480120 : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000435883 : mov eax, dword ptr [rax + 8] ; add rsp, 0x18 ; ret
0x000000000046b601 : mov eax, dword ptr [rax + 8] ; ret
0x000000000043f60f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000484641 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000486a09 : mov eax, dword ptr [rax] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x000000000046881f : mov eax, dword ptr [rax] ; ret
0x0000000000432935 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000004360f1 : mov eax, dword ptr [rbp - 0x60] ; call rax
0x0000000000469b98 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000466561 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r12] ; call rax
0x0000000000474fa1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000045fd28 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0x45fd3a ; call rax
0x00000000004a89ac : mov eax, dword ptr [rbx - 0xa] ; jmp qword ptr [rdx]
0x0000000000483d8d : mov eax, dword ptr [rbx] ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000045ff65 : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0x45ff7b ; call rax
0x000000000042c2e4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004309bf : mov eax, dword ptr [rcx + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042c2f6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000042c306 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000042c316 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000042c326 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000041ca8a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000041e362 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042da70 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000042c2b0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000042d9c1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000042c211 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000042da41 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042c291 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000466432 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000045ab3f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000040d460 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000040d488 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000045ac91 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040d741 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000474838 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x474850 ; ret
0x0000000000484651 : mov eax, dword ptr [rdi + 0x90] ; ret
0x00000000004846b1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x00000000004846f1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x0000000000484751 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x0000000000484741 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x0000000000484701 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000046b5a1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x46b5b7 ; ret
0x0000000000486710 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x486727 ; ret
0x000000000045ac6b : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x0000000000430da9 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x430d99 ; ret
0x000000000041c7e6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000409288 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004851ec : mov eax, dword ptr [rdx] ; add rsp, 8 ; ret
0x000000000045a7d7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000467eeb : mov eax, dword ptr [rdx] ; ret
0x000000000040d441 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x40d440 ; ret
0x0000000000481c00 : mov eax, dword ptr [rip + 0x235f72] ; ret
0x000000000046802b : mov eax, dword ptr [rip + 0x24f677] ; mov qword ptr [rsi], rax ; ret
0x000000000043d301 : mov eax, dword ptr [rip + 0x279d29] ; ret
0x00000000004358e1 : mov eax, dword ptr [rip + 0x282341] ; ret
0x000000000040d721 : mov eax, dword ptr [rip + 0x2a6979] ; ret
0x0000000000465f04 : mov eax, dword ptr [rsi + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000485231 : mov eax, dword ptr [rsi] ; add rsp, 8 ; ret
0x0000000000484726 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000040127a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000047e1c3 : mov eax, dword ptr [rsp + 0x38] ; call rax
0x000000000046b1ed : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x0000000000430e64 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004603a6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x000000000046a537 : mov eax, dword ptr [rsp] ; add rsp, 0x48 ; jmp r11
0x000000000046881e : mov eax, dword ptr fs:[rax] ; ret
0x00000000004485a8 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e613 : mov eax, eax ; nop dword ptr [rax] ; ret
0x000000000040e4fe : mov eax, eax ; ret
0x0000000000431174 : mov eax, eax ; syscall
0x000000000040af3a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000409eaa : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458b12 : mov eax, ebp ; pop r13 ; pop r14 ; ret
0x00000000004625c1 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000459c79 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407b46 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000445fe3 : mov eax, ebp ; pop rbp ; ret
0x000000000045ff13 : mov eax, ebp ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004325a0 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040cf45 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040a01d : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000445f65 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040abc1 : mov eax, ebp ; sub rax, rbx ; jmp 0x40ab99
0x0000000000474613 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000468a98 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045ff8d : mov eax, ebx ; mov esi, 0x81 ; syscall
0x0000000000407ed4 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040b239 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043240e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000409f5b : mov eax, ebx ; pop rbx ; ret
0x00000000004601ab : mov eax, ebx ; syscall
0x0000000000472ec7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000045bcef : mov eax, ecx ; jmp 0x45bbe2
0x0000000000401a43 : mov eax, ecx ; pop r13 ; ret
0x00000000004019c9 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405945 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000431127 : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x000000000045cda9 : mov eax, ecx ; ret
0x0000000000409d3a : mov eax, ecx ; syscall
0x0000000000409edf : mov eax, edi ; jmp 0x409eb1
0x00000000004604a0 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x0000000000401bfc : mov eax, edi ; pop r13 ; ret
0x0000000000401be6 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040d751 : mov eax, edi ; ret
0x000000000046b3d4 : mov eax, edx ; add rsp, 0x28 ; ret
0x0000000000475113 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000047e3eb : mov eax, edx ; jle 0x47e3f6 ; ret
0x0000000000407fe5 : mov eax, edx ; pop r12 ; ret
0x000000000045c18c : mov eax, edx ; pop r14 ; ret
0x0000000000467e77 : mov eax, edx ; pop rbp ; ret
0x000000000045fab3 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004128e9 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412480 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004077fb : mov eax, edx ; pop rbx ; ret
0x0000000000414a88 : mov eax, edx ; ret
0x000000000046b856 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000045fc0d : mov eax, esi ; pop r14 ; ret
0x0000000000406d7a : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000440b84 : mov eax, esi ; ret
0x000000000045d59b : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042083b : mov eax, esp ; pop r12 ; ret
0x0000000000460841 : mov eax, esp ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000040d155 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041406e : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460840 : mov eax, r12d ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000040d154 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045ff12 : mov eax, r13d ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004485a7 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000446092 : mov eax, r8d ; ret
0x0000000000431173 : mov eax, r8d ; syscall
0x0000000000409d39 : mov eax, r9d ; syscall
0x00000000004b22b5 : mov ebp, 0x2f980000 ; cld ; call qword ptr [rax]
0x00000000004b2255 : mov ebp, 0x56480000 ; cld ; call qword ptr [rax]
0x00000000004a3754 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x0000000000404db3 : mov ebp, 0x64 ; jmp 0x404d8b
0x00000000004b2285 : mov ebp, 0x75e80000 ; cld ; call qword ptr [rax]
0x00000000004035f4 : mov ebp, 0x80 ; xor esi, esi ; call rax
0x00000000004125e0 : mov ebp, 0xc031ffff ; pop rbx ; ret
0x00000000004a023d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000004a5e88 : mov ebp, 0xc5f8fffd ; std ; jmp qword ptr [rax]
0x000000000045b648 : mov ebp, 0xf80148c0 ; ret
0x000000000045b8cc : mov ebp, 0xf80148c6 ; ret
0x00000000004a2486 : mov ebp, 0xfb67d10d ; ret
0x00000000004449a7 : mov ebp, 0xfffffad0 ; add byte ptr [rdi], cl ; test dh, bl ; retf
0x00000000004449b4 : mov ebp, 0xfffffadc ; add byte ptr [rdi], cl ; test ah, dh ; retf
0x00000000004449c1 : mov ebp, 0xfffffae0 ; or byte ptr [rdi], cl ; test ebx, ecx ; retf
0x00000000004849cd : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000467c06 : mov ebp, eax ; jmp 0x467bd7
0x000000000046b85c : mov ebp, ecx ; jmp rdx
0x000000000046c21b : mov ebp, ecx ; sub rdx, rcx ; jmp 0x46c262
0x0000000000400ee1 : mov ebp, esp ; ja 0x400eec ; pop rbp ; ret
0x00000000004a34a4 : mov ebx, 0x1b5c347e ; jmp 0x4a347c
0x0000000000428157 : mov ebx, 0x46f00ff2 ; retf
0x0000000000467c01 : mov ebx, 0x48fffca8 ; mov ebp, eax ; jmp 0x467bdc
0x0000000000425654 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000425672 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000433504 : mov ebx, 0xafb8341 ; je 0x433513 ; ret
0x00000000004a023b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000436941 : mov ebx, dword ptr [rbx + 0x20] ; jmp 0x436914
0x0000000000436895 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x436879 ; jmp 0x43686b
0x00000000004a3ac4 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000046a8af : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x000000000046a98f : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x000000000040c727 : mov ebx, edi ; je 0x40c735 ; pop rbx ; ret
0x0000000000486504 : mov ebx, edi ; test eax, eax ; jne 0x486517 ; pop rbx ; ret
0x000000000043f006 : mov ebx, edi ; test rax, rax ; je 0x43f016 ; call rax
0x000000000040b317 : mov ebx, edx ; jne 0x40b325 ; pop rbx ; ret
0x000000000045fbb1 : mov ebx, esi ; syscall
0x000000000046bfc9 : mov ecx, 0x1b8 ; add byte ptr [rax + 1], cl ; ret
0x000000000047e402 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004a1959 : mov ecx, 0x5b92ac50 ; retf
0x00000000004a342e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x0000000000458d93 : mov ecx, 0x83000000 ; call 0xffffffffcaced5c6
0x00000000004a0239 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000487236 : mov ecx, 0xbe000000 ; ret
0x000000000048a7b1 : mov ecx, dr1 ; call qword ptr [rax]
0x000000000048a731 : mov ecx, dr1 ; inc dword ptr [rsi - 0x7d] ; stc ; call qword ptr [rsi]
0x0000000000474aa1 : mov ecx, dword ptr [rbx + 0x48] ; sub rcx, qword ptr [rbx + 0x58] ; add rdx, rcx ; jmp 0x474a40
0x0000000000423485 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000040d451 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000041c7e3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a38e4 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4a3919 ; retf 0x32dd
0x00000000004257f3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004259f3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000425bf3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042df40 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000042df81 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004288c3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000428853 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004287e3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000428705 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000428695 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000428625 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004285b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000428545 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004284d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000428465 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004289a5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000042df21 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000046750d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x000000000046b6f7 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b685 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000043f7e9 : mov ecx, eax ; jmp 0x43f7ba
0x000000000043f7e9 : mov ecx, eax ; jmp 0x43f7bd
0x0000000000440934 : mov ecx, eax ; jmp 0x44082a
0x000000000048a7dd : mov ecx, edi ; call qword ptr [rax]
0x000000000048a719 : mov ecx, edi ; call rcx
0x000000000048a75d : mov ecx, edi ; inc dword ptr [rsi - 0x76] ; stc ; call rsi
0x0000000000407140 : mov ecx, edi ; jmp 0x40708a
0x000000000040c9f7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000414265 : mov ecx, esi ; mov eax, 0x16 ; je 0x414279 ; ret
0x0000000000411bc6 : mov edi, 0x488ce2 ; call 0x40e687
0x0000000000411bf8 : mov edi, 0x488cf8 ; call 0x40e687
0x0000000000411c5f : mov edi, 0x489c30 ; call 0x40e687
0x0000000000411bdf : mov edi, 0x489c80 ; call 0x40e687
0x0000000000400f5c : mov edi, 0x4a6518 ; call rax
0x0000000000400fa1 : mov edi, 0x6b3ee8 ; call rax
0x0000000000465236 : mov edi, 0x6b5100 ; call rax
0x00000000004652a2 : mov edi, 0x6b5100 ; pop rbx ; pop rbp ; jmp rax
0x000000000046b5cf : mov edi, 0x6b5140 ; add rsp, 8 ; jmp rax
0x0000000000434668 : mov edi, 0x6b5140 ; call rax
0x000000000046a49b : mov edi, 0x6b5140 ; jmp rax
0x0000000000400ef2 : mov edi, 0x6b5b70 ; jmp rax
0x0000000000400f32 : mov edi, 0x6b5b70 ; jmp rdx
0x000000000040273b : mov edi, 0x6b6000 ; call rbx
0x00000000004027eb : mov edi, 0x6b6060 ; call rax
0x0000000000402fb8 : mov edi, 0x6b60c0 ; call rax
0x00000000004363eb : mov edi, 0x6b7008 ; call rax
0x0000000000402aef : mov edi, 0x6b7060 ; call rax
0x0000000000402734 : mov edi, 0x6b7060 ; call rbx
0x0000000000474bf2 : mov edi, 0x6b7300 ; call rax
0x0000000000401e5e : mov edi, 0x80 ; call rax
0x0000000000482964 : mov edi, 0x83480170 ; rol byte ptr [rbx], 0xeb ; ret
0x000000000040c0d8 : mov edi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004ae3ff : mov edi, 0xd1cfff9 ; jg 0x4ae3cb ; stc ; jmp qword ptr [rdx]
0x0000000000430ba4 : mov edi, 0xf000000 ; popfq ; ret 0xea81
0x000000000040133d : mov edi, 0xfffbfec ; xchg eax, esp ; ret 0xc031
0x00000000004843f5 : mov edi, 1 ; call r14
0x00000000004017f7 : mov edi, 1 ; call rax
0x0000000000484c7c : mov edi, 1 ; jmp rax
0x0000000000433529 : mov edi, dword ptr [0x300] ; call 9
0x0000000000435505 : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x000000000048492e : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000045c73c : mov edi, dword ptr [rbp] ; call r12
0x000000000043583a : mov edi, dword ptr [rbx + 0x18] ; call rax
0x000000000046a8de : mov edi, dword ptr [rdi + 0x28] ; call r11
0x00000000004a2746 : mov edi, dword ptr [rdx] ; ret
0x0000000000474eb5 : mov edi, dword ptr [rip + 0x242449] ; call rax
0x0000000000474dd2 : mov edi, dword ptr [rip + 0x24252c] ; jmp rax
0x0000000000432775 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000043d0b6 : mov edi, dword ptr [rsp + 0x18] ; call r15
0x0000000000464035 : mov edi, dword ptr [rsp + 0x30] ; call rax
0x000000000043790c : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043808a : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000437822 : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043a38b : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r12
0x00000000004389c7 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043ab01 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000437bdb : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000004396ba : mov edi, dword ptr [rsp + 0x50] ; call rax
0x000000000043b64f : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r15
0x00000000004391a5 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000401275 : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045c5f4 : mov edi, dword ptr [rsp] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000048672e : mov edi, eax ; jmp 0x412a04
0x0000000000440b7d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x440b71 ; mov rax, rsi ; ret
0x0000000000453ae9 : mov edi, eax ; mov r14, rbx ; jmp 0x44fde2
0x0000000000473af7 : mov edi, ebp ; call 0x481489
0x000000000047fb16 : mov edi, ebp ; call qword ptr [rbx]
0x000000000047fad9 : mov edi, ebp ; call rax
0x000000000043ef34 : mov edi, ebp ; mov ax, 3 ; syscall
0x0000000000431d89 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x000000000043d3aa : mov edi, ebp ; mov eax, 3 ; syscall
0x0000000000409d37 : mov edi, ebp ; mov eax, r9d ; syscall
0x000000000045aff4 : mov edi, ebp ; xor r8d, r8d ; call r12
0x000000000043d2b7 : mov edi, ebx ; call r12
0x0000000000435a69 : mov edi, ebx ; call r15
0x0000000000408ec5 : mov edi, ebx ; call rax
0x00000000004638c3 : mov edi, ebx ; mov byte ptr [rsp + 0x5f], 0 ; call 0x400359
0x000000000043259d : mov edi, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040aaf1 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040c60b : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000048a769 : mov edi, ecx ; call qword ptr [rsi]
0x000000000048a7e9 : mov edi, ecx ; jmp rax
0x000000000044e11c : mov edi, edi ; call 0x45a3e4
0x0000000000440c01 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x440be9 ; mov rax, rsi ; ret
0x0000000000431171 : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000431182 : mov edi, edx ; mov eax, r9d ; syscall
0x0000000000455fc3 : mov edi, esi ; call 0x412a94
0x0000000000408038 : mov edi, esi ; call 0x484ac4
0x0000000000432932 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004360ee : mov edi, esi ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000403846 : mov edi, esp ; call 0x400304
0x0000000000486db9 : mov edi, esp ; call r12
0x0000000000412f94 : mov edi, esp ; call rax
0x000000000045cb48 : mov edi, esp ; call rbx
0x0000000000411e65 : mov edi, esp ; mov qword ptr [rsp + 8], r10 ; call 0x40e899
0x000000000046745b : mov edi, esp ; pop r12 ; pop r13 ; jmp rax
0x000000000046745a : mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x00000000004280d7 : mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004872fc : mov edx, 0x4890fffa ; add esp, 8 ; ret
0x0000000000425854 : mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x0000000000425872 : mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x00000000004a1bfe : mov edx, 0xcac982a4 ; call 0xffffffffaf0cba7e
0x000000000045fe06 : mov edx, 0xd913e8ff ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000045fee5 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0x45fefb ; call rdx
0x0000000000441ddb : mov edx, dword ptr [rax*8 + 0x49a060] ; jmp rdx
0x0000000000445520 : mov edx, dword ptr [rax*8 + 0x49a160] ; jmp rdx
0x00000000004453fc : mov edx, dword ptr [rax*8 + 0x49a260] ; jmp rdx
0x0000000000445312 : mov edx, dword ptr [rax*8 + 0x49a360] ; jmp rdx
0x00000000004452c4 : mov edx, dword ptr [rax*8 + 0x49a460] ; jmp rdx
0x00000000004450de : mov edx, dword ptr [rax*8 + 0x49a560] ; jmp rdx
0x0000000000441086 : mov edx, dword ptr [rax*8 + 0x49a660] ; jmp rdx
0x000000000044cce5 : mov edx, dword ptr [rax*8 + 0x49aa80] ; jmp rdx
0x000000000044aa75 : mov edx, dword ptr [rax*8 + 0x49ab80] ; jmp rdx
0x000000000044c7c2 : mov edx, dword ptr [rax*8 + 0x49ac80] ; jmp rdx
0x000000000044c780 : mov edx, dword ptr [rax*8 + 0x49ad80] ; jmp rdx
0x000000000044c724 : mov edx, dword ptr [rax*8 + 0x49ae80] ; jmp rdx
0x000000000044bc61 : mov edx, dword ptr [rax*8 + 0x49af80] ; jmp rdx
0x000000000045a3d8 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000045cdd8 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0x45cdd7 ; ret
0x0000000000474f81 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000040a65e : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000046a511 : mov edx, dword ptr [rcx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041e35f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041ca8d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004876c9 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x4876e0 ; call rdx
0x0000000000474f95 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042df62 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000042df53 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000042dfa3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000042dfb3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000425231 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004255f0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000424e81 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042e550 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000428930 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042e5a1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000428771 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000042e531 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000042df11 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000484319 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x00000000004073ba : mov edx, eax ; jmp 0x4073d2
0x0000000000435760 : mov edx, eax ; jmp 0x4356b8
0x0000000000447146 : mov edx, eax ; mov rsi, r13 ; call 0x4733b7
0x00000000004a5f3c : mov edx, eax ; std ; dec dword ptr [rcx + 0x4dfffdc2] ; retf -3
0x00000000004a5f34 : mov edx, eax ; std ; dec dword ptr [rcx - 0x7600023e] ; ret 0xfffd
0x0000000000435671 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000047fb11 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047fad4 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045fa7d : mov edx, ebp ; xor eax, eax ; jmp 0x45fa4a
0x0000000000462631 : mov edx, ecx ; jmp 0x462605
0x00000000004863d0 : mov edx, ecx ; jmp 0x4863a8
0x0000000000460091 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000433431 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000004324c1 : mov edx, ecx ; mov eax, 9 ; syscall
0x00000000004a5f2c : mov edx, ecx ; std ; dec dword ptr [rax] ; retf -3
0x0000000000408ec2 : mov edx, esi ; mov rdi, rbx ; call rax
0x0000000000455e2e : mov edx, esp ; mov r14, r9 ; jmp 0x452895
0x0000000000455dae : mov edx, esp ; mov r14, rax ; jmp 0x452895
0x000000000040ab22 : mov edx, esp ; mov rax, qword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x000000000044aa2b : mov esi, 0x10 ; jmp rdx
0x0000000000486db3 : mov esi, 0x40 ; mov rdi, rsp ; call r12
0x000000000046bdbf : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000405ae8 : mov esi, 0x48820091 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000004a3706 : mov esi, 0x497b96cc ; retf -0x6620
0x00000000004a37a3 : mov esi, 0x6400fd4c ; retf 0xf64
0x000000000048ad30 : mov esi, 0x64fff9cf ; xlatb ; stc ; jmp rsp
0x00000000004a188a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044608c : mov esi, 0x77cf39ca ; fiadd word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000433588 : mov esi, 0x80 ; syscall
0x000000000045ff8f : mov esi, 0x81 ; syscall
0x00000000004b231d : mov esi, 0x8f800000 ; cld ; call qword ptr [rax]
0x00000000004b2365 : mov esi, 0xb4e80000 ; cld ; call qword ptr [rax]
0x00000000004b23ed : mov esi, 0xb8900000 ; cld ; call qword ptr [rcx]
0x000000000046cb8f : mov esi, 0xbe0f4813 ; retf 0x44f6
0x00000000004a023e : mov esi, 0xc2c1c0bf ; ret
0x0000000000454886 : mov esi, 0xc748ffff ; ret
0x000000000046f489 : mov esi, 0xf410263 ; xchg eax, esp ; ret 0x850f
0x0000000000471ab7 : mov esi, 0xf41026b ; xchg eax, esp ; ret 0x850f
0x0000000000482eb3 : mov esi, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x000000000046c27f : mov esi, 0xfc8341c0 ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000458be9 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000004a3f87 : mov esi, dr1 ; jrcxz 0x4a3f6f ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x000000000048492a : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004562db : mov esi, dword ptr [rbp - 0x258] ; jmp 0x4525c3
0x0000000000484e3c : mov esi, dword ptr [rbp] ; call r14
0x000000000046a8da : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000484de8 : mov esi, dword ptr [rdi] ; call r14
0x0000000000435027 : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x000000000045f94a : mov esi, dword ptr [rdx] ; syscall
0x0000000000435674 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000041250b : mov esi, dword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000412f8f : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000412a83 : mov esi, dword ptr [rsp] ; jmp rax
0x000000000045f949 : mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000455db1 : mov esi, eax ; jmp 0x452892
0x000000000043f914 : mov esi, eax ; mov eax, ecx ; syscall
0x0000000000400f30 : mov esi, eax ; mov edi, 0x6b5b70 ; jmp rdx
0x0000000000474d93 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x474da7 ; ret
0x0000000000447149 : mov esi, ebp ; call 0x4733b4
0x0000000000453aec : mov esi, ebx ; jmp 0x44fddf
0x0000000000474eb3 : mov esi, ebx ; mov edi, dword ptr [rip + 0x242449] ; call rax
0x0000000000455e31 : mov esi, ecx ; jmp 0x452892
0x00000000004602d6 : mov esi, edi ; mov eax, ecx ; syscall
0x0000000000484c7a : mov esi, edi ; mov edi, 1 ; jmp rax
0x00000000004319dc : mov esi, edx ; mov eax, 4 ; syscall
0x0000000000431a2b : mov esi, edx ; mov eax, 5 ; syscall
0x000000000046003c : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000484cd1 : mov esi, esi ; mov rdi, rbx ; call r15
0x000000000047de55 : mov esi, esi ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000043198a : mov esi, esp ; call 0x4323b9
0x000000000047fb14 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047fad7 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000409d34 : mov esi, esp ; mov rdi, r13 ; mov eax, r9d ; syscall
0x00000000004685bb : mov esi, esp ; syscall
0x00000000004aced4 : mov esp, 0x18000069 ; stosd dword ptr [rdi], eax ; clc ; jmp rcx
0x000000000042de25 : mov esp, 0x1d8d4cd2 ; ret 0x5d0
0x000000000042e46a : mov esp, 0x1d8d4cd2 ; std ; retf 5
0x00000000004b212d : mov esp, 0x2df00000 ; cld ; jmp qword ptr [rdx]
0x000000000049acc9 : mov esp, 0x44 ; add byte ptr [rax], al ; retf
0x0000000000419761 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000419791 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000419781 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000046ac70 : mov esp, 0x79000001 ; ret 0x8d45
0x00000000004a65d4 : mov esp, 0x88000000 ; scasb al, byte ptr [rdi] ; cmc ; call qword ptr [rdi]
0x0000000000455956 : mov esp, 0x89000000 ; ret 0x348
0x00000000004a8dd4 : mov esp, 0x98000028 ; xor esi, esi ; call rdi
0x0000000000495860 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x000000000041722b : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042043b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000419771 : mov esp, 0xf80148c0 ; ret
0x0000000000453f51 : mov esp, 2 ; jmp 0x4501c7
0x00000000004a9ea6 : mov esp, dword ptr [rbp + 0xd1cfff6] ; scasb al, byte ptr [rdi] ; jg 0x4a9eae ; jmp qword ptr [rdx]
0x0000000000400d81 : mov esp, eax ; call 0x430b98
0x000000000046b859 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000004849d1 : mov esp, ecx ; ret
0x00000000004a1b84 : mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a1bf7 ; salc ; retf
0x00000000004a1b83 : mov gs, r13d ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4a1bf8 ; salc ; retf
0x000000000040d7a9 : mov gs, word ptr [rdx] ; add byte ptr [rcx], al ; ret
0x0000000000403889 : mov qword ptr [r13 + 0x10], rcx ; call 0x4002e6
0x000000000044319a : mov qword ptr [r15 + 8], rdx ; jmp 0x44316f
0x000000000045a068 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045a0a8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000432710 : mov qword ptr [rax + 0x10], rsi ; ret
0x000000000045a608 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045a06c : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045a6a6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040caf9 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000467615 : mov qword ptr [rax + 8], rdx ; ret
0x00000000004326d7 : mov qword ptr [rax + 8], rsi ; ret
0x0000000000467594 : mov qword ptr [rax], 0 ; call r12
0x000000000045a7d4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000474fa4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000474f98 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000043f5ee : mov qword ptr [rax], rdx ; ret
0x000000000045abc0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000046850e : mov qword ptr [rbp + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044bbb5 : mov qword ptr [rbp - 0x1058], rax ; call 0x448669
0x0000000000456046 : mov qword ptr [rbp - 0x1e8], rdx ; call 0x412a99
0x00000000004571f8 : mov qword ptr [rbp - 0x1f8], rdx ; call 0x433459
0x0000000000435508 : mov qword ptr [rbp - 0x58], rax ; call rcx
0x0000000000436184 : mov qword ptr [rbp - 0x60], rax ; call 0x4123e6
0x0000000000466068 : mov qword ptr [rbp - 0xb8], r11 ; call rax
0x0000000000466730 : mov qword ptr [rbp - 0xb8], r11 ; call rsi
0x0000000000466a77 : mov qword ptr [rbp - 0xe0], r8 ; call rsi
0x000000000043da46 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000046b30d : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046b2c1 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000409f56 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000040a968 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000046b177 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000481894 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000040c412 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047e4d2 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000045df51 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c499 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000409f06 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000040c674 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000486a0b : mov qword ptr [rbx], r8 ; pop rbx ; ret
0x0000000000481c45 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047f7c0 : mov qword ptr [rbx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004846a8 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x00000000004735be : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000042e76c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000042e0dc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000042e0bc : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000042e11f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000042e13f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000042e100 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043269a : mov qword ptr [rdi + 0x10], rsi ; mov qword ptr [rdx], rdi ; ret
0x000000000040c3a2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000045d3ec : mov qword ptr [rdi + 0x20], rcx ; pop rbx ; ret
0x00000000004651f7 : mov qword ptr [rdi + 0x300], rax ; ret
0x00000000004651cb : mov qword ptr [rdi + 0x308], rax ; ret
0x00000000004201f8 : mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000040c3d2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004846e0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000042e72c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000042e07c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000042e74c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000042e09c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000428707 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000428697 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000428627 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004285b7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042e62a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000428547 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042dfca : mov qword ptr [rdi + 5], rdx ; ret
0x000000000042e64a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004284d7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042dfda : mov qword ptr [rdi + 6], rdx ; ret
0x000000000042e66a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000428467 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042dfea : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000472ec3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000473543 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000040c3a6 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000419f94 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000048469a : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000424d14 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000424d52 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004734ae : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042509b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427f17 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042527b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e97 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042546b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e17 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042563c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427d88 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042583c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427cf8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000425a3c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427c68 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000473439 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000424d18 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000424d56 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000424ecb : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000424fc7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000424f13 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427f97 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044a3a5 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000473408 : mov qword ptr [rdi], r9 ; ret
0x000000000047469d : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x0000000000420049 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x000000000042e5b6 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000042dfa6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000042dfb6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042dfc7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000042dfd7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000042dfe7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000419f91 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000042df97 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000041ffc8 : mov qword ptr [rdi], rcx ; ret
0x000000000042e5a3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000400a2f : mov qword ptr [rdi], rdx ; ret
0x0000000000407e12 : mov qword ptr [rdx + 0x140], rcx ; ret
0x000000000042db4a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042c33a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000042db6a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000042c35a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000042db8a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042c37a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000042da1a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042c26a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000040d4e7 : mov qword ptr [rdx + 8], rcx ; ret
0x000000000042d9c3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000042c213 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000474f84 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000418b3d : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000045a3d5 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040d453 : mov qword ptr [rdx], rcx ; ret
0x000000000043269e : mov qword ptr [rdx], rdi ; ret
0x00000000004016d9 : mov qword ptr [rip + 0x2b2990], rax ; xor eax, eax ; ret
0x0000000000400d5a : mov qword ptr [rip + 0x2b4367], rax ; pop r12 ; ret
0x00000000004326d3 : mov qword ptr [rsi + 0x10], rdx ; mov qword ptr [rax + 8], rsi ; ret
0x0000000000401587 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x00000000004864e9 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000040d3ea : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000043270c : mov qword ptr [rsi + 8], rdx ; mov qword ptr [rax + 0x10], rsi ; ret
0x0000000000482023 : mov qword ptr [rsi], r8 ; ret
0x000000000040e4fa : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x0000000000468031 : mov qword ptr [rsi], rax ; ret
0x0000000000401584 : mov qword ptr [rsi], rsi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000046015f : mov qword ptr [rsp + 0x38], rax ; jmp 0x46011b
0x0000000000411e67 : mov qword ptr [rsp + 8], r10 ; call 0x40e897
0x000000000043a38e : mov qword ptr [rsp + 8], rax ; call r12
0x00000000004389ca : mov qword ptr [rsp + 8], rax ; call r14
0x000000000043ab04 : mov qword ptr [rsp + 8], rax ; call r15
0x0000000000437bde : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000411027 : mov qword ptr [rsp + 8], rax ; call rdx
0x0000000000438e97 : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000431af6 : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x0000000000431b56 : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x0000000000431a96 : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x0000000000431ce6 : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x00000000004333f6 : mov qword ptr [rsp], rax ; mov eax, 8 ; syscall
0x000000000043f5ed : mov qword ptr fs:[rax], rdx ; ret
0x0000000000403888 : mov qword ptr gs:[r13 + 0x10], rcx ; call 0x4002e7
0x0000000000401586 : mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000462630 : mov r10, rcx ; jmp 0x462606
0x0000000000433430 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000004324c0 : mov r10, rcx ; mov eax, 9 ; syscall
0x00000000004280d6 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000425871 : mov r10d, 0x4f7f0ff3 ; retf -0x76b4
0x00000000004a1bfd : mov r10d, 0xcac982a4 ; call 0xffffffffaf0cba7f
0x0000000000428156 : mov r11d, 0x46f00ff2 ; retf
0x0000000000425671 : mov r11d, 0x4f7f0ff3 ; retf
0x0000000000400d80 : mov r12, rax ; call 0x430b99
0x0000000000453f50 : mov r12d, 2 ; jmp 0x4501c8
0x000000000046c21a : mov r13, rcx ; sub rdx, rcx ; jmp 0x46c263
0x0000000000404db2 : mov r13d, 0x64 ; jmp 0x404d8c
0x0000000000484929 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004562da : mov r14, qword ptr [rbp - 0x258] ; jmp 0x4525c4
0x0000000000455e30 : mov r14, r9 ; jmp 0x452893
0x0000000000455db0 : mov r14, rax ; jmp 0x452893
0x0000000000453aeb : mov r14, rbx ; jmp 0x44fde0
0x000000000044aa2a : mov r14d, 0x10 ; jmp rdx
0x000000000048492d : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048a760 : mov r15b, cl ; call rsi
0x0000000000453ae8 : mov r15d, eax ; mov r14, rbx ; jmp 0x44fde3
0x0000000000432931 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000486a08 : mov r8, qword ptr [r8] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x000000000046750c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000440933 : mov r9, rax ; jmp 0x44082b
0x000000000040713f : mov r9, rdi ; jmp 0x40708b
0x000000000048a718 : mov r9d, edi ; call rcx
0x0000000000409f10 : mov rax, -1 ; pop rbx ; ret
0x000000000040cc80 : mov rax, -1 ; ret
0x000000000043f810 : mov rax, 0xf ; syscall
0x000000000045c3d0 : mov rax, 1 ; ret
0x000000000045c3e0 : mov rax, 2 ; ret
0x000000000045c3f0 : mov rax, 3 ; ret
0x000000000045c400 : mov rax, 4 ; ret
0x000000000045c410 : mov rax, 5 ; ret
0x000000000045c420 : mov rax, 6 ; ret
0x000000000045c430 : mov rax, 7 ; ret
0x0000000000469b97 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000465f03 : mov rax, qword ptr [r14 + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000466431 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040c4cb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000409322 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040c60e : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000040c887 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040ab24 : mov rax, qword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x00000000004815d2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040c9fb : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000045ac93 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000048011f : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000435882 : mov rax, qword ptr [rax + 8] ; add rsp, 0x18 ; ret
0x000000000046b600 : mov rax, qword ptr [rax + 8] ; ret
0x000000000043f60e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000484640 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000432934 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004360f0 : mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000466560 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r12] ; call rax
0x0000000000474fa0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000045fd27 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0x45fd3b ; call rax
0x000000000045ff64 : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0x45ff7c ; call rax
0x000000000042c210 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000045ac90 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040d740 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000484650 : mov rax, qword ptr [rdi + 0x90] ; ret
0x00000000004846b0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004846f0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x0000000000484750 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x0000000000484740 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x0000000000484700 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000046b5a0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x46b5b8 ; ret
0x00000000004851eb : mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x000000000040d440 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x40d441 ; ret
0x000000000043d300 : mov rax, qword ptr [rip + 0x279d29] ; ret
0x00000000004358e0 : mov rax, qword ptr [rip + 0x282341] ; ret
0x000000000040d720 : mov rax, qword ptr [rip + 0x2a6979] ; ret
0x0000000000485230 : mov rax, qword ptr [rsi] ; add rsp, 8 ; ret
0x0000000000484725 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000401279 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000047e1c2 : mov rax, qword ptr [rsp + 0x38] ; call rax
0x00000000004603a5 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x000000000046a536 : mov rax, qword ptr [rsp] ; add rsp, 0x48 ; jmp r11
0x0000000000418b40 : mov rax, r10 ; pop rbx ; ret
0x000000000045d59a : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042083a : mov rax, r12 ; pop r12 ; ret
0x000000000041406d : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458b11 : mov rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000459624 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040abc0 : mov rax, r13 ; sub rax, rbx ; jmp 0x40ab9a
0x000000000045fc0c : mov rax, r14 ; pop r14 ; ret
0x000000000040e612 : mov rax, r8 ; nop dword ptr [rax] ; ret
0x000000000040e4fd : mov rax, r8 ; ret
0x00000000004606b5 : mov rax, r9 ; ret
0x000000000040af39 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000409ea9 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000459c78 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004686af : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000043259f : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040ded4 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040a01c : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000468a97 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000407ed3 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040b238 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043240d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000409f5a : mov rax, rbx ; pop rbx ; ret
0x0000000000401a42 : mov rax, rcx ; pop r13 ; ret
0x00000000004019c8 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405944 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045cda8 : mov rax, rcx ; ret
0x0000000000409ede : mov rax, rdi ; jmp 0x409eb2
0x0000000000401bfb : mov rax, rdi ; pop r13 ; ret
0x0000000000401be5 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040d750 : mov rax, rdi ; ret
0x000000000046b3d3 : mov rax, rdx ; add rsp, 0x28 ; ret
0x0000000000475112 : mov rax, rdx ; add rsp, 0x38 ; ret
0x00000000004816ea : mov rax, rdx ; pop r12 ; ret
0x000000000045fab2 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004128e8 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041247f : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000473a94 : mov rax, rdx ; pop rbx ; ret
0x0000000000414a87 : mov rax, rdx ; ret
0x0000000000406d79 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000440b83 : mov rax, rsi ; ret
0x00000000004849cc : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046b85b : mov rbp, r9 ; jmp rdx
0x0000000000467c05 : mov rbp, rax ; jmp 0x467bd8
0x0000000000400ee0 : mov rbp, rsp ; ja 0x400eed ; pop rbp ; ret
0x0000000000436940 : mov rbx, qword ptr [rbx + 0x20] ; jmp 0x436915
0x000000000046a8ae : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x000000000046a98e : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x000000000040c726 : mov rbx, rdi ; je 0x40c736 ; pop rbx ; ret
0x0000000000486503 : mov rbx, rdi ; test eax, eax ; jne 0x486518 ; pop rbx ; ret
0x000000000043f005 : mov rbx, rdi ; test rax, rax ; je 0x43f017 ; call rax
0x000000000040b316 : mov rbx, rdx ; jne 0x40b326 ; pop rbx ; ret
0x000000000045fbb0 : mov rbx, rsi ; syscall
0x000000000040d450 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000042df80 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000046b6f6 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b684 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000045c5f3 : mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000045c73b : mov rdi, qword ptr [r13] ; call r12
0x0000000000435504 : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x0000000000435839 : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000046a8dd : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000043d0b5 : mov rdi, qword ptr [rsp + 0x18] ; call r15
0x0000000000464034 : mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000437821 : mov rdi, qword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000437bda : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000004396b9 : mov rdi, qword ptr [rsp + 0x50] ; call rax
0x00000000004391a4 : mov rdi, qword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000403845 : mov rdi, r12 ; call 0x400305
0x0000000000412f93 : mov rdi, r12 ; call rax
0x000000000045cb47 : mov rdi, r12 ; call rbx
0x000000000043ef33 : mov rdi, r13 ; mov ax, 3 ; syscall
0x000000000043ee09 : mov rdi, r13 ; mov eax, 3 ; syscall
0x0000000000409d36 : mov rdi, r13 ; mov eax, r9d ; syscall
0x000000000045aff3 : mov rdi, r13 ; xor r8d, r8d ; call r12
0x0000000000455fc2 : mov rdi, r14 ; call 0x412a95
0x00000000004360ed : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000044e11b : mov rdi, r15 ; call 0x45a3e5
0x000000000048672d : mov rdi, rax ; jmp 0x412a05
0x0000000000431d88 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000043d3a9 : mov rdi, rbp ; mov eax, 3 ; syscall
0x000000000043d2b6 : mov rdi, rbx ; call r12
0x0000000000435a68 : mov rdi, rbx ; call r15
0x0000000000408ec4 : mov rdi, rbx ; call rax
0x000000000040aaf0 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040c60a : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000431170 : mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000431181 : mov rdi, rdx ; mov eax, r9d ; syscall
0x0000000000408037 : mov rdi, rsi ; call 0x484ac5
0x0000000000408036 : mov rdi, rsi ; call 0x484ac6
0x0000000000486db8 : mov rdi, rsp ; call r12
0x0000000000484318 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000045fee4 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0x45fefc ; call rdx
0x0000000000441dda : mov rdx, qword ptr [rax*8 + 0x49a060] ; jmp rdx
0x000000000044551f : mov rdx, qword ptr [rax*8 + 0x49a160] ; jmp rdx
0x00000000004453fb : mov rdx, qword ptr [rax*8 + 0x49a260] ; jmp rdx
0x0000000000445311 : mov rdx, qword ptr [rax*8 + 0x49a360] ; jmp rdx
0x00000000004452c3 : mov rdx, qword ptr [rax*8 + 0x49a460] ; jmp rdx
0x00000000004450dd : mov rdx, qword ptr [rax*8 + 0x49a560] ; jmp rdx
0x0000000000441085 : mov rdx, qword ptr [rax*8 + 0x49a660] ; jmp rdx
0x000000000044cce4 : mov rdx, qword ptr [rax*8 + 0x49aa80] ; jmp rdx
0x000000000044aa74 : mov rdx, qword ptr [rax*8 + 0x49ab80] ; jmp rdx
0x000000000044c7c1 : mov rdx, qword ptr [rax*8 + 0x49ac80] ; jmp rdx
0x000000000044c77f : mov rdx, qword ptr [rax*8 + 0x49ad80] ; jmp rdx
0x000000000044c723 : mov rdx, qword ptr [rax*8 + 0x49ae80] ; jmp rdx
0x000000000044bc60 : mov rdx, qword ptr [rax*8 + 0x49af80] ; jmp rdx
0x0000000000474f80 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004876c8 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x4876e1 ; call rdx
0x0000000000474f94 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000424e80 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000428770 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000455e2d : mov rdx, r12 ; mov r14, r9 ; jmp 0x452896
0x0000000000455dad : mov rdx, r12 ; mov r14, rax ; jmp 0x452896
0x000000000040ab21 : mov rdx, r12 ; mov rax, qword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x000000000047fb10 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047fad3 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000408ec1 : mov rdx, r14 ; mov rdi, rbx ; call rax
0x00000000004073b9 : mov rdx, r8 ; jmp 0x4073d3
0x0000000000447145 : mov rdx, rax ; mov rsi, r13 ; call 0x4733b8
0x0000000000435670 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000045fa7c : mov rdx, rbp ; xor eax, eax ; jmp 0x45fa4b
0x00000000004863cf : mov rdx, rcx ; jmp 0x4863a9
0x0000000000460090 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000484de7 : mov rsi, qword ptr [r15] ; call r14
0x0000000000484e3b : mov rsi, qword ptr [rbp] ; call r14
0x000000000046a8d9 : mov rsi, qword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000435026 : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000435673 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000041250a : mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000412f8e : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000412a82 : mov rsi, qword ptr [rsp] ; jmp rax
0x000000000047fb13 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047fad6 : mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000409d33 : mov rsi, r12 ; mov rdi, r13 ; mov eax, r9d ; syscall
0x0000000000447148 : mov rsi, r13 ; call 0x4733b5
0x0000000000484cd0 : mov rsi, r14 ; mov rdi, rbx ; call r15
0x000000000047de54 : mov rsi, r14 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000043f913 : mov rsi, rax ; mov eax, ecx ; syscall
0x0000000000400f2f : mov rsi, rax ; mov edi, 0x6b5b70 ; jmp rdx
0x0000000000474d92 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x474da8 ; ret
0x0000000000474eb2 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x242449] ; call rax
0x00000000004602d5 : mov rsi, rdi ; mov eax, ecx ; syscall
0x0000000000484c79 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x00000000004319db : mov rsi, rdx ; mov eax, 4 ; syscall
0x0000000000431a2a : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000046003b : mov rsi, rdx ; mov eax, 6 ; syscall
0x00000000004685ba : mov rsi, rsp ; syscall
0x000000000046b858 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000004849d0 : mov rsp, rcx ; ret
0x0000000000433a18 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000419f84 : mov word ptr [rax + rdx - 2], cx ; ret
0x0000000000439e42 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000411bc8 : mov word ptr [rax], cs ; call 0x40e685
0x00000000004af16d : mov word ptr [rax], es ; add byte ptr [rax - 0x4a], dh ; cli ; call qword ptr [rax]
0x000000000048328a : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e6ac : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000042e01c : mov word ptr [rdi + 0x10], cx ; ret
0x000000000042e7b4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000042e104 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004289a7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000042e578 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000042df58 : mov word ptr [rdi + 4], dx ; ret
0x000000000042e5ca : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000042df9a : mov word ptr [rdi + 8], dx ; ret
0x000000000042541c : mov word ptr [rdi - 2], cx ; ret
0x0000000000425234 : mov word ptr [rdi - 2], dx ; ret
0x0000000000425418 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000042df23 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004289ab : mov word ptr [rdi], cx ; ret
0x000000000042e533 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000428a13 : mov word ptr [rdi], dx ; ret
0x00000000004acca4 : mov word ptr [rdi], fs ; add byte ptr [rax - 0x5a], ch ; std ; jmp qword ptr [rdx]
0x000000000042da98 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042c2d8 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000042da43 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042c293 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004ab6aa : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000004a7062 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; retf
0x000000000043f6f4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000049afb0 : movabs al, byte ptr [0x32000000000044c9] ; retf 0x44
0x000000000045b27d : movabs al, byte ptr [0x840ff68548004a52] ; retf
0x0000000000433e1c : movabs al, byte ptr [0x8948c08548000314] ; ret
0x000000000046b59f : movabs byte ptr [0x874f03948078b48], al ; ret
0x00000000004a5f24 : movabs byte ptr [0x89fffdca95fffdca], al ; retf -3
0x00000000004a3843 : movabs byte ptr [0xd900432ac06c5d01], al ; retf -0x156f
0x00000000004a34a1 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000004aa2de : movabs byte ptr [0xf681ca0d1cfff6a1], al ; jmp qword ptr [rdx]
0x0000000000466d1a : movabs dword ptr [0x8348d889482673ce], eax ; ret
0x00000000004a9a26 : movabs dword ptr [0xf662e40d1cfff6a9], eax ; jmp qword ptr [rdx]
0x00000000004a18e7 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x0000000000434ddb : movabs eax, dword ptr [0x6b7be0b8fffffd] ; ret
0x00000000004a219a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x00000000004239a2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042399e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000423a4c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042dff0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000042e86d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000042e1bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042867f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042860f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042859f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042852f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042e80d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000042e15d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004284bf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042e82d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000042e17d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000042844f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042e84d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000042e19d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000428a6f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004289ff : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042898f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042891f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004288af : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042883f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004287cf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042875f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004286ef : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000419e96 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x0000000000427bdb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000427c4b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042e684 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000042e004 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000042e047 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000042e037 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000042e0b8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000042e078 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000042e098 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000042e018 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000042e1b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042e159 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000042e179 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000042e199 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004283fa : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000428454 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042dff1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000042e86e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000042e1be : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000428680 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000428610 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004285a0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000428530 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042e80e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000042e15e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000004284c0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042e82e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000042e17e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000428450 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042e84e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000042e19e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000428a70 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000428a00 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000428990 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000428920 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004288b0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000428840 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004287d0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000428760 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004286f0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000419e83 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x419e98 ; ret
0x0000000000419e82 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x419e99 ; ret
0x0000000000419e98 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000427bdc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000427c4c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000428387 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000428307 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000428277 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004281f7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000428177 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004280f7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000428077 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427ff7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427f77 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427ef7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427e77 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427df7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427d67 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427cd7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427c47 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042e685 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000042e005 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000042e058 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000042e048 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000042e038 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000042e0b9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000042e079 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000042e099 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000042e019 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000042e1ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042e15a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000042e17a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000042e19a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004283fb : movq qword ptr [rdi], mm0 ; ret
0x0000000000428455 : movq qword ptr [rdi], mm1 ; ret
0x00000000004b0975 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; sbb byte ptr [rsi - 5], cl ; call rdx
0x000000000043af56 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; retf
0x00000000004aa00f : movsb byte ptr [rdi], byte ptr [rsi] ; idiv bh ; sbb al, 0xd ; hlt ; jg 0x4aa015 ; jmp qword ptr [rdx]
0x00000000004a25c2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ad8bc : movsb byte ptr [rdi], byte ptr [rsi] ; jae 0x4ad8c6 ; add byte ptr [rax + 0x1d], al ; stc ; call qword ptr [rdi]
0x00000000004a381d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4a3876 ; jmp 0x4a37b7
0x00000000004b30bc : movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000004b2fbc : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000004a14a5 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004aa00e : movsb byte ptr [rdi], byte ptr ds:[rsi] ; idiv bh ; sbb al, 0xd ; hlt ; jg 0x4aa016 ; jmp qword ptr [rdx]
0x00000000004a3abd : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a9ea7 : movsd dword ptr [rdi], dword ptr [rsi] ; idiv bh ; sbb al, 0xd ; scasb al, byte ptr [rdi] ; jg 0x4a9ead ; jmp qword ptr [rdx]
0x00000000004a9e5f : movsd dword ptr [rdi], dword ptr [rsi] ; idiv bh ; sbb al, 0xd ; stc ; jle 0x4a9e65 ; jmp qword ptr [rdx]
0x00000000004a3e55 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a3711 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000473462 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000448127 : movsd dword ptr [rdi], dword ptr [rsi] ; sbb al, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000048a8d1 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; push qword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call qword ptr [rax]
0x00000000004a21a1 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x00000000004747e3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000047479d : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000046ab69 : movsx eax, byte ptr [rsi] ; neg eax ; ret
0x000000000046ab75 : movsx eax, dl ; sub eax, ecx ; ret
0x0000000000482963 : movsx esi, word ptr [rax + 1] ; add rax, 3 ; jmp 0x482939
0x0000000000483882 : movsxd r8, dword ptr [r14 + r8*4] ; add r8, r14 ; jmp r8
0x0000000000414da1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000426016 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000423482 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000482d32 : movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x0000000000483d8f : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000484fc2 : movsxd rax, dword ptr [r8 + rdi*4] ; add r8, rax ; jmp r8
0x00000000004869da : movsxd rax, dword ptr [r9 + r8*4] ; add r9, rax ; jmp r9
0x0000000000482e33 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x0000000000421dcd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042ddb9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004820c3 : movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0x0000000000482218 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x0000000000483632 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000004601a6 : movsxd rdi, dword ptr [rsp + 0x18] ; mov eax, ebx ; syscall
0x000000000045f945 : movsxd rdi, ebp ; mov al, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004321bf : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x000000000043f7be : movsxd rdi, ecx ; mov eax, 0xea ; syscall
0x000000000040fd6d : movsxd rdi, ecx ; mov eax, 3 ; syscall
0x000000000043327b : movsxd rdi, edi ; mov al, 3 ; syscall
0x00000000004600d7 : movsxd rdi, edi ; mov eax, 0x101 ; syscall
0x000000000046033e : movsxd rdi, edi ; mov eax, 0x14 ; syscall
0x0000000000431b99 : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x000000000043fa37 : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x000000000043310d : movsxd rdi, edi ; mov eax, 3 ; syscall
0x0000000000460233 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x0000000000400410 : movsxd rdi, esp ; mov eax, 3 ; syscall
0x000000000040040f : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x00000000004321be : movsxd rdi, r13d ; mov eax, 3 ; syscall
0x000000000043327a : movsxd rdi, r15d ; mov al, 3 ; syscall
0x000000000043310c : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000042354f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048343c : movsxd rdx, dword ptr [rbp + rdx*4] ; add rdx, rbp ; jmp rdx
0x00000000004a999d : movsxd rsi, esi ; jmp qword ptr [rdx]
0x000000000042fd9c : movsxd rsi, esi ; ret 0x7520
0x000000000047479e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x00000000004747e4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000043f77c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040b32b : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000047504c : movzx eax, al ; neg eax ; ret
0x0000000000474e52 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460215 : movzx eax, al ; ret
0x000000000040ba2a : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040cce6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000485190 : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040a1f5 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040afae : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000040dafd : movzx eax, byte ptr [rax] ; ret
0x000000000046c217 : movzx eax, byte ptr [rcx] ; mov r13, rcx ; sub rdx, rcx ; jmp 0x46c266
0x0000000000416138 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000421de0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000419900 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000416153 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000040a200 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040ba2b : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430bf7 : movzx eax, cl ; pop rbx ; ret
0x0000000000430c1f : movzx eax, dl ; pop rbx ; ret
0x00000000004303fa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4303f9 ; ret
0x00000000004304aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4304a9 ; ret
0x0000000000422c84 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000416150 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000421de3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004602af : movzx ecx, byte ptr [rsp - 0x15] ; mov byte ptr [r8 + 0x23], cl ; ret
0x000000000040617f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x406167 ; ret
0x0000000000421cb1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000041627f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000421b43 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042fdc4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000042fe24 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000042fe14 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000042fe04 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000042fdf4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000042fde4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000042fdd4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004283a0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000422a37 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000042fdab : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000428a80 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000419903 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000419929 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000428320 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000428a10 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000046c216 : movzx r8d, byte ptr [rcx] ; mov r13, rcx ; sub rdx, rcx ; jmp 0x46c267
0x0000000000460214 : movzx rax, al ; ret
0x000000000046802e : mul byte ptr [rax + rax] ; mov qword ptr [rsi], rax ; ret
0x000000000045b717 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000467f5c : mul dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000046bb75 : mulps xmm0, xmm0 ; pop r15 ; ret
0x000000000047060d : mulps xmm0, xmmword ptr [rip + 0x30414] ; jmp 0x4705e0
0x000000000047060c : mulsd xmm0, qword ptr [rip + 0x30414] ; jmp 0x4705e1
0x000000000046e264 : mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000046bb74 : mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000431a0b : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000040b32e : neg eax ; pop rbx ; ret
0x000000000046ab6c : neg eax ; ret
0x0000000000431bd1 : neg edx ; cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x00000000004602c0 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x0000000000474bee : nop ; add byte ptr [r15 + 0x6b7300], r15b ; call rax
0x0000000000439e44 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000427acb : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000401393 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004220ec : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af545 : nop ; add byte ptr [rax], al ; test al, 0xc0 ; cli ; jmp rdx
0x00000000004a7660 : nop ; add esi, esi ; call qword ptr [rax]
0x0000000000430e6f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004313af : nop ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004358cf : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004872ff : nop ; add rsp, 8 ; ret
0x000000000041975f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000481d8f : nop ; call rax
0x00000000004b1120 : nop ; cdq ; sti ; call rcx
0x00000000004a9060 : nop ; cmp esi, esi ; call qword ptr [rcx]
0x00000000004ac200 : nop ; jb 0x4ac1fe ; jmp qword ptr [rdi]
0x000000000048a86c : nop ; mov bl, 0xf9 ; jmp qword ptr [rax]
0x000000000048a868 : nop ; mov cl, 0xf9 ; call qword ptr [rax + 0x20fff9b3]
0x000000000042504f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042522f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043251f : nop ; mov eax, 0x1c ; syscall
0x000000000045fcbf : nop ; mov eax, 0x3f ; syscall
0x00000000004323af : nop ; mov eax, 0x61 ; syscall
0x00000000004324ff : nop ; mov eax, 0xa ; syscall
0x000000000045a74f : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040e02f : nop ; mov eax, 0xffffffff ; ret
0x00000000004255ef : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042e54f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000409f0f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000048463f : nop ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000040d44f : nop ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000042dfef : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000476cdd : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000409afc : nop ; pop qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000048a99c : nop ; popfq ; stc ; jmp rax
0x00000000004a57f4 : nop ; push rax ; std ; call qword ptr [rax]
0x00000000004a57fc : nop ; push rbx ; std ; call qword ptr [rax]
0x00000000004a5804 : nop ; push rsi ; std ; call qword ptr [rax]
0x000000000043078f : nop ; ret
0x000000000048a975 : nop ; stc ; inc eax ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x000000000048a58c : nop ; stc ; jmp rax
0x00000000004a57d4 : nop ; std ; call qword ptr [rax]
0x0000000000462fca : nop ; sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048a544 : nop ; sub eax, 0x2f30fff9 ; stc ; call rax
0x000000000040d48f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000432d3f : nop ; test rdi, rdi ; jne 0x432d57 ; ret
0x000000000048a948 : nop ; xchg eax, esi ; stc ; jmp rax
0x000000000043383f : nop ; xor eax, eax ; leave ; ret
0x000000000041992f : nop ; xor eax, eax ; ret
0x00000000004197df : nop ; xor rax, rax ; ret
0x000000000042df2b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000045cda3 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x0000000000487473 : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d55b : nop dword ptr [rax + rax] ; ret
0x0000000000409ed3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000045c39c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000481fbd : nop dword ptr [rax] ; mov eax, 0x26 ; syscall
0x000000000040db1c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000407d3c : nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000041ffc4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000040584c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000040e615 : nop dword ptr [rax] ; ret
0x000000000040cbed : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000045cda2 : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000004326a2 : nop word ptr [rax + rax] ; ret
0x000000000046b740 : not eax ; and eax, ecx ; ret
0x000000000046b7bf : not eax ; and eax, edx ; ret
0x00000000004a6ff8 : or ah, dh ; cmc ; call qword ptr [rax]
0x000000000041d6f7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ed6f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046030a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004602d1 : or al, 0 ; add byte ptr [rax], al ; mov rsi, rdi ; mov eax, ecx ; syscall
0x0000000000411582 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411732 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046b90e : or al, 0 ; add byte ptr [rbp + 0x35], dh ; add rsp, 8 ; ret
0x000000000047a5c0 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047a519 : or al, 0 ; add byte ptr [rcx - 0x7d], cl ; jmp 0x47a539
0x000000000044cf6e : or al, 0x16 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000443783 : or al, 0x16 ; add rdx, rbx ; call qword ptr [r11 + rax*8]
0x0000000000416136 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000004684b5 : or al, 0x3e ; jae 0x468477 ; xor eax, eax ; ret
0x0000000000433698 : or al, 0x41 ; pop rsp ; ret
0x0000000000436409 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046b1f0 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000401278 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000046bf4f : or al, 0x4a ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004abc24 : or al, 0x57 ; add byte ptr [rax], al ; mov byte ptr [rbp - 8], dl ; jmp rax
0x000000000047dc47 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004ad124 : or al, 0x6c ; add byte ptr [rax], al ; ret
0x00000000004ade24 : or al, 0x79 ; add byte ptr [rax], al ; sub byte ptr [rax], ch ; stc ; call qword ptr [rax]
0x00000000004585fa : or al, 0x7e ; retf
0x00000000004309de : or al, 0x83 ; rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000044709a : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000431c99 : or al, 0x89 ; ret
0x0000000000441b74 : or al, 0x89 ; ret 0xeac0
0x0000000000483634 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000414da3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000041c7e4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000426018 : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000423484 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000004820c5 : or al, 0x8f ; add rcx, r15 ; jmp rcx
0x000000000048221a : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00000000004af824 : or al, 0x93 ; add byte ptr [rax], al ; pop rax ; sar dl, 1 ; call rax
0x0000000000421dcf : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000042ddbb : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004ac90c : or al, 0x9d ; clc ; jmp qword ptr [rdx]
0x0000000000423488 : or al, 0xb ; jmp r9
0x000000000042ddbf : or al, 0xb ; jmp rcx
0x00000000004285a3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004a7bcd : or al, 0xf6 ; jmp qword ptr [rdx]
0x0000000000458b6a : or al, 0xf6 ; ret 0x7404
0x00000000004018af : or al, 3 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000043198e : or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004163cd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d901 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004163f1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000484419 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000432501 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004a6ff5 : or al, byte ptr [rax] ; add byte ptr [rax], cl ; hlt ; cmc ; call qword ptr [rax]
0x0000000000418008 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000405486 : or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000047a7c7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000403e4b : or al, ch ; jmp qword ptr [rdx]
0x000000000045ab07 : or al, ch ; ret
0x000000000045b208 : or al, ch ; ret 1
0x000000000040d40f : or al, ch ; retf
0x000000000046b5d7 : or bh, bh ; loopne 0x46b637 ; ret
0x0000000000400a90 : or bh, bh ; retf
0x00000000004846ae : or bl, al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004326da : or bl, al ; nop dword ptr [rax] ; ret
0x0000000000467618 : or bl, al ; nop word ptr [rax + rax] ; ret
0x0000000000458582 : or bl, ch ; add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000044319d : or bl, ch ; retf -0x427d
0x0000000000428763 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000040d4ea : or bl, dh ; ret
0x000000000040d4e9 : or bl, sil ; ret
0x0000000000413908 : or byte ptr [r13 - 0x77], r9b ; ret
0x000000000042c268 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000045a1c1 : or byte ptr [r8 - 0x77], cl ; or ecx, dword ptr [rax - 0x77] ; retf -0x72b8
0x0000000000406b62 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000460962 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000047a9a2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042c327 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000460388 : or byte ptr [rax + 0x14], bh ; syscall
0x000000000040dfab : or byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000040ee8b : or byte ptr [rax + 0x29], cl ; ret 0x8e74
0x000000000040daf7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000412d3b : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000040f693 : or byte ptr [rax + 0x39], cl ; retf
0x000000000045a6f1 : or byte ptr [rax + 0x39], cl ; retf -0x7df1
0x0000000000436953 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403a52 : or byte ptr [rax + 1], cl ; ret
0x00000000004682b4 : or byte ptr [rax + 4], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047da9d : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000419809 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x000000000041981d : or byte ptr [rax - 0x73], cl ; add eax, 0x858b ; ret
0x00000000004396b8 : or byte ptr [rax - 0x75], cl ; jl 0x4396e7 ; push rax ; call rax
0x000000000042c26d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000043240c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000432699 : or byte ptr [rax - 0x77], cl ; ja 0x4326b6 ; mov qword ptr [rdx], rdi ; ret
0x000000000043270f : or byte ptr [rax - 0x77], cl ; jo 0x432729 ; ret
0x000000000042c269 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000045a1c2 : or byte ptr [rax - 0x77], cl ; or ecx, dword ptr [rax - 0x77] ; retf -0x72b8
0x00000000004326d2 : or byte ptr [rax - 0x77], cl ; push rsi ; adc byte ptr [rax - 0x77], cl ; jo 0x4326ec ; ret
0x000000000041247e : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047fc5c : or byte ptr [rax - 0x77], cl ; ret
0x000000000046f7b0 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000406b63 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000041168c : or byte ptr [rax - 0x77], cl ; retf
0x0000000000458e54 : or byte ptr [rax - 0x77], cl ; retf 0x4de9
0x0000000000432698 : or byte ptr [rax - 0x77], r9b ; ja 0x4326b7 ; mov qword ptr [rdx], rdi ; ret
0x0000000000460963 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000046076f : or byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000041178b : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000432887 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000420056 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004200de : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000466fcf : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044a293 : or byte ptr [rax - 0x7d], cl ; ret 0x8404
0x000000000044a362 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000400773 : or byte ptr [rax - 0xb700b6], cl ; retf -0x6f15
0x0000000000409573 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000041662c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a6d55 : or byte ptr [rax], al ; add al, ch ; out 0xf5, al ; call qword ptr [rcx]
0x000000000040e33f : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000041662d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041daa1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416651 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040cafc : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000484f43 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000430cca : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004333da : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000041072d : or byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be40], al ; ret
0x0000000000418188 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041f15e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004688a5 : or byte ptr [rbp + 0x39483104], cl ; ret
0x000000000047f91a : or byte ptr [rbp + 0x440f4cd2], al ; ret
0x00000000004b35b3 : or byte ptr [rbp + 0xb], al ; ret
0x000000000047f6c0 : or byte ptr [rbp + rcx*4 + 4], cl ; retf -0x74b8
0x0000000000484de2 : or byte ptr [rbp - 0x73], cl ; cmp al, 0xcc ; mov rsi, qword ptr [r15] ; call r14
0x000000000043a1df : or byte ptr [rbp - 0x77], al ; ret 0x8948
0x0000000000413909 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000048a598 : or byte ptr [rbp - 7], 0xff ; ror byte ptr [rsi - 7], 1 ; jmp qword ptr [rax]
0x000000000045a412 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000408173 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000474b57 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000401b65 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000484ec3 : or byte ptr [rbx + 0x634801eb], al ; ret
0x0000000000463a28 : or byte ptr [rbx - 0x7cb7f7b0], cl ; ret 0x4801
0x0000000000433584 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000004651ce : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000418ada : or byte ptr [rcx + 0x29], cl ; ret
0x0000000000473003 : or byte ptr [rcx + 0x29], cl ; ret 0x8349
0x000000000047460b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000480ad9 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000004b275d : or byte ptr [rcx + 0xb], cl ; cmp al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000004709fd : or byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8545
0x000000000048155b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000473a90 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000486aee : or byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x0000000000474612 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000042c328 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000443199 : or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; retf -0x427d
0x0000000000444422 : or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; retf
0x0000000000461c31 : or byte ptr [rcx], al ; retf -0x1d3f
0x00000000004681c4 : or byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x94 ; ret
0x00000000004337be : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000408183 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a40de : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000465647 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004652a1 : or byte ptr [rdi + 0x6b5100], bh ; pop rbx ; pop rbp ; jmp rax
0x00000000004b0f98 : or byte ptr [rdi - 5], bh ; call qword ptr [rax]
0x0000000000405eea : or byte ptr [rdi], 0xbe ; ret 0xb60f
0x000000000040c677 : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000481879 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000423a4b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000040347e : or byte ptr [rdi], cl ; test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; retf -0x74bb
0x0000000000465102 : or byte ptr [rdi], cl ; test byte ptr [rbp + rdi*8 - 1], al ; dec dword ptr [rax - 0x7d] ; ret 0x3110
0x00000000004449c6 : or byte ptr [rdi], cl ; test ebx, ecx ; retf
0x00000000004ae886 : or byte ptr [rdx + rdi*8 + 0x90d1cff], bl ; sbb bh, dl ; jmp qword ptr [rdx]
0x00000000004aeb86 : or ch, byte ptr [rbx + 0xd1cfffa] ; xchg eax, edx ; stosb byte ptr [rdi], al ; cli ; jmp qword ptr [rdx]
0x000000000048a5bd : or cl, bh ; inc dword ptr [rax] ; or edi, ecx ; call qword ptr [rax]
0x000000000047d8de : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000408650 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000471564 : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; retf 0x1075
0x000000000046ef24 : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000045e732 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000047eaa4 : or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000045a3d7 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00000000004321bd : or cl, byte ptr [rcx + 0x63] ; std ; mov eax, 3 ; syscall
0x000000000040afad : or cl, byte ptr [rdi] ; mov dh, 0 ; pop rbx ; ret
0x0000000000453241 : or cl, ch ; loop 0x45324d ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000045f987 : or cl, ch ; ret
0x0000000000405b9d : or cl, ch ; ret 0
0x0000000000444426 : or cl, ch ; retf
0x0000000000481a25 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004a3ac2 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000428683 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000486715 : or dh, bl ; ret
0x00000000004a38ea : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000408034 : or dh, byte ptr [rbp + 0x3e] ; mov rdi, rsi ; call 0x484ac8
0x0000000000458586 : or dh, byte ptr [rbp + 2] ; ret
0x000000000047f9e7 : or dh, byte ptr [rbp - 0x55] ; call rbx
0x00000000004a7abd : or dh, dh ; jmp qword ptr [rdx]
0x000000000041057b : or dh, dh ; ret 0x7404
0x00000000004116b1 : or dh, dh ; ret 0x7502
0x0000000000410597 : or dh, dh ; ret 0xf04
0x0000000000402358 : or dh, dh ; ret 0xfdf
0x00000000004a5f30 : or dl, cl ; std ; dec dword ptr [rcx - 0x7600023e] ; ret 0xfffd
0x000000000041701e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000046c2de : or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000041655d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f00f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004164b7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000474852 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004324c4 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000476f2e : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000448b37 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf 0x3145
0x0000000000461041 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; retf -0x7df1
0x000000000047a819 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; jmp 0x47a839
0x0000000000499e97 : or dword ptr [rax], ecx ; retf
0x00000000004a3233 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000423206 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000414286 : or dword ptr [rbx - 0xd], ebx ; ret
0x000000000040afcc : or dword ptr [rbx], 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040a980 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040e148 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x0000000000401e5b : or dword ptr [rcx - 0x73], ecx ; mov edi, 0x80 ; call rax
0x0000000000413b57 : or dword ptr [rcx - 0x7d], ecx ; ret
0x000000000041396e : or dword ptr [rcx - 0x7d], ecx ; sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004017f4 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x00000000004a3a8e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x00000000004ae88c : or dword ptr [rdx], ebx ; cli ; jmp qword ptr [rdx]
0x0000000000468806 : or dword ptr [rip + 0x24c963], 1 ; pop rbx ; ret
0x000000000047a8bf : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042e811 : or eax, 0x1c478d48 ; ret
0x0000000000487a77 : or eax, 0x22ec1c ; jne 0x487aa4 ; ret
0x0000000000434c12 : or eax, 0x282fc9 ; pop rbx ; ret
0x00000000004b10e0 : or eax, 0x3520303 ; ret
0x000000000046b1c2 : or eax, 0x38c48348 ; ret
0x000000000043f90f : or eax, 0x48000000 ; mov esi, eax ; mov eax, ecx ; syscall
0x0000000000420632 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000004142d2 : or eax, 0x70c48348 ; pop rbx ; ret
0x000000000041d557 : or eax, 0x83480000 ; ret 0x4910
0x000000000041d5c1 : or eax, 0x83480000 ; ret 0xe910
0x000000000043dd2a : or eax, 0x83482374 ; ret
0x000000000043e3e3 : or eax, 0x83489074 ; ret
0x00000000004465cc : or eax, 0x860f004a ; retf
0x0000000000417d08 : or eax, 0x894d0000 ; retf
0x0000000000431122 : or eax, 0x8c48348 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000004a18e1 : or eax, 0xcad7947e ; jmp 0x4a188d
0x00000000004955c1 : or eax, 0xdc70000 ; add byte ptr [rax], al ; retf 0xd
0x00000000004a3a73 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x00000000004a3713 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000428533 : or eax, 0xf7f0ff3 ; ret
0x00000000004a725d : or eax, 0xfc600000 ; cmc ; call qword ptr [rdx]
0x00000000004a7245 : or eax, 0xfc680000 ; cmc ; call qword ptr [rax]
0x00000000004aa2dd : or eax, 0xfff6a1a2 ; sbb al, 0xd ; retf -0x97f
0x00000000004a9bd5 : or eax, 0xfff6a81d ; sbb al, 0xd ; ret
0x00000000004a9a6d : or eax, 0xfff6a962 ; sbb al, 0xd ; ret 0xf665
0x00000000004ac875 : or eax, 0xfff89ed9 ; sbb al, 0xd ; ret
0x0000000000431a11 : or eax, 0xffffffff ; ret
0x000000000040e1a4 : or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000040e1a1 : or eax, 2 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000046982c : or eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004162fd : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d761 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416321 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a710d : or eax, dword ptr [rax] ; add byte ptr [rax - 5], al ; cmc ; call qword ptr [rbx]
0x00000000004324e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004b280c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; cld ; ret 0
0x0000000000417e88 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048b0f1 : or eax, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x430c
0x0000000000485ef3 : or eax, dword ptr [rcx + 0x7ffe2] ; add byte ptr [rcx], cl ; ret 0x5389
0x00000000004ac0f4 : or eax, dword ptr [rdx] ; retf 0xc0a
0x0000000000420047 : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000482021 : or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x00000000004370df : or ebp, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x000000000040d484 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000040a230 : or ebp, eax ; retf 0x87
0x0000000000408930 : or ebp, eax ; retf 0xa0
0x00000000004b3898 : or ebp, edx ; add dword ptr [rbx], eax ; ret
0x00000000004286f3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047483e : or ebx, esi ; ret
0x000000000041315a : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000040ab9f : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x000000000045a1c5 : or ecx, dword ptr [rax - 0x77] ; retf -0x72b8
0x000000000043a85c : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004676eb : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x000000000040e149 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x0000000000482421 : or ecx, ebp ; ret
0x00000000004b275f : or edi, dword ptr [rax + rax] ; add byte ptr [rax], al ; ret 0
0x000000000048a5c1 : or edi, ecx ; call qword ptr [rax]
0x000000000040afcd : or edx, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000049a980 : or edx, eax ; add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x44
0x000000000049a9e8 : or edx, eax ; add byte ptr [rax], r8b ; add byte ptr [rax], al ; add cl, bh ; retf 0x44
0x000000000040e3e8 : or esi, dword ptr [rcx] ; xlatb ; mov byte ptr [rax + rsi], dil ; ret
0x0000000000428613 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000432d44 : or esi, ebx ; ret
0x000000000040a981 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004a6c2c : or esp, ebx ; cmc ; jmp qword ptr [rdx]
0x0000000000428762 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004286f2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000428682 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004a7abc : or r14b, sil ; jmp qword ptr [rdx]
0x0000000000428612 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000482020 : or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x00000000004ac0f3 : or r8d, dword ptr [r10] ; retf 0xc0a
0x00000000004b10df : or rax, 0x3520303 ; ret
0x0000000000431a10 : or rax, 0xffffffffffffffff ; ret
0x000000000047a6a2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420046 : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000004b275e : or rdi, qword ptr [r8 + rax] ; add byte ptr [rax], al ; ret 0
0x0000000000462c0b : out -0x18, eax ; call rsi
0x000000000043e808 : out -0x18, eax ; ret 0xff7b
0x00000000004a25c0 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004a99de : out -0x57, eax ; idiv bh ; sbb al, 0xd ; sbb esp, dword ptr [rbx - 0xa] ; jmp qword ptr [rdx]
0x00000000004a42e8 : out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000427f7a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000486dba : out 0x41, eax ; call rsp
0x000000000046745c : out 0x41, eax ; pop rsp ; pop r13 ; jmp rax
0x0000000000419f54 : out 0x41, eax ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1f8b
0x000000000043692e : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000484699 : out 0x48, al ; mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000409d35 : out 0x4c, al ; mov edi, ebp ; mov eax, r9d ; syscall
0x0000000000411e66 : out 0x4c, eax ; mov dword ptr [rsp + 8], edx ; call 0x40e898
0x000000000040cd03 : out 0x5b, al ; ret
0x00000000004a3300 : out 0x78, al ; jnp 0x4a3362 ; retf
0x000000000047fb15 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047fad8 : out 0x89, al ; out dx, eax ; call rax
0x00000000004522a3 : out 0x89, al ; ret
0x0000000000487816 : out 0xb1, al ; clc ; push rbx ; ret
0x00000000004a1891 : out 0xb3, al ; retf 0xe80
0x000000000043cee1 : out 0xf, eax ; xchg eax, ebp ; ret
0x0000000000427efa : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a6d59 : out 0xf5, al ; call qword ptr [rcx]
0x000000000041feb9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004500c7 : out dx, al ; add eax, ebp ; ret 0xfbcb
0x000000000044714a : out dx, al ; call 0x4733b3
0x00000000004b2a01 : out dx, al ; cld ; jmp qword ptr [rax]
0x00000000004a3717 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000042509a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042830a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000041eebe : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a3a72 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x00000000004a32ff : out dx, al ; out 0x78, al ; jnp 0x4a3363 ; retf
0x000000000046692e : out dx, al ; ret
0x000000000043abdb : out dx, al ; ret 0
0x0000000000420325 : out dx, eax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000047fc56 : out dx, eax ; add dword ptr [rsi - 0x73], ecx ; jl 0x47fc5d ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000473af8 : out dx, eax ; call 0x481488
0x000000000047fb17 : out dx, eax ; call qword ptr [rbx]
0x000000000047fada : out dx, eax ; call rax
0x00000000004a4365 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000043ef35 : out dx, eax ; mov ax, 3 ; syscall
0x0000000000431d8a : out dx, eax ; mov eax, 0x4f ; syscall
0x000000000043d3ab : out dx, eax ; mov eax, 3 ; syscall
0x0000000000409d38 : out dx, eax ; mov eax, r9d ; syscall
0x0000000000467593 : out dx, eax ; mov qword ptr [rax], 0 ; call r12
0x0000000000424eca : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000424fc6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000424f12 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042838a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000041efbd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040ccb8 : out dx, eax ; pop rbx ; ret
0x0000000000422253 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42222b
0x00000000004222d1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x4222a9
0x0000000000422763 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42273b
0x00000000004227e1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x4227b9
0x0000000000421e53 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421e68 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421e7d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000430543 : out dx, eax ; ret 0xf66
0x00000000004a3a3b : out dx, eax ; retf -0x54f3
0x0000000000430526 : out dx, eax ; retf 0x4466
0x0000000000414d4a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042336c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000423355 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042333e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000421dfa : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045aff5 : out dx, eax ; xor r8d, r8d ; call r12
0x000000000041cece : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042e96e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a3ec3 : outsb dx, byte ptr [rsi] ; ja 0x4a3e4c ; ret 0x48f
0x00000000004370de : outsb dx, byte ptr [rsi] ; or ebp, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x0000000000456292 : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004a28f2 : outsb dx, byte ptr [rsi] ; retf
0x00000000004a1c04 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004a3238 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000048a699 : outsb dx, byte ptr [rsi] ; stc ; inc eax ; outsd dx, dword ptr [rsi] ; stc ; jmp rax
0x000000000041a34a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000414ef8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041a99e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000425652 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x0000000000425852 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x000000000042316d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042320d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000422d32 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x0000000000422db2 : outsd dx, dword ptr [rsi] ; push rdi ; retf -0x354e
0x000000000045b71a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000423172 : outsd dx, dword ptr [rsi] ; ret
0x00000000004a25c6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000425807 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000423212 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000045b76a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004256d2 : outsd dx, dword ptr [rsi] ; retf
0x00000000004258d2 : outsd dx, dword ptr [rsi] ; retf -0x74b4
0x000000000041c879 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000042275a : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042224a : outsd dx, dword ptr [rsi] ; retf 0xff3
0x000000000048a69d : outsd dx, dword ptr [rsi] ; stc ; jmp rax
0x00000000004a25c5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004161f2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000045c394 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000045c37f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004161f1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a39c5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a39c6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004170b6 : pmovmskb edx, mm4 ; test edx, edx ; je 0x4170ca ; bsf eax, edx ; ret
0x00000000004816e7 : pop bx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000409afd : pop qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000043365d : pop qword ptr [rsi + 0x28] ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000004334b4 : pop r10 ; ret
0x00000000004a3e4f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000040ab28 : pop r12 ; jmp rax
0x000000000044a3bb : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x0000000000458b0f : pop r12 ; mov rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000401a40 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x0000000000401bf9 : pop r12 ; mov rax, rdi ; pop r13 ; ret
0x000000000046745d : pop r12 ; pop r13 ; jmp rax
0x000000000045c188 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000045fc08 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000412cea : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004005cb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401664 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000463058 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000401782 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004079a4 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004019cd : pop r12 ; pop r13 ; ret
0x0000000000400422 : pop r12 ; ret
0x000000000045a987 : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000487229 : pop r13 ; jmp 0x412a09
0x000000000046745f : pop r13 ; jmp rax
0x000000000044a2ed : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x000000000045c18a : pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000045fc0a : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x00000000004707fb : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000412cec : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004005cd : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401666 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000046305a : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000401784 : pop r13 ; pop r14 ; ret
0x00000000004079a6 : pop r13 ; pop rbp ; ret
0x00000000004019cf : pop r13 ; ret
0x0000000000473123 : pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000004087fb : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x0000000000462e19 : pop r14 ; mov eax, 1 ; pop r15 ; ret
0x000000000046e262 : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000046bb72 : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000004707fd : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000412cee : pop r14 ; pop r15 ; jmp rax
0x00000000004005cf : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401668 : pop r14 ; pop r15 ; ret
0x000000000046305c : pop r14 ; pop rbp ; ret
0x0000000000401786 : pop r14 ; ret
0x00000000004707ff : pop r15 ; fmulp st(1) ; ret
0x0000000000412cf0 : pop r15 ; jmp rax
0x00000000004005d1 : pop r15 ; pop rbp ; ret
0x000000000040166a : pop r15 ; ret
0x0000000000474aa6 : pop r8 ; add rdx, rcx ; jmp 0x474a3b
0x000000000040e1be : pop r8 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000046240b : pop rax ; add byte ptr [rax], al ; jmp 0x4623df
0x0000000000452915 : pop rax ; add ch, cl ; retf -0x2a
0x0000000000482153 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000046d16b : pop rax ; add eax, 0xc7480000 ; ret
0x0000000000474aa7 : pop rax ; add rdx, rcx ; jmp 0x474a3a
0x00000000004a8724 : pop rax ; cmp dh, dh ; jmp qword ptr [rdx]
0x000000000041084a : pop rax ; mov eax, 1 ; jmp 0x41081b
0x000000000041072c : pop rax ; or byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be40], al ; ret
0x000000000040e1bf : pop rax ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000431c3d : pop rax ; ret
0x00000000004a3da3 : pop rax ; retf
0x00000000004447e2 : pop rax ; retf -1
0x00000000004af828 : pop rax ; sar dl, 1 ; call rax
0x00000000004a5809 : pop rax ; std ; inc eax ; std ; jmp qword ptr [rax]
0x000000000047fd82 : pop rax ; sub byte ptr [rax + 0x39], cl ; ret
0x000000000043250f : pop rbp ; add byte ptr es:[rax], al ; ret
0x0000000000433695 : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x00000000004a3845 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000048722a : pop rbp ; jmp 0x412a08
0x0000000000433fa7 : pop rbp ; jmp qword ptr [rdi]
0x0000000000412511 : pop rbp ; jmp rax
0x0000000000400f63 : pop rbp ; mov byte ptr [rip + 0x2b4c15], 1 ; ret
0x000000000044a2ee : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x0000000000407fe4 : pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000045c18b : pop rbp ; mov eax, edx ; pop r14 ; ret
0x0000000000400ef1 : pop rbp ; mov edi, 0x6b5b70 ; jmp rax
0x0000000000467459 : pop rbp ; mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x0000000000420839 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000045fc0b : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x00000000004816e9 : pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000400f2e : pop rbp ; mov rsi, rax ; mov edi, 0x6b5b70 ; jmp rdx
0x00000000004a21a0 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x00000000004129d3 : pop rbp ; pop r12 ; jmp rax
0x0000000000401a3f : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x0000000000401bf8 : pop rbp ; pop r12 ; mov rax, rdi ; pop r13 ; ret
0x000000000045c187 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x0000000000412ce9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000401663 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401781 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004019cc : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400421 : pop rbp ; pop r12 ; ret
0x000000000046e261 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000046bb71 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000004707fc : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000412ced : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004005ce : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401667 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000046305b : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000401785 : pop rbp ; pop r14 ; ret
0x00000000004079a7 : pop rbp ; pop rbp ; ret
0x0000000000474618 : pop rbp ; pop rbx ; ret
0x00000000004005d3 : pop rbp ; ret
0x0000000000485e9f : pop rbp ; retf
0x000000000047e495 : pop rbp ; sar rax, 3 ; pop r12 ; ret
0x000000000045b008 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040b301 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000004101cd : pop rbx ; add byte ptr [r8], al ; pop rbx ; ret
0x00000000004ac035 : pop rbx ; add byte ptr [rax], al ; sub byte ptr [rbp - 8], ch ; call qword ptr [rdx]
0x0000000000436942 : pop rbx ; and bl, ch ; retf 0x2e66
0x00000000004a1198 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000430c4f : pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000430c7f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a1196 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004595d3 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474b7e : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000474441 : pop rbx ; idiv bh ; dec ecx ; ret
0x0000000000474f07 : pop rbx ; imul eax, dword ptr [rax], 0x48 ; add esp, 8 ; ret
0x00000000004815da : pop rbx ; jmp rax
0x000000000043098e : pop rbx ; lea rax, qword ptr [r8 + 1] ; pop rbp ; ret
0x000000000040927c : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000046881d : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000430ce0 : pop rbx ; mov eax, eax ; ret
0x0000000000407b45 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000445fe2 : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000467e76 : pop rbx ; mov eax, edx ; pop rbp ; ret
0x000000000046a49a : pop rbx ; mov edi, 0x6b5140 ; jmp rax
0x00000000004864e8 : pop rbx ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000040aaf3 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040c60d : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000459c77 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004686ae : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000004a7b04 : pop rbx ; or dh, dh ; jmp qword ptr [rdx]
0x0000000000463057 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004079a3 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000433694 : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000412510 : pop rbx ; pop rbp ; jmp rax
0x0000000000407fe3 : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000467458 : pop rbx ; pop rbp ; mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x0000000000420838 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000004816e8 : pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x00000000004129d2 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000401a3e : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x0000000000401bf7 : pop rbx ; pop rbp ; pop r12 ; mov rax, rdi ; pop r13 ; ret
0x0000000000401780 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004019cb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400420 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401b66 : pop rbx ; pop rbp ; ret
0x000000000040b300 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000405850 : pop rbx ; ret
0x00000000004a4480 : pop rbx ; ret 0x6f9
0x00000000004a195d : pop rbx ; retf
0x0000000000434a61 : pop rbx ; shl eax, cl ; pop rbp ; ret
0x000000000045c9f8 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000474dcf : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x24252c] ; jmp rax
0x00000000004abe75 : pop rcx ; add byte ptr [rax], al ; sbb byte ptr [rsi - 8], ah ; jmp qword ptr [rbx]
0x00000000004abe8d : pop rcx ; add byte ptr [rax], al ; xor byte ptr [rsi - 8], ah ; call qword ptr [rdi]
0x000000000047060e : pop rcx ; add eax, 0x30414 ; jmp 0x4705df
0x0000000000475414 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000481a77 : pop rcx ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000043e00c : pop rcx ; imul eax, dword ptr [rax], 0x48 ; test eax, eax ; je 0x43e01e ; call rax
0x00000000004873ff : pop rcx ; imul eax, dword ptr [rax], 0x48 ; test eax, eax ; je 0x487411 ; call rax
0x00000000004ac3af : pop rcx ; ret
0x0000000000423a48 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000041f64d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000481c03 : pop rdi ; and eax, dword ptr [rax] ; ret
0x0000000000470800 : pop rdi ; fmulp st(1) ; ret
0x0000000000425469 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000425279 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a373e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000412cf1 : pop rdi ; jmp rax
0x00000000004a2701 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000004606b4 : pop rdi ; mov rax, r9 ; ret
0x0000000000425099 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000424ec9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000424fc5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000424f11 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004005d2 : pop rdi ; pop rbp ; ret
0x000000000040166b : pop rdi ; ret
0x00000000004affac : pop rdi ; sti ; cli ; jmp qword ptr [rdx]
0x000000000040b007 : pop rdx ; cdqe ; ret
0x000000000046b3f7 : pop rdx ; imul eax, dword ptr [rax], 0x48 ; add esp, 8 ; ret
0x00000000004ac33c : pop rdx ; jb 0x4ac33a ; jmp qword ptr [rdx]
0x00000000004a3321 : pop rdx ; je 0x4a32eb ; ret 0xacfc
0x00000000004a9d8c : pop rdx ; jle 0x4a9d88 ; jmp qword ptr [rdx]
0x000000000048a52f : pop rdx ; jo 0x48a55b ; stc ; call qword ptr [rax]
0x00000000004a3433 : pop rdx ; leave ; retf
0x00000000004a676c : pop rdx ; mov dh, 0xf5 ; jmp qword ptr [rdx]
0x00000000004a42e7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x00000000004334b3 : pop rdx ; pop r10 ; ret
0x000000000041250f : pop rdx ; pop rbx ; pop rbp ; jmp rax
0x000000000048a52e : pop rdx ; pop rdx ; jo 0x48a55c ; stc ; call qword ptr [rax]
0x000000000048a52d : pop rdx ; pop rdx ; pop rdx ; jo 0x48a55d ; stc ; call qword ptr [rax]
0x000000000048a52c : pop rdx ; pop rdx ; pop rdx ; pop rdx ; jo 0x48a55e ; stc ; call qword ptr [rax]
0x000000000048a52b : pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; jo 0x48a55f ; stc ; call qword ptr [rax]
0x000000000048a52a : pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; jo 0x48a560 ; stc ; call qword ptr [rax]
0x00000000004334d9 : pop rdx ; pop rsi ; ret
0x00000000004334b5 : pop rdx ; ret
0x00000000004a3303 : pop rdx ; retf
0x00000000004aff24 : pop rdx ; sti ; cli ; jmp qword ptr [rdx]
0x00000000004a3e50 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000422254 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42222a
0x00000000004222d2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x4222a8
0x0000000000422764 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42273a
0x00000000004227e2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x4227b8
0x000000000041f54e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000473124 : pop rsi ; idiv r9 ; pop r15 ; ret
0x00000000004afb04 : pop rsi ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004087fc : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x0000000000462e1a : pop rsi ; mov eax, 1 ; pop r15 ; ret
0x000000000046e263 : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000046bb73 : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000420055 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004707fe : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x0000000000412cef : pop rsi ; pop r15 ; jmp rax
0x00000000004005d0 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401669 : pop rsi ; pop r15 ; ret
0x000000000046305d : pop rsi ; pop rbp ; ret
0x0000000000401787 : pop rsi ; ret
0x000000000041d0e0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004ac16d : pop rsp ; add byte ptr [rax], al ; loopne 0x4ac1e9 ; clc ; call qword ptr [rcx]
0x00000000004ac1fd : pop rsp ; add byte ptr [rax], al ; nop ; jb 0x4ac201 ; jmp qword ptr [rdi]
0x000000000041dde0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000410e35 : pop rsp ; and al, 0x20 ; call rax
0x00000000004abcb9 : pop rsp ; clc ; call qword ptr [rbx]
0x00000000004abca1 : pop rsp ; clc ; jmp qword ptr [rdi]
0x0000000000433fa0 : pop rsp ; jmp qword ptr [rdi]
0x000000000040ab29 : pop rsp ; jmp rax
0x000000000046833c : pop rsp ; jrcxz 0x46838d ; add al, ch ; retf
0x000000000044a3bc : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x0000000000458b10 : pop rsp ; mov rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000401a41 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x0000000000401bfa : pop rsp ; mov rax, rdi ; pop r13 ; ret
0x00000000004b0974 : pop rsp ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; sbb byte ptr [rsi - 5], cl ; call rdx
0x0000000000416650 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046745e : pop rsp ; pop r13 ; jmp rax
0x000000000045c189 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000045fc09 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x00000000004707fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000412ceb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004005cc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401665 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000463059 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000401783 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004079a5 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004019ce : pop rsp ; pop r13 ; ret
0x00000000004abe74 : pop rsp ; pop rcx ; add byte ptr [rax], al ; sbb byte ptr [rsi - 8], ah ; jmp qword ptr [rbx]
0x0000000000400423 : pop rsp ; ret
0x0000000000472ee9 : pop rsp ; retf 0x4df0
0x00000000004a34a7 : pop rsp ; sbb ebp, ebx ; retf
0x000000000045a988 : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000414ab5 : popfq ; add dword ptr [rax], eax ; ret
0x00000000004ac90d : popfq ; clc ; jmp qword ptr [rdx]
0x00000000004a342c : popfq ; jrcxz 0x4a33f1 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004125df : popfq ; mov ebp, 0xc031ffff ; pop rbx ; ret
0x0000000000430ba9 : popfq ; ret 0xea81
0x00000000004a41e2 : popfq ; retf -0x21b1
0x0000000000477ca0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048a99d : popfq ; stc ; jmp rax
0x0000000000428452 : psllq mm1, qword ptr [r15] ; jg 0x42846d ; ret
0x0000000000428453 : psllq mm1, qword ptr [rdi] ; jg 0x42846c ; ret
0x000000000042e036 : psllq mm1, qword ptr [rdi] ; jg 0x42e04a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000042e035 : psllq mm1, qword ptr [rdi] ; jg 0x42e04b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000042e097 : psllq mm1, qword ptr [rdi] ; jg 0x42e0ac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004a3a35 : push -0x57d3205 ; call 0xffffffffab580535
0x00000000004ace05 : push -0x5d580000 ; clc ; call qword ptr [rsi]
0x000000000042e954 : push -0x9ffffff ; ret 0x7501
0x000000000040e2cb : push 0x1002a83 ; ret
0x00000000004a3235 : push 0x1b6e41b5 ; std ; retf
0x000000000048a43c : push 0x38fff8c2 ; ret
0x00000000004a3ec2 : push 0x6e ; ja 0x4a3e4d ; ret 0x48f
0x000000000040c054 : push 0x74c98548 ; and ecx, dword ptr [rax + 0x39] ; retf
0x00000000004a1a41 : push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004a188e : push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000049aa50 : push 0xcc ; add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x44
0x00000000004a2204 : push 0xd0 ; retf -0x18d2
0x00000000004a37a2 : push 0xfd4cbe ; retf 0xf64
0x000000000040b004 : push 2 ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x000000000048a54f : push qword ptr [rax + 0x32] ; stc ; call qword ptr [rax]
0x000000000048abc3 : push qword ptr [rax + 0x40fff9de] ; fdivp st(1) ; call rax
0x000000000048ac2b : push qword ptr [rax - 0x30] ; stc ; jmp rsi
0x000000000048af17 : push qword ptr [rax - 0x3f0005d0] ; xor dl, bh ; call rax
0x000000000048a82f : push qword ptr [rax - 0x5a] ; stc ; push qword ptr [rax] ; test al, 0xf9 ; call qword ptr [rax]
0x000000000048a8cf : push qword ptr [rax - 0x5b] ; stc ; push qword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call qword ptr [rax]
0x000000000048a95f : push qword ptr [rax - 0x62] ; stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x000000000048a973 : push qword ptr [rax - 0x70] ; stc ; inc eax ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x00000000004a5813 : push qword ptr [rax - 1] ; cld ; inc eax ; add ebp, edi ; call qword ptr [rax]
0x000000000048a8d3 : push qword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call qword ptr [rax]
0x000000000048ade3 : push qword ptr [rax] ; sar ecx, 1 ; jmp qword ptr [rax + 0x10fff9d0]
0x000000000048a817 : push qword ptr [rax] ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x000000000048a8bb : push qword ptr [rax] ; stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x000000000048a833 : push qword ptr [rax] ; test al, 0xf9 ; call qword ptr [rax]
0x000000000048abf7 : push qword ptr [rax] ; xlatb ; stc ; jmp qword ptr [rax + 0x20fff9d6]
0x00000000004302d8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000432d42 : push qword ptr [rbp + 0xb] ; ret
0x000000000040930b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000040cc36 : push qword ptr [rbp + rcx - 0x18] ; ret 0x5d
0x000000000040cd01 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000043383c : push qword ptr [rbp - 7] ; nop ; xor eax, eax ; leave ; ret
0x000000000040ccb3 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000048ab5f : push qword ptr [rbx + rbx*8 - 0x24bb0007] ; stc ; call rsp
0x000000000040a22e : push qword ptr [rbx + rcx - 0x18] ; retf 0x87
0x000000000040892e : push qword ptr [rbx + rcx - 0x18] ; retf 0xa0
0x000000000048a713 : push qword ptr [rcx + 0x41fff988] ; mov ecx, edi ; call rcx
0x0000000000412cd7 : push qword ptr [rcx] ; imul cl ; retf
0x000000000044e1fb : push qword ptr [rcx] ; leave ; jmp 0x44acbd
0x0000000000409764 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000452cb2 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x00000000004540f3 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x00000000004124b2 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004319ea : push qword ptr [rdi + 0x17] ; ret
0x0000000000431a39 : push qword ptr [rdi + 0x18] ; ret
0x000000000046009f : push qword ptr [rdi + 0x1a] ; ret
0x000000000043f7cc : push qword ptr [rdi + 0x1e] ; ret
0x0000000000431ba7 : push qword ptr [rdi + 0x32] ; ret
0x000000000046012e : push qword ptr [rdi + 0x35] ; add rsp, 0x70 ; pop rbx ; ret
0x000000000046034c : push qword ptr [rdi + 1] ; ret
0x000000000043fa45 : push qword ptr [rdi + 2] ; ret
0x000000000045fc6d : push qword ptr [rdi + rbp - 0x77] ; ret 0xe283
0x000000000048aa97 : push qword ptr [rdx + 0x42fff9dc] ; fdiv st(1), st(0) ; call rdx
0x0000000000474a53 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x000000000048a75b : push qword ptr [rsi + 0x46fff989] ; mov bh, cl ; call rsi
0x000000000048a9f3 : push qword ptr [rsi + 0x46fff9e0] ; loopne 0x48a9fc ; call rsi
0x000000000048a767 : push qword ptr [rsi - 0x75] ; stc ; call qword ptr [rsi]
0x000000000045fbac : push r12 ; push rbp ; push rbx ; mov rbx, rsi ; syscall
0x000000000045fbaa : push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; syscall
0x000000000040c49b : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a18ec : push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004108ab : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000045a06a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040d491 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000467ee4 : push rax ; add al, 0x48 ; cmp edx, ecx ; jne 0x467ea2 ; mov eax, dword ptr [rdx] ; ret
0x000000000047761d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040c49c : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045e291 : push rax ; add dword ptr [rax + 0x39], ecx ; retf -0x378e
0x0000000000432e7a : push rax ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x000000000040b17b : push rax ; add ecx, ebp ; retf
0x00000000004a57cc : push rax ; and bh, ch ; call qword ptr [rax]
0x00000000004396bd : push rax ; call rax
0x00000000004ab9c9 : push rax ; clc ; call qword ptr [rax]
0x000000000048afa7 : push rax ; cli ; call qword ptr [rax]
0x00000000004595fb : push rax ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000048a850 : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax]
0x0000000000448c48 : push rax ; dec dword ptr [rax + 0x29] ; ror byte ptr [rax + 0x29], 1 ; retf -0x8b8
0x0000000000439b4f : push rax ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x00000000004a871f : push rax ; idiv bh ; sbb al, 0xd ; pop rax ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000004a8767 : push rax ; idiv bh ; sbb al, 0xd ; push rcx ; cmp dh, dh ; jmp qword ptr [rdx]
0x0000000000471f65 : push rax ; jmp 0x471f35
0x000000000046b68c : push rax ; jmp qword ptr [rax]
0x00000000004a195a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000048a8a0 : push rax ; lodsd eax, dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000048a81f : push rax ; lodsd eax, dword ptr [rsi] ; stc ; jmp rax
0x000000000043b652 : push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x00000000004391a8 : push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000463a2a : push rax ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047f919 : push rax ; or byte ptr [rbp + 0x440f4cd2], al ; ret
0x0000000000443198 : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; retf -0x427d
0x0000000000444421 : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; retf
0x000000000048a5bb : push rax ; or cl, bh ; inc dword ptr [rax] ; or edi, ecx ; call qword ptr [rax]
0x000000000041057a : push rax ; or dh, dh ; ret 0x7404
0x0000000000410596 : push rax ; or dh, dh ; ret 0xf04
0x000000000041655c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487240 : push rax ; ret
0x000000000049aa40 : push rax ; retf
0x000000000040d486 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000045a60a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004a57f5 : push rax ; std ; call qword ptr [rax]
0x000000000048a8db : push rax ; stosb byte ptr [rdi], al ; stc ; call rax
0x000000000048a91c : push rax ; stosb byte ptr [rdi], al ; stc ; inc dword ptr [rax - 0x54] ; stc ; call qword ptr [rax]
0x000000000048a83b : push rax ; stosd dword ptr [rdi], eax ; stc ; call rax
0x000000000048a814 : push rax ; test al, 0xf9 ; push qword ptr [rax] ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x000000000048a8b8 : push rax ; test eax, 0xab30fff9 ; stc ; call qword ptr [rax]
0x000000000048adb4 : push rax ; xlatb ; stc ; call rax
0x000000000040ccfd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004a18ed : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000048af27 : push rax ; xor dl, bh ; inc dword ptr [rax] ; xor edx, edi ; call qword ptr [rax]
0x000000000048af7f : push rax ; xor eax, 0x3600fffa ; cli ; jmp qword ptr [rax]
0x00000000004abc29 : push rbp ; clc ; jmp rax
0x00000000004a89ee : push rbp ; idiv dil ; sbb al, 0xd ; mov dword ptr [rbx - 0xa], eax ; jmp qword ptr [rdx]
0x0000000000478de8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041168b : push rbp ; or byte ptr [rax - 0x77], cl ; retf
0x00000000004116b0 : push rbp ; or dh, dh ; ret 0x7502
0x000000000045fbab : push rbp ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; syscall
0x000000000045fbae : push rbp ; push rbx ; mov rbx, rsi ; syscall
0x000000000045dab1 : push rbp ; ret 0x6348
0x000000000045dc45 : push rbp ; ret 0xf41
0x000000000045aff1 : push rbp ; ror byte ptr [rcx + rcx*4 - 0x11], 0x45 ; xor eax, eax ; call r12
0x00000000004a5801 : push rbp ; std ; call qword ptr [rax + 0x10fffd56]
0x000000000041975a : push rbp ; xor rax, rax ; ret
0x0000000000401196 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000474e50 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404aeb : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000463fd9 : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041982a : push rbx ; add dword ptr [rax], eax ; ret
0x0000000000485efd : push rbx ; and cl, ch ; ret 0xfffb
0x00000000004a3ad9 : push rbx ; call 0x4c146496
0x00000000004abb81 : push rbx ; clc ; call rcx
0x000000000040c576 : push rbx ; jbe 0x40c520 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000040b315 : push rbx ; mov rbx, rdx ; jne 0x40b327 ; pop rbx ; ret
0x000000000045fbaf : push rbx ; mov rbx, rsi ; syscall
0x0000000000458b69 : push rbx ; or al, 0xf6 ; ret 0x7404
0x000000000040dfaa : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000040c676 : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000040e649 : push rbx ; ret
0x0000000000436189 : push rbx ; ret 0xfffd
0x0000000000474a19 : push rbx ; retf
0x00000000004a57fd : push rbx ; std ; call qword ptr [rax]
0x000000000040a65f : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004a331c : push rbx ; xchg eax, edx ; jae 0x4a32fb ; push rsi ; pop rdx ; je 0x4a32f0 ; ret 0xacfc
0x00000000004ae6b4 : push rcx ; adc edi, edx ; jmp qword ptr [rdx]
0x0000000000401e0f : push rcx ; add al, 0xf ; retf -0x2d77
0x000000000045d316 : push rcx ; add eax, dword ptr [rdi + rcx + 0x48] ; retf -0x6c46
0x00000000004a25a5 : push rcx ; call qword ptr [rsi]
0x00000000004a876c : push rcx ; cmp dh, dh ; jmp qword ptr [rdx]
0x000000000046a49d : push rcx ; imul eax, dword ptr [rax], -1 ; loopne 0x46a504 ; ret
0x000000000046a49c : push rcx ; imul eax, dword ptr [rax], -1 ; loopne 0x46a505 ; ret
0x000000000046b5d1 : push rcx ; imul eax, dword ptr [rax], 0x48 ; add esp, 8 ; jmp rax
0x00000000004652a4 : push rcx ; imul eax, dword ptr [rax], 0x5b ; pop rbp ; jmp rax
0x00000000004a9dd4 : push rcx ; jg 0x4a9dd0 ; jmp qword ptr [rdx]
0x0000000000467f5b : push rcx ; mul dword ptr [rax + rax] ; add rsp, 8 ; ret
0x00000000004ab206 : push rcx ; ret
0x0000000000457ae1 : push rcx ; sti ; dec dword ptr [rcx - 0x73] ; dec dword ptr [r8 + 0x39] ; ret
0x000000000042e57a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000004285b9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000403a2c : push rdi ; add al, 0xf ; retf -0x57d
0x00000000004abcb5 : push rdi ; add byte ptr [rax], al ; clc ; pop rsp ; clc ; call qword ptr [rbx]
0x00000000004abc9d : push rdi ; add byte ptr [rax], al ; loopne 0x4abd04 ; clc ; jmp qword ptr [rdi]
0x00000000004abc25 : push rdi ; add byte ptr [rax], al ; mov byte ptr [rbp - 8], dl ; jmp rax
0x0000000000440b15 : push rdi ; add dword ptr [rsp + rsi*2], eax ; retf
0x000000000042e62c : push rdi ; add eax, 0xc478d48 ; ret
0x0000000000424d58 : push rdi ; clc ; ret
0x0000000000424ed0 : push rdi ; cld ; ret
0x00000000004259f7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427e99 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004602bf : push rdi ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x0000000000427e19 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427c6a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040c3d4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000427cfa : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044319c : push rdi ; or bl, ch ; retf -0x427d
0x000000000047460a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048155a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000474611 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000040347d : push rdi ; or byte ptr [rdi], cl ; test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; retf -0x74bb
0x0000000000444425 : push rdi ; or cl, ch ; retf
0x000000000042e810 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042316e : push rdi ; ret
0x000000000042320e : push rdi ; ret 0xff3
0x0000000000407146 : push rdi ; ret 0xffef
0x0000000000422d33 : push rdi ; retf
0x0000000000422db3 : push rdi ; retf -0x354e
0x000000000040369a : push rdi ; sbb byte ptr [rdi], cl ; retf -0x2d77
0x0000000000425bf7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042541a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004257f7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000460fa0 : push rdi ; sub dh, dh ; ret 0xf04
0x000000000045b71b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000045b27e : push rdx ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf
0x000000000047f6bf : push rdx ; or byte ptr [rbp + rcx*4 + 4], cl ; retf -0x74b8
0x00000000004a57f9 : push rdx ; std ; call qword ptr [rax + 0x10fffd53]
0x00000000004326d5 : push rsi ; adc byte ptr [rax - 0x77], cl ; jo 0x4326e9 ; ret
0x0000000000421e54 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004abb7d : push rsi ; add byte ptr [rax], al ; add byte ptr [rbx - 8], dl ; call rcx
0x000000000040eddd : push rsi ; add byte ptr [rax], al ; ret
0x0000000000428851 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004288c1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000042dfc5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435a65 : push rsi ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r15
0x00000000004287e1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000042df63 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000421e69 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000424e82 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004b2259 : push rsi ; cld ; call qword ptr [rax]
0x00000000004255f1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000425225 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000425405 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004255e5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000425045 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a3ec0 : push rsi ; cli ; push 0x6e ; ja 0x4a3e4f ; ret 0x48f
0x000000000042fe16 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000004a9dce : push rsi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; idiv bh ; sbb al, 0xd ; push rcx ; jg 0x4a9dd6 ; jmp qword ptr [rdx]
0x000000000048aa1c : push rsi ; fdiv st(1), st(0) ; jmp rsi
0x000000000042fe06 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000042fdd6 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000043270e : push rsi ; or byte ptr [rax - 0x77], cl ; jo 0x43272a ; ret
0x00000000004200dd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004a3320 : push rsi ; pop rdx ; je 0x4a32ec ; ret 0xacfc
0x00000000004a1266 : push rsi ; ret
0x000000000046103a : push rsi ; ret 0xf02
0x0000000000455e34 : push rsi ; retf -1
0x00000000004a5805 : push rsi ; std ; call qword ptr [rax]
0x000000000042fde6 : push rsi ; sub eax, edx ; ret
0x00000000004a18e8 : push rsi ; xchg eax, ebp ; jge 0x4a18cd ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000421e7e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046022f : push rsp ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x0000000000410e30 : push rsp ; and al, 0x28 ; mov dword ptr [rsp + 0x20], r11d ; call rax
0x00000000004747e0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000047479a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000411e69 : push rsp ; and al, 8 ; call 0x40e895
0x0000000000405957 : push rsp ; and al, 8 ; mov dword ptr [rsp + 4], esi ; call 0x4123e9
0x000000000048ab48 : push rsp ; fdivp st(1) ; jmp rsp
0x00000000004ace6c : push rsp ; imul eax, dword ptr [rax], 0xf8a77000 ; call qword ptr [rax]
0x00000000004b156c : push rsp ; mov al, 0 ; add byte ptr [rax - 0x5d], ah ; sti ; call qword ptr [rdx]
0x00000000004af16c : push rsp ; mov word ptr [rax], es ; add byte ptr [rax - 0x4a], dh ; cli ; call qword ptr [rax]
0x0000000000478ae9 : push rsp ; or eax, 0x894d0000 ; retf
0x00000000004ac16c : push rsp ; pop rsp ; add byte ptr [rax], al ; loopne 0x4ac1ea ; clc ; call qword ptr [rcx]
0x000000000045fbad : push rsp ; push rbp ; push rbx ; mov rbx, rsi ; syscall
0x00000000004104ec : push rsp ; ret
0x0000000000485d9d : push rsp ; ret 0x4910
0x000000000043798a : push rsp ; retf
0x00000000004b2f6c : push rsp ; retf 0
0x0000000000472e80 : push rsp ; retf 0x48f8
0x000000000048ad3c : push rsp ; salc ; stc ; call rsp
0x000000000048ad5c : push rsp ; sar cl, cl ; call rsp
0x000000000048ad54 : push rsp ; sar ecx, cl ; call rsp
0x00000000004a3aea : push rsp ; syscall
0x000000000041cda0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000411be1 : pushfq ; add al, bpl ; xchg eax, edi ; retf -1
0x00000000004ac7ed : pushfq ; clc ; jmp qword ptr [rdx]
0x000000000040bc7c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004b22b4 : pushfq ; mov ebp, 0x2f980000 ; cld ; call qword ptr [rax]
0x000000000041daa0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004abcb4 : pushfq ; push rdi ; add byte ptr [rax], al ; clc ; pop rsp ; clc ; call qword ptr [rbx]
0x0000000000444cfc : pushfq ; retf -1
0x000000000048a999 : pushfq ; stc ; call qword ptr [rax - 0x1f000663]
0x00000000004af8f0 : rcl ah, 1 ; cli ; jmp qword ptr [rdx]
0x000000000048aca8 : rcl al, cl ; stc ; inc dword ptr [rdx - 0x30] ; stc ; call rdx
0x000000000047639d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040b314 : rcl byte ptr [rbx + 0x48], cl ; mov ebx, edx ; jne 0x40b328 ; pop rbx ; ret
0x000000000048b6f8 : rcl byte ptr [rbx + rax*2], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4314
0x00000000004a3c31 : rcl byte ptr [rdi], cl ; retf
0x0000000000488b00 : rcl dh, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf
0x000000000041127d : rcl dword ptr [rip + 0x2a3565], -0x7d ; ret 0x8b01
0x00000000004a375a : rcl dword ptr [rsi + 0x27], cl ; retf -0x3f02
0x00000000004a331f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a32ed ; ret 0xacfc
0x00000000004a3759 : rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x00000000004a331b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a32f1 ; ret 0xacfc
0x000000000047bf0d : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000474617 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000004337c0 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000474b7d : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x000000000045ad79 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000408185 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000406e0e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048486b : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x000000000045fab4 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000004128ea : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000412481 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000475cad : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e00b : rcr byte ptr [rcx + 0x6b], 0 ; test rax, rax ; je 0x43e01f ; call rax
0x00000000004873fe : rcr byte ptr [rcx + 0x6b], 0 ; test rax, rax ; je 0x487412 ; call rax
0x00000000004a373d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004ae8d4 : rcr byte ptr [rdx], cl ; cli ; jmp qword ptr [rdx]
0x0000000000472f49 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a3a91 : rcr dword ptr [rcx], cl ; retf -0x4466
0x0000000000474d95 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x474da5 ; ret
0x00000000004002c9 : ret
0x0000000000400c85 : ret 0
0x000000000043f148 : ret 0x101
0x000000000046ef2c : ret 0x1075
0x000000000041080a : ret 0x110
0x00000000004745ec : ret 0x114d
0x0000000000495c68 : ret 0x12
0x000000000041216f : ret 0x1374
0x00000000004073bb : ret 0x13eb
0x000000000040dfae : ret 0x148
0x000000000040cd12 : ret 0x149
0x00000000004320cc : ret 0x14c
0x000000000040fd65 : ret 0x1589
0x0000000000409c2a : ret 0x169
0x000000000044458a : ret 0x16c
0x000000000041729a : ret 0x17
0x00000000004197c5 : ret 0x1876
0x0000000000485a71 : ret 0x19e8
0x00000000004a3c9a : ret 0x1ad4
0x00000000004a242d : ret 0x1b49
0x0000000000447a56 : ret 0x1b8
0x000000000045efa2 : ret 0x1be
0x00000000004976a0 : ret 0x1d4
0x0000000000497e38 : ret 0x1d5
0x000000000040944a : ret 0x1e
0x00000000004146ca : ret 0x1ed
0x00000000004128ca : ret 0x1f
0x0000000000447610 : ret 0x1f0f
0x000000000043f6cd : ret 0x200
0x0000000000456ade : ret 0x20e9
0x000000000046b75e : ret 0x2148
0x0000000000417018 : ret 0x2288
0x00000000004812ba : ret 0x2360
0x0000000000423372 : ret 0x2373
0x00000000004807e7 : ret 0x23e8
0x0000000000468edc : ret 0x24
0x0000000000475226 : ret 0x2429
0x00000000004630d2 : ret 0x250e
0x00000000004602ea : ret 0x256f
0x0000000000471fd0 : ret 0x25e9
0x0000000000411ff9 : ret 0x26
0x000000000045b516 : ret 0x2774
0x0000000000424b26 : ret 0x280f
0x00000000004197b5 : ret 0x2876
0x0000000000427a02 : ret 0x28d6
0x0000000000480bb7 : ret 0x28f5
0x000000000040e595 : ret 0x2948
0x000000000043983e : ret 0x294c
0x00000000004077c8 : ret 0x2975
0x000000000040bb32 : ret 0x29e9
0x000000000040855b : ret 0x2a
0x000000000041235a : ret 0x2a24
0x0000000000410e49 : ret 0x2a39
0x000000000040e2b2 : ret 0x2a83
0x0000000000407835 : ret 0x2b02
0x000000000045d6dc : ret 0x2b3c
0x0000000000436f70 : ret 0x2b49
0x000000000040281a : ret 0x2b52
0x0000000000430bb2 : ret 0x2b77
0x0000000000405408 : ret 0x2ce9
0x00000000004602e4 : ret 0x2d77
0x0000000000456cd0 : ret 0x2ee9
0x000000000047025a : ret 0x307
0x000000000043d0f2 : ret 0x3104
0x000000000046510b : ret 0x3110
0x000000000046d09c : ret 0x31e9
0x0000000000496b98 : ret 0x33
0x0000000000431b07 : ret 0x33e8
0x0000000000467ae1 : ret 0x33e9
0x0000000000403bc4 : ret 0x348
0x0000000000410a58 : ret 0x35e9
0x0000000000439ebd : ret 0x3672
0x0000000000408127 : ret 0x3675
0x00000000004a357a : ret 0x3827
0x00000000004197a5 : ret 0x3876
0x00000000004a1c06 : ret 0x38ae
0x0000000000474a1f : ret 0x38b
0x0000000000469a2c : ret 0x3901
0x000000000040359d : ret 0x3908
0x0000000000442f0f : ret 0x3944
0x000000000044c1e5 : ret 0x3945
0x000000000045e7be : ret 0x3948
0x000000000043f51b : ret 0x3949
0x00000000004605cf : ret 0x394c
0x00000000004364dc : ret 0x3974
0x00000000004303f2 : ret 0x3a01
0x000000000042335b : ret 0x3a73
0x00000000004337b1 : ret 0x3b01
0x000000000040221e : ret 0x3ce8
0x000000000044f026 : ret 0x3ce9
0x0000000000411542 : ret 0x3d83
0x0000000000461c3a : ret 0x3f77
0x0000000000439317 : ret 0x4001
0x0000000000487ce8 : ret 0x401a
0x0000000000487da0 : ret 0x405d
0x000000000045d478 : ret 0x40e9
0x000000000040b8a2 : ret 0x4101
0x00000000004412c5 : ret 0x4108
0x0000000000442b69 : ret 0x4110
0x00000000004679c6 : ret 0x4118
0x00000000004170e0 : ret 0x4166
0x00000000004375ee : ret 0x41c3
0x0000000000421cea : ret 0x4266
0x000000000045d365 : ret 0x428d
0x000000000048b0f8 : ret 0x430c
0x0000000000431cf7 : ret 0x43e8
0x0000000000401c8a : ret 0x44
0x0000000000447676 : ret 0x4501
0x0000000000403bf7 : ret 0x4508
0x000000000040fe0f : ret 0x46
0x0000000000461e63 : ret 0x474
0x00000000004a2704 : ret 0x474c
0x0000000000435773 : ret 0x48
0x0000000000406d33 : ret 0x4801
0x000000000041fec1 : ret 0x4802
0x000000000041ff9d : ret 0x4803
0x000000000041ff85 : ret 0x4804
0x000000000041ff6d : ret 0x4805
0x000000000041ff55 : ret 0x4806
0x0000000000416fa3 : ret 0x4808
0x000000000041268d : ret 0x4810
0x000000000043d2d0 : ret 0x4811
0x000000000041159e : ret 0x4817
0x0000000000465b72 : ret 0x4818
0x0000000000433e70 : ret 0x4838
0x0000000000421bf6 : ret 0x4840
0x000000000045fde5 : ret 0x4864
0x000000000047101b : ret 0x48b
0x0000000000434291 : ret 0x48c1
0x00000000004170bf : ret 0x48c3
0x000000000045d352 : ret 0x48d
0x0000000000402de2 : ret 0x48e8
0x0000000000435761 : ret 0x48e9
0x00000000004a3ec6 : ret 0x48f
0x000000000045f83b : ret 0x49
0x0000000000402b86 : ret 0x4901
0x00000000004203c1 : ret 0x4902
0x00000000004450ea : ret 0x4908
0x000000000045f4e2 : ret 0x4909
0x0000000000416302 : ret 0x4910
0x0000000000465a0d : ret 0x4918
0x00000000004498db : ret 0x4964
0x000000000046961f : ret 0x49e5
0x000000000049eb20 : ret 0x49ea
0x000000000049f410 : ret 0x49ed
0x00000000004b1fd9 : ret 0x4b38
0x0000000000420329 : ret 0x4c01
0x0000000000420121 : ret 0x4c02
0x0000000000464c54 : ret 0x4c08
0x0000000000447087 : ret 0x4c30
0x000000000040e47f : ret 0x4d07
0x00000000004a3927 : ret 0x4e27
0x000000000043266f : ret 0x4e74
0x0000000000460ff1 : ret 0x5076
0x0000000000423344 : ret 0x5173
0x0000000000463bcb : ret 0x5385
0x0000000000485efb : ret 0x5389
0x000000000046c159 : ret 0x53c
0x000000000047e33f : ret 0x543a
0x0000000000474798 : ret 0x5489
0x00000000004a1b8c : ret 0x5508
0x000000000047d8e1 : ret 0x5589
0x0000000000447b75 : ret 0x55e8
0x00000000004a3e58 : ret 0x5803
0x0000000000459e2d : ret 0x5877
0x0000000000410e09 : ret 0x58b
0x00000000004a1860 : ret 0x591c
0x00000000004a25c7 : ret 0x5ae4
0x0000000000462971 : ret 0x5c41
0x000000000040cc3a : ret 0x5d
0x000000000042de2a : ret 0x5d0
0x00000000004097d4 : ret 0x60e9
0x00000000004a42f2 : ret 0x62c1
0x000000000040e119 : ret 0x6348
0x000000000044a2a4 : ret 0x6349
0x0000000000419732 : ret 0x6620
0x0000000000414c33 : ret 0x66c3
0x0000000000418b3a : ret 0x672
0x000000000044132e : ret 0x6775
0x00000000004a187f : ret 0x67b2
0x000000000045d2e8 : ret 0x67ba
0x000000000043162f : ret 0x6b8
0x00000000004a4481 : ret 0x6f9
0x00000000004693bf : ret 0x7376
0x0000000000419f75 : ret 0x7401
0x0000000000411691 : ret 0x7402
0x000000000041057d : ret 0x7404
0x000000000040db4e : ret 0x7408
0x0000000000409eb9 : ret 0x7420
0x00000000004470a0 : ret 0x7450
0x000000000042e959 : ret 0x7501
0x00000000004116b3 : ret 0x7502
0x0000000000419f70 : ret 0x7504
0x000000000042fd94 : ret 0x7508
0x000000000042e92b : ret 0x7510
0x0000000000419f6b : ret 0x7518
0x000000000042e938 : ret 0x7520
0x000000000042e945 : ret 0x7540
0x0000000000460241 : ret 0x7577
0x0000000000404d5a : ret 0x75e9
0x0000000000422232 : ret 0x7677
0x0000000000436f64 : ret 0x774
0x000000000043d3d3 : ret 0x7b73
0x0000000000412442 : ret 0x7b74
0x000000000043789e : ret 0x7b8
0x000000000045371f : ret 0x7be9
0x00000000004196c2 : ret 0x7e20
0x0000000000414efc : ret 0x7f10
0x000000000044dce3 : ret 0x7fe9
0x000000000042610e : ret 0x80
0x00000000004160d9 : ret 0x8000
0x0000000000404f2c : ret 0x8001
0x000000000045f7cb : ret 0x8010
0x0000000000464765 : ret 0x804
0x000000000046fdb2 : ret 0x8136
0x00000000004724a0 : ret 0x8141
0x0000000000448b08 : ret 0x8166
0x000000000048136c : ret 0x8175
0x000000000047eab8 : ret 0x8188
0x0000000000452219 : ret 0x81e9
0x000000000040dba1 : ret 0x820f
0x000000000040b69f : ret 0x8301
0x00000000004009f6 : ret 0x8304
0x000000000043e36a : ret 0x8308
0x0000000000421e00 : ret 0x830f
0x000000000043f260 : ret 0x8310
0x000000000040046a : ret 0x8341
0x0000000000419482 : ret 0x8348
0x0000000000410851 : ret 0x8349
0x0000000000451bcc : ret 0x8401
0x000000000044a296 : ret 0x8404
0x0000000000400cd2 : ret 0x840f
0x000000000048365e : ret 0x8440
0x000000000040e534 : ret 0x8441
0x000000000040a485 : ret 0x8445
0x000000000044a365 : ret 0x8504
0x000000000040f19a : ret 0x850f
0x0000000000432665 : ret 0x8545
0x000000000043d7ba : ret 0x8548
0x0000000000419c62 : ret 0x854d
0x0000000000447931 : ret 0x858b
0x0000000000401360 : ret 0x860f
0x0000000000412d3e : ret 0x870f
0x00000000004a119e : ret 0x871e
0x00000000004197d5 : ret 0x876
0x00000000004499af : ret 0x8801
0x000000000043e857 : ret 0x8901
0x0000000000409ca1 : ret 0x8908
0x0000000000443915 : ret 0x8910
0x0000000000456521 : ret 0x8941
0x00000000004121f7 : ret 0x8944
0x0000000000465c92 : ret 0x8945
0x0000000000407eb9 : ret 0x8948
0x0000000000409b02 : ret 0x8949
0x0000000000401815 : ret 0x894c
0x000000000040e483 : ret 0x894d
0x0000000000473a8b : ret 0x894e
0x0000000000411284 : ret 0x8b01
0x0000000000458ce2 : ret 0x8b04
0x0000000000460473 : ret 0x8b05
0x00000000004a39ce : ret 0x8b36
0x000000000043f1d2 : ret 0x8b41
0x000000000046e99c : ret 0x8b42
0x0000000000470615 : ret 0x8b44
0x0000000000402d0d : ret 0x8b48
0x0000000000473a0e : ret 0x8b4a
0x0000000000402d67 : ret 0x8b4c
0x000000000046609f : ret 0x8be8
0x000000000046c35a : ret 0x8c0f
0x0000000000447d5b : ret 0x8d0f
0x000000000046ac75 : ret 0x8d45
0x00000000004115fd : ret 0x8d48
0x0000000000402d80 : ret 0x8d49
0x00000000004099a5 : ret 0x8d4a
0x0000000000436dcb : ret 0x8d4c
0x00000000004659c5 : ret 0x8d4e
0x0000000000441bbe : ret 0x8d89
0x00000000004479c7 : ret 0x8e0f
0x000000000040ee8e : ret 0x8e74
0x0000000000401643 : ret 0x900
0x0000000000414b15 : ret 0x90c3
0x0000000000431aa7 : ret 0x93e8
0x0000000000411a0e : ret 0x948
0x000000000045b7b8 : ret 0x94c
0x0000000000474e4b : ret 0x950f
0x0000000000452cba : ret 0x9529
0x00000000004a27f3 : ret 0x9576
0x0000000000466594 : ret 0x96e8
0x000000000040104a : ret 0x9848
0x000000000047e19b : ret 0x9e0f
0x000000000045649a : ret 0x9f
0x000000000040cea6 : ret 0xa
0x0000000000472e61 : ret 0xa074
0x00000000004a24e3 : ret 0xa514
0x000000000046ef22 : ret 0xa77
0x000000000041128d : ret 0xa7e
0x0000000000483031 : ret 0xa8
0x00000000004a2967 : ret 0xac65
0x00000000004a3324 : ret 0xacfc
0x000000000045073e : ret 0xb
0x000000000045e37f : ret 0xb4be
0x0000000000410126 : ret 0xb4e9
0x00000000004023d1 : ret 0xb60f
0x000000000043af65 : ret 0xb70f
0x000000000047feaa : ret 0xb76
0x00000000004313e0 : ret 0xb8
0x000000000044aef3 : ret 0xb848
0x000000000045f4a2 : ret 0xb8e9
0x00000000004a282e : ret 0xb9b9
0x000000000043f8f9 : ret 0xba41
0x000000000046786f : ret 0xbb01
0x0000000000483ee6 : ret 0xbc80
0x00000000004a2584 : ret 0xbe57
0x0000000000495468 : ret 0xc
0x00000000004439dd : ret 0xc0
0x0000000000415f99 : ret 0xc000
0x0000000000401343 : ret 0xc031
0x000000000046793a : ret 0xc083
0x0000000000405b00 : ret 0xc085
0x0000000000447a21 : ret 0xc101
0x0000000000400f15 : ret 0xc148
0x00000000004309ce : ret 0xc183
0x0000000000423214 : ret 0xc2b2
0x0000000000430c21 : ret 0xc35b
0x00000000004a0242 : ret 0xc4c3
0x00000000004a2138 : ret 0xc4ff
0x00000000004607f0 : ret 0xc601
0x000000000045d24f : ret 0xc639
0x000000000042ae30 : ret 0xc748
0x000000000046fdbc : ret 0xc801
0x000000000046ab77 : ret 0xc829
0x0000000000419d99 : ret 0xc88
0x0000000000481f11 : ret 0xc984
0x000000000043f461 : ret 0xc9e8
0x0000000000416f71 : ret 0xc9ff
0x00000000004142a4 : ret 0xcb8
0x00000000004004d8 : ret 0xcbeb
0x00000000004a1bca : ret 0xcca7
0x00000000004a3cad : ret 0xcd11
0x0000000000404a1f : ret 0xce80
0x0000000000433c8e : ret 0xd009
0x0000000000433254 : ret 0xd029
0x000000000046ab41 : ret 0xd089
0x000000000045bfc9 : ret 0xd0e9
0x000000000047e12b : ret 0xd138
0x000000000045d25c : ret 0xd269
0x0000000000409739 : ret 0xd284
0x000000000046bb95 : ret 0xd348
0x0000000000431b67 : ret 0xd3e8
0x000000000040ee47 : ret 0xd575
0x000000000045d0ad : ret 0xd7e9
0x000000000047dcec : ret 0xd889
0x00000000004a3745 : ret 0xd8f
0x0000000000433663 : ret 0xda75
0x00000000004330a0 : ret 0xdae8
0x0000000000407d08 : ret 0xdaf7
0x00000000004a3826 : ret 0xdcd9
0x00000000004a27a2 : ret 0xde5d
0x00000000004a1531 : ret 0xde9e
0x000000000047eb8e : ret 0xdf75
0x000000000043d4ba : ret 0xdf89
0x0000000000415e59 : ret 0xe000
0x000000000042e8e9 : ret 0xe074
0x000000000040aa92 : ret 0xe0ba
0x0000000000441b7d : ret 0xe183
0x00000000004575b9 : ret 0xe1e9
0x00000000004349b2 : ret 0xe1eb
0x00000000004092a5 : ret 0xe274
0x000000000040616c : ret 0xe281
0x00000000004308f6 : ret 0xe283
0x000000000046f9e7 : ret 0xe6e9
0x00000000004a3946 : ret 0xe71f
0x00000000004608b8 : ret 0xe75
0x0000000000465153 : ret 0xe76
0x00000000004853ea : ret 0xe783
0x0000000000400e24 : ret 0xe8c1
0x0000000000458a56 : ret 0xe902
0x0000000000417006 : ret 0xe908
0x000000000041cc06 : ret 0xe910
0x00000000004a1ca7 : ret 0xe970
0x000000000047e19e : ret 0xe9c1
0x0000000000430baa : ret 0xea81
0x0000000000441b76 : ret 0xeac0
0x0000000000400cc9 : ret 0xeac1
0x0000000000450100 : ret 0xeb01
0x0000000000458940 : ret 0xeb02
0x0000000000400a2b : ret 0xeb04
0x0000000000453249 : ret 0xeb08
0x0000000000416326 : ret 0xeb10
0x0000000000407262 : ret 0xeb75
0x00000000004a4458 : ret 0xec2
0x0000000000480b79 : ret 0xec75
0x000000000046ce90 : ret 0xed75
0x000000000047009c : ret 0xee8
0x00000000004a40fa : ret 0xef32
0x0000000000434cf5 : ret 0xefc1
0x0000000000495868 : ret 0xf
0x0000000000415d19 : ret 0xf000
0x0000000000402387 : ret 0xf01
0x000000000040d01b : ret 0xf02
0x0000000000410599 : ret 0xf04
0x000000000047eaa7 : ret 0xf08
0x0000000000414eb2 : ret 0xf10
0x00000000004804f4 : ret 0xf201
0x000000000045d3bb : ret 0xf275
0x0000000000482af2 : ret 0xf304
0x0000000000459603 : ret 0xf40
0x000000000045dc46 : ret 0xf41
0x0000000000430f07 : ret 0xf44
0x0000000000437faf : ret 0xf48
0x00000000004490cb : ret 0xf49
0x0000000000407452 : ret 0xf4d
0x000000000045fc7e : ret 0xf631
0x000000000046a169 : ret 0xf641
0x0000000000414cb9 : ret 0xf66
0x00000000004a9a74 : ret 0xf665
0x00000000004307d8 : ret 0xf685
0x00000000004a97e6 : ret 0xf6ab
0x0000000000407099 : ret 0xf748
0x0000000000415bd9 : ret 0xf800
0x00000000004a1410 : ret 0xf869
0x000000000045cf19 : ret 0xf883
0x0000000000403e6e : ret 0xf889
0x000000000048713a : ret 0xf8b8
0x000000000048aa7c : ret 0xf9df
0x000000000046f618 : ret 0xfa81
0x00000000004aebce : ret 0xfaaa
0x00000000004464a4 : ret 0xfac1
0x000000000044be2a : ret 0xfb44
0x00000000004500ca : ret 0xfbcb
0x0000000000415a99 : ret 0xfc00
0x0000000000417169 : ret 0xfc3
0x000000000044f31a : ret 0xfc30
0x000000000043ff7a : ret 0xfd72
0x000000000040235a : ret 0xfdf
0x0000000000415959 : ret 0xfe00
0x000000000046b7f9 : ret 0xfeb8
0x00000000004469d8 : ret 0xfec1
0x0000000000415819 : ret 0xff00
0x0000000000427cc1 : ret 0xff2
0x0000000000421c1a : ret 0xff3
0x000000000048181a : ret 0xff35
0x000000000040074f : ret 0xff49
0x000000000043e80a : ret 0xff7b
0x00000000004156d9 : ret 0xff80
0x000000000040929e : ret 0xffb8
0x0000000000470779 : ret 0xffbf
0x0000000000415599 : ret 0xffc0
0x0000000000471c6f : ret 0xffc1
0x0000000000444c78 : ret 0xffc5
0x0000000000444a78 : ret 0xffc7
0x00000000004097e2 : ret 0xffd0
0x000000000040e205 : ret 0xffd8
0x0000000000415459 : ret 0xffe0
0x0000000000470527 : ret 0xffe6
0x000000000044c6b0 : ret 0xffe7
0x0000000000446bc7 : ret 0xffe8
0x000000000044812d : ret 0xffe9
0x0000000000407148 : ret 0xffef
0x0000000000415319 : ret 0xfff0
0x000000000044caf0 : ret 0xfff1
0x000000000046d9a7 : ret 0xfff3
0x000000000045ee6a : ret 0xfff6
0x0000000000482924 : ret 0xfff7
0x00000000004151d9 : ret 0xfff8
0x0000000000483a9a : ret 0xfff9
0x0000000000411e0a : ret 0xfffa
0x0000000000485f00 : ret 0xfffb
0x0000000000415099 : ret 0xfffc
0x000000000043618a : ret 0xfffd
0x0000000000401afe : ret 0xfffe
0x0000000000418af6 : ret 0xffff
0x00000000004061d3 : ret 1
0x000000000041987b : ret 2
0x0000000000422fd2 : ret 3
0x0000000000419899 : ret 4
0x0000000000400639 : ret 5
0x0000000000499464 : ret 6
0x0000000000470f19 : ret 7
0x00000000004198b5 : ret 8
0x000000000042f39a : ret 9
0x000000000041fb6a : retf
0x000000000040ff11 : retf -0x1142
0x000000000040dd9c : retf -0x118
0x0000000000445fd0 : retf -0x128b
0x000000000044a4b4 : retf -0x1401
0x00000000004a4161 : retf -0x1441
0x00000000004a196d : retf -0x147d
0x0000000000414e71 : retf -0x152d
0x00000000004a384c : retf -0x156f
0x00000000004054e3 : retf -0x167d
0x0000000000433d44 : retf -0x16f8
0x0000000000433cb4 : retf -0x16fc
0x0000000000433d04 : retf -0x16fe
0x0000000000433ce4 : retf -0x16ff
0x000000000046d60a : retf -0x17f
0x00000000004a2206 : retf -0x18d2
0x0000000000472a18 : retf -0x19
0x0000000000469737 : retf -0x198e
0x00000000004a289c : retf -0x1b6a
0x000000000043443a : retf -0x1c8b
0x0000000000483638 : retf -0x1d01
0x0000000000461c33 : retf -0x1d3f
0x000000000043a43a : retf -0x1d7d
0x00000000004051e9 : retf -0x1d7f
0x000000000040e392 : retf -0x1e7d
0x00000000004051d1 : retf -0x1e7f
0x00000000004a22be : retf -0x1eae
0x00000000004398df : retf -0x1f7d
0x0000000000419f1d : retf -0x1f8b
0x00000000004a2813 : retf -0x2081
0x00000000004521f2 : retf -0x21
0x00000000004a41e3 : retf -0x21b1
0x000000000040e60a : retf -0x248b
0x0000000000462850 : retf -0x2517
0x0000000000452918 : retf -0x2a
0x00000000004863d1 : retf -0x2c15
0x00000000004116c2 : retf -0x2c8a
0x0000000000401e12 : retf -0x2d77
0x0000000000430cd4 : retf -0x2dcf
0x00000000004a2546 : retf -0x2e35
0x00000000004051e2 : retf -0x2e77
0x000000000046b7be : retf -0x2f09
0x0000000000442991 : retf -0x2fc7
0x0000000000462632 : retf -0x3015
0x000000000044608d : retf -0x30c7
0x00000000004004d3 : retf -0x31c7
0x000000000045e47d : retf -0x31f1
0x00000000004a024a : retf -0x3335
0x0000000000422db4 : retf -0x354e
0x0000000000467ba2 : retf -0x362
0x000000000045e295 : retf -0x378e
0x000000000043f7ec : retf -0x38b8
0x000000000043bd42 : retf -0x3a5
0x000000000044f232 : retf -0x3c9
0x0000000000441bbc : retf -0x3d77
0x000000000046a1a8 : retf -0x3e7d
0x000000000045b77e : retf -0x3eb7
0x0000000000421bab : retf -0x3eb8
0x0000000000445893 : retf -0x3eff
0x00000000004a375d : retf -0x3f02
0x000000000045c78f : retf -0x3f7b
0x000000000046b921 : retf -0x3fcf
0x000000000044ea78 : retf -0x40
0x00000000004a3add : retf -0x40b5
0x0000000000405c3a : retf -0x41f1
0x000000000044319f : retf -0x427d
0x0000000000433532 : retf -0x44
0x0000000000462888 : retf -0x4417
0x00000000004a3a93 : retf -0x4466
0x000000000046ff32 : retf -0x47b8
0x00000000004808e2 : retf -0x48f1
0x0000000000419ac2 : retf -0x49f1
0x00000000004a2789 : retf -0x4ae6
0x000000000047331b : retf -0x4bbf
0x000000000046d362 : retf -0x4da
0x0000000000467ee8 : retf -0x518b
0x00000000004a3f8e : retf -0x51ce
0x00000000004a3a3c : retf -0x54f3
0x0000000000403a2f : retf -0x57d
0x00000000004a396b : retf -0x5d02
0x00000000004a18e5 : retf -0x5e15
0x00000000004a4385 : retf -0x5fe0
0x0000000000448d36 : retf -0x60f1
0x000000000044eea2 : retf -0x6117
0x000000000048aba8 : retf -0x626
0x00000000004a3a7a : retf -0x6283
0x000000000048ad80 : retf -0x62b
0x000000000048ad88 : retf -0x62c
0x000000000048ad90 : retf -0x62d
0x000000000048ad98 : retf -0x62e
0x000000000048ada0 : retf -0x62f
0x000000000041e51f : retf -0x63b
0x00000000004a370b : retf -0x6620
0x0000000000480e82 : retf -0x671
0x0000000000458f59 : retf -0x6917
0x0000000000473267 : retf -0x6af1
0x000000000045d31b : retf -0x6c46
0x00000000004a336e : retf -0x6c5e
0x0000000000400779 : retf -0x6f15
0x000000000041e63d : retf -0x6f9a
0x0000000000434704 : retf -0x72b3
0x000000000042de6d : retf -0x72b4
0x00000000004193e9 : retf -0x72b5
0x0000000000416eb4 : retf -0x72b6
0x000000000046c210 : retf -0x72b7
0x00000000004198ef : retf -0x72b8
0x0000000000425859 : retf -0x74b4
0x00000000004356a4 : retf -0x74b7
0x000000000045eab5 : retf -0x74b8
0x0000000000403486 : retf -0x74bb
0x000000000045cd93 : retf -0x74bc
0x000000000047f916 : retf -0x74bf
0x0000000000474aaa : retf -0x7515
0x0000000000412bdf : retf -0x76b4
0x000000000040a829 : retf -0x76b7
0x0000000000402518 : retf -0x76b8
0x0000000000403e1c : retf -0x76bf
0x00000000004140d2 : retf -0x76fe
0x0000000000444154 : retf -0x77f1
0x000000000042603c : retf -0x78f1
0x0000000000403502 : retf -0x7a77
0x000000000046d87b : retf -0x7ab3
0x000000000042af1b : retf -0x7ab8
0x000000000045d307 : retf -0x7abb
0x000000000040b1f6 : retf -0x7af1
0x00000000004a2a10 : retf -0x7b7f
0x00000000004606e5 : retf -0x7bbb
0x000000000040e5cb : retf -0x7bf1
0x0000000000416475 : retf -0x7cb7
0x000000000040e423 : retf -0x7cb8
0x000000000046ef72 : retf -0x7cbf
0x000000000040e44f : retf -0x7cf1
0x0000000000425c2d : retf -0x7df1
0x000000000046a149 : retf -0x7e0a
0x0000000000464dc7 : retf -0x7e42
0x000000000042786e : retf -0x7eb8
0x000000000040b224 : retf -0x7ebf
0x00000000004731c7 : retf -0x8b7
0x0000000000421e1a : retf -0x8b8
0x00000000004a9898 : retf -0x955
0x00000000004aa2e4 : retf -0x97f
0x000000000040b663 : retf -0x9be
0x00000000004373eb : retf -0x9bf
0x0000000000409d86 : retf -0x9cf
0x00000000004688da : retf -0x9f0
0x00000000004a76be : retf -0x9fa
0x0000000000471989 : retf -0xa
0x0000000000400796 : retf -0xb8
0x000000000043edf2 : retf -0xca
0x00000000004041c5 : retf -0xd
0x00000000004405c2 : retf -0xd2
0x000000000041e44d : retf -0xe3b
0x000000000044b978 : retf -0xf
0x00000000004588f1 : retf -0xf17
0x000000000040384a : retf -1
0x0000000000406ea7 : retf -2
0x0000000000409562 : retf -3
0x0000000000467836 : retf -5
0x00000000004af6b1 : retf -6
0x00000000004638cc : retf -7
0x00000000004427ff : retf -8
0x00000000004055f2 : retf 0
0x00000000004959c8 : retf 0x10
0x000000000047156c : retf 0x1075
0x0000000000472f0d : retf 0x114d
0x000000000045bfd2 : retf 0x148
0x000000000043774d : retf 0x1489
0x00000000004490c5 : retf 0x149
0x0000000000425fe7 : retf 0x14c
0x0000000000417372 : retf 0x16
0x0000000000439131 : retf 0x1689
0x000000000047451d : retf 0x194d
0x0000000000433432 : retf 0x19b8
0x0000000000418b6c : retf 0x1bb
0x00000000004976d8 : retf 0x1d4
0x0000000000497e78 : retf 0x1d5
0x000000000040e4b5 : retf 0x1e73
0x000000000041cb27 : retf 0x1f0f
0x000000000046ab53 : retf 0x1f75
0x0000000000433832 : retf 0x1f8
0x00000000004350c3 : retf 0x1fe0
0x000000000044416b : retf 0x20be
0x0000000000443e17 : retf 0x21e9
0x000000000044d3f4 : retf 0x23
0x000000000048630a : retf 0x2311
0x0000000000480b73 : retf 0x2348
0x000000000046b114 : retf 0x24
0x00000000004738fa : retf 0x2474
0x0000000000463106 : retf 0x250e
0x00000000004622e9 : retf 0x251c
0x000000000045de2e : retf 0x2593
0x000000000045946c : retf 0x27e9
0x0000000000411d56 : retf 0x28
0x0000000000423939 : retf 0x280f
0x0000000000409445 : retf 0x2948
0x000000000044d582 : retf 0x294c
0x0000000000414952 : retf 0x29fe
0x00000000004136b6 : retf 0x2a10
0x00000000004a261c : retf 0x2a91
0x00000000004010a2 : retf 0x2b36
0x0000000000400d12 : retf 0x2b43
0x000000000040db90 : retf 0x2b48
0x000000000043a23d : retf 0x2b9
0x00000000004a1a9a : retf 0x2c90
0x00000000004162d5 : retf 0x2e66
0x00000000004708b2 : retf 0x303
0x0000000000480e6c : retf 0x3040
0x0000000000448b3c : retf 0x3145
0x000000000042788a : retf 0x3148
0x00000000004a3885 : retf 0x3159
0x0000000000468c34 : retf 0x31ff
0x00000000004a38ed : retf 0x32dd
0x0000000000496bd8 : retf 0x33
0x00000000004a21a3 : retf 0x33e6
0x0000000000410d5f : retf 0x348
0x000000000048606d : retf 0x34c
0x00000000004a26d1 : retf 0x3617
0x0000000000427866 : retf 0x377
0x00000000004398da : retf 0x377e
0x000000000045d3b8 : retf 0x3944
0x0000000000444bf4 : retf 0x3945
0x000000000040e3ab : retf 0x3948
0x000000000043a490 : retf 0x394c
0x000000000040070e : retf 0x394d
0x000000000045895c : retf 0x39e9
0x0000000000419ee4 : retf 0x3b77
0x000000000043a448 : retf 0x3b9
0x00000000004a0d09 : retf 0x3b9a
0x000000000045d189 : retf 0x3cba
0x000000000046c21f : retf 0x3ceb
0x00000000004a3ce6 : retf 0x3d8a
0x00000000004a157b : retf 0x3ec
0x000000000043547a : retf 0x3ee9
0x0000000000488ae9 : retf 0x40
0x000000000046f90e : retf 0x40b9
0x0000000000464ea2 : retf 0x4108
0x000000000045df26 : retf 0x417f
0x0000000000421ccc : retf 0x4266
0x000000000048095a : retf 0x42f6
0x000000000048b700 : retf 0x4314
0x000000000049a9f1 : retf 0x44
0x000000000041c87a : retf 0x4466
0x000000000049aa38 : retf 0x44c5
0x000000000043b0f0 : retf 0x44c7
0x0000000000404a8c : retf 0x44f6
0x000000000047316e : retf 0x45f0
0x000000000045ea73 : retf 0x4774
0x00000000004116db : retf 0x4801
0x0000000000411270 : retf 0x4802
0x0000000000411641 : retf 0x4805
0x0000000000466828 : retf 0x4838
0x0000000000414275 : retf 0x4853
0x00000000004399b6 : retf 0x4880
0x000000000045d2a4 : retf 0x488d
0x000000000041962e : retf 0x4890
0x000000000040fc1f : retf 0x48be
0x0000000000472e81 : retf 0x48f8
0x0000000000410ac2 : retf 0x4901
0x0000000000458922 : retf 0x4b80
0x000000000043aa6b : retf 0x4b9
0x0000000000410ccb : retf 0x4c01
0x000000000040f0dc : retf 0x4d01
0x0000000000472ed8 : retf 0x4de8
0x0000000000458e57 : retf 0x4de9
0x0000000000472eea : retf 0x4df0
0x0000000000472efc : retf 0x4df8
0x000000000044a862 : retf 0x50
0x0000000000467e96 : retf 0x5274
0x0000000000472e5b : retf 0x5489
0x000000000045ecc8 : retf 0x5675
0x000000000044a45e : retf 0x589
0x000000000043aa99 : retf 0x5b9
0x000000000045fc05 : retf 0x5d5b
0x00000000004600d2 : retf 0x6348
0x000000000046b838 : retf 0x6411
0x0000000000423a23 : retf 0x6601
0x0000000000423b73 : retf 0x6602
0x0000000000423cc3 : retf 0x6603
0x0000000000423e13 : retf 0x6604
0x0000000000423f63 : retf 0x6605
0x00000000004240b3 : retf 0x6606
0x0000000000424203 : retf 0x6607
0x0000000000424353 : retf 0x6608
0x00000000004244a3 : retf 0x6609
0x00000000004245f3 : retf 0x660a
0x0000000000424743 : retf 0x660b
0x0000000000424893 : retf 0x660c
0x00000000004249e3 : retf 0x660d
0x0000000000424b33 : retf 0x660e
0x0000000000424c83 : retf 0x660f
0x0000000000416233 : retf 0x6666
0x0000000000427885 : retf 0x676
0x00000000004a3c05 : retf 0x67ca
0x000000000045d3c0 : retf 0x6948
0x0000000000460092 : retf 0x6b8
0x000000000043ab1c : retf 0x6b9
0x00000000004a1c02 : retf 0x6ee8
0x000000000043f26d : retf 0x718b
0x00000000004a3ac6 : retf 0x7272
0x000000000040e5a1 : retf 0x7475
0x00000000004a329f : retf 0x76a5
0x0000000000474456 : retf 0x77f
0x00000000004a2122 : retf 0x79f5
0x00000000004493f9 : retf 0x7c83
0x000000000040a232 : retf 0x87
0x0000000000473091 : retf 0x877
0x00000000004747da : retf 0x948
0x000000000046cf11 : retf 0x977
0x000000000044a380 : retf 0x97e
0x00000000004324c2 : retf 0x9b8
0x00000000004951c8 : retf 0xa
0x0000000000408932 : retf 0xa0
0x00000000004a6d1c : retf 0xa02
0x0000000000471562 : retf 0xa77
0x000000000044a2ad : retf 0xa7e
0x0000000000420ee2 : retf 0xb
0x00000000004ac0f6 : retf 0xc0a
0x0000000000404c1e : retf 0xce8
0x00000000004955c8 : retf 0xd
0x00000000004a3c57 : retf 0xd39
0x00000000004b36ee : retf 0xe0a
0x00000000004a1893 : retf 0xe80
0x000000000042627c : retf 0xf01
0x00000000004263fc : retf 0xf02
0x000000000042657c : retf 0xf03
0x00000000004266fc : retf 0xf04
0x000000000042687c : retf 0xf05
0x00000000004269fc : retf 0xf06
0x0000000000426b7c : retf 0xf07
0x0000000000426cfc : retf 0xf08
0x0000000000426e7c : retf 0xf09
0x0000000000426ffc : retf 0xf0a
0x000000000042717c : retf 0xf0b
0x00000000004272fc : retf 0xf0c
0x000000000042747c : retf 0xf0d
0x00000000004275fc : retf 0xf0e
0x000000000042777c : retf 0xf0f
0x000000000046d401 : retf 0xf41
0x0000000000417228 : retf 0xf48
0x000000000044874c : retf 0xf4c
0x00000000004a37a8 : retf 0xf64
0x0000000000406d21 : retf 0xf66
0x00000000004280e1 : retf 0xff2
0x000000000042224b : retf 0xff3
0x00000000004055a2 : retf 1
0x0000000000408c42 : retf 2
0x00000000004370e7 : retf 3
0x0000000000499074 : retf 4
0x000000000042e470 : retf 5
0x0000000000494d70 : retf 6
0x000000000040803c : retf 7
0x0000000000499874 : retf 8
0x0000000000421f6b : retf 9
0x00000000004304b5 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000040d497 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000041992d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000421bf2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000045b512 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000499060 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000042213d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004077f7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000043f930 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000000000420562 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000403e13 : rol byte ptr [rbp + 0x7148bf6], 0x74 ; add cl, byte ptr [rdi] ; retf -0x76bf
0x0000000000481ee8 : rol byte ptr [rbp + 0xf], 0xb6 ; adc byte ptr [rax - 0x77], cl ; retf -0x76b4
0x000000000045b539 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x000000000046bb38 : rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xc748
0x0000000000432930 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000450dc0 : rol byte ptr [rbp - 0x78], 0x3c ; sbb eax, dword ptr [rcx + 0x29] ; ret 0x8341
0x0000000000452cb4 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x00000000004540f5 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x000000000045cdd6 : rol byte ptr [rbx + rcx*4], 0x10 ; test edx, edx ; jne 0x45cdd9 ; ret
0x0000000000472f4b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000004396bf : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x00000000004053ff : rol byte ptr [rbx - 0x77cfc20], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x2ce9
0x0000000000440b11 : rol byte ptr [rbx - 0xa], cl ; push rdi ; add dword ptr [rsp + rsi*2], eax ; retf
0x000000000045c3f2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000464fc0 : rol byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x8944
0x0000000000482969 : rol byte ptr [rbx], 0xeb ; ret
0x000000000044b0e4 : rol byte ptr [rcx + 0x39], 1 ; ret
0x0000000000407fe6 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x000000000045c18d : rol byte ptr [rcx + 0x5e], 1 ; ret
0x0000000000430ba1 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000410731 : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000045d446 : rol byte ptr [rcx + 0xf], 0xaf ; ret
0x000000000045d24b : rol byte ptr [rcx + 0xf], 0xaf ; ret 0xc639
0x000000000043cd96 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000045d2e2 : rol byte ptr [rcx + rcx*4 - 0x40], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x67ba
0x000000000048a5b4 : rol byte ptr [rcx + rdi*8], 1 ; jmp rax
0x000000000046c280 : rol byte ptr [rcx - 0x7d], 0xfc ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045c3d2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000044ee9f : rol byte ptr [rcx], 0x75 ; retf -0x6117
0x0000000000443e14 : rol byte ptr [rcx], 0x75 ; retf 0x21e9
0x00000000004309e0 : rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000043e09a : rol byte ptr [rcx], 0x83 ; ret 0x8301
0x000000000046a0a1 : rol byte ptr [rcx], 0x89 ; ret 0x8348
0x0000000000464a74 : rol byte ptr [rcx], 0x89 ; ret 0x8b48
0x000000000044ea6f : rol byte ptr [rcx], 0xf ; test dword ptr [rip - 0x16000028], ebx ; retf -0x40
0x00000000004a5818 : rol byte ptr [rcx], 0xfd ; call qword ptr [rax]
0x000000000045c432 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000045c3e2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000435713 : rol byte ptr [rdx], 0x89 ; add al, 0x24 ; call rbx
0x000000000048a5b0 : rol byte ptr [rdx], 0xf9 ; call rax
0x000000000047e416 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000045c422 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000047d10d : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041e605 : rol ch, 1 ; jns 0x41e5e4 ; retf -0x152d
0x000000000041e755 : rol ch, 1 ; jns 0x41e734 ; retf -0x152d
0x000000000041e8a5 : rol ch, 1 ; jns 0x41e884 ; retf -0x152d
0x000000000041e9f5 : rol ch, 1 ; jns 0x41e9d4 ; retf -0x152d
0x000000000041eb45 : rol ch, 1 ; jns 0x41eb24 ; retf -0x152d
0x000000000041ec95 : rol ch, 1 ; jns 0x41ec74 ; retf -0x152d
0x000000000041ede5 : rol ch, 1 ; jns 0x41edc4 ; retf -0x152d
0x000000000041ef35 : rol ch, 1 ; jns 0x41ef14 ; retf -0x152d
0x000000000041f085 : rol ch, 1 ; jns 0x41f064 ; retf -0x152d
0x000000000041f1d5 : rol ch, 1 ; jns 0x41f1b4 ; retf -0x152d
0x000000000041f325 : rol ch, 1 ; jns 0x41f304 ; retf -0x152d
0x000000000041f475 : rol ch, 1 ; jns 0x41f454 ; retf -0x152d
0x000000000041f5c5 : rol ch, 1 ; jns 0x41f5a4 ; retf -0x152d
0x000000000041f715 : rol ch, 1 ; jns 0x41f6f4 ; retf -0x152d
0x000000000041f865 : rol ch, 1 ; jns 0x41f844 ; retf -0x152d
0x0000000000479b15 : rol ch, 1 ; jns 0x479af4 ; retf -0x152d
0x0000000000479c95 : rol ch, 1 ; jns 0x479c74 ; retf -0x152d
0x0000000000479e15 : rol ch, 1 ; jns 0x479df4 ; retf -0x152d
0x0000000000479f95 : rol ch, 1 ; jns 0x479f74 ; retf -0x152d
0x000000000047a115 : rol ch, 1 ; jns 0x47a0f4 ; retf -0x152d
0x000000000047a295 : rol ch, 1 ; jns 0x47a274 ; retf -0x152d
0x000000000047a415 : rol ch, 1 ; jns 0x47a3f4 ; retf -0x152d
0x000000000047a595 : rol ch, 1 ; jns 0x47a574 ; retf -0x152d
0x000000000047a715 : rol ch, 1 ; jns 0x47a6f4 ; retf -0x152d
0x000000000047a895 : rol ch, 1 ; jns 0x47a874 ; retf -0x152d
0x000000000047aa15 : rol ch, 1 ; jns 0x47a9f4 ; retf -0x152d
0x000000000047ab95 : rol ch, 1 ; jns 0x47ab74 ; retf -0x152d
0x000000000047ad15 : rol ch, 1 ; jns 0x47acf4 ; retf -0x152d
0x000000000047ae95 : rol ch, 1 ; jns 0x47ae74 ; retf -0x152d
0x000000000047b015 : rol ch, 1 ; jns 0x47aff4 ; retf -0x152d
0x00000000004a0240 : rol cl, 0xc2 ; ret
0x0000000000482aed : rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000047dd0d : rol cl, 1 ; call 0x490a0638
0x000000000045c37c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000419f19 : rol dword ptr [rax + 0x48], 0x39 ; retf -0x1f8b
0x0000000000427860 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004353b0 : rol dword ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; retf -0x49f1
0x00000000004b2865 : rol dword ptr [rax], 0 ; retf
0x000000000044b712 : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0x89 ; ret 0xeac0
0x0000000000403a29 : rol dword ptr [rcx - 0x75], cl ; push rdi ; add al, 0xf ; retf -0x57d
0x0000000000405482 : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000004ac216 : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x00000000004a5e68 : rol ebx, -3 ; jmp rdx
0x0000000000434a5d : rol ecx, -0x1f ; add ebx, dword ptr [rbx - 0x2d] ; loopne 0x434aca ; ret
0x00000000004051e4 : rol ecx, 1 ; stc ; add al, 1 ; retf -0x1d7f
0x00000000004197a2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x4197e9 ; add rax, rdi ; ret
0x000000000041722f : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000448c4c : ror byte ptr [rax + 0x29], 1 ; retf -0x8b8
0x0000000000467a11 : ror byte ptr [rax + 0x29], cl ; ret 0x394c
0x00000000004602ef : ror byte ptr [rax + 0x39], 0xd6 ; ja 0x460307 ; ret
0x0000000000433488 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000473de3 : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x000000000047e198 : ror byte ptr [rax + 0x39], 1 ; ret 0x9e0f
0x0000000000437d85 : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000432e7e : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000004678ea : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x000000000045c892 : ror byte ptr [rax + 0xf], cl ; ret 0x8548
0x000000000042043c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000419772 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000046c4f3 : ror byte ptr [rax + 1], 1 ; retf
0x0000000000403a26 : ror byte ptr [rax + 1], cl ; rol dword ptr [rcx - 0x75], cl ; push rdi ; add al, 0xf ; retf -0x57d
0x000000000041722c : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000450305 : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x000000000044389c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], edi ; ret 0x8908
0x000000000044390c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], edi ; ret 0x8910
0x0000000000419925 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000400f1c : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x400f2b ; pop rbp ; ret
0x000000000047d9e5 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc2712333
0x000000000047dc03 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000419762 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000419792 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000419782 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000040c9fa : ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000040d4e6 : ror byte ptr [rax - 0x77], 0x4a ; or bl, dh ; ret
0x00000000004863ce : ror byte ptr [rax - 0x77], 0xca ; jmp 0x4863aa
0x0000000000447b72 : ror byte ptr [rax - 0x77], 1 ; ret 0x55e8
0x000000000040ad75 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000045f455 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000044d8df : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000406169 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000046008f : ror byte ptr [rax - 0x77], 1 ; retf 0x6b8
0x0000000000474e45 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000410e45 : ror byte ptr [rax - 0x7d], 0x3d ; ret 0x2a39
0x0000000000405933 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040844f : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000460210 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004124b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004485a9 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000046847a : ror byte ptr [rax - 0x7d], 0xfa ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000004115f6 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2ca5e15
0x000000000045272b : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000406d30 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004748d8 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000460103 : ror byte ptr [rax - 0x7d], cl ; in al, dx ; jo 0x460105 ; ret 0x4840
0x00000000004649c5 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000469c85 : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000043adde : ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000043aa33 : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000486aed : ror byte ptr [rax], 0x4c ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000046d3e2 : ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000481a24 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000042de26 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x5d0
0x000000000042e46b : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; std ; retf 5
0x0000000000468ed7 : ror byte ptr [rbx + rcx*4 + 0x2d], 0xe1 ; ret 0x24
0x000000000045b53f : ror byte ptr [rcx + 0x39], 1 ; ret
0x000000000043a5a3 : ror byte ptr [rcx + 0x39], cl ; ret
0x0000000000437e4f : ror byte ptr [rcx + 0x41082444], cl ; call rsi
0x0000000000462884 : ror byte ptr [rcx + 0xf], 0x44 ; retf -0x4417
0x000000000045bcc2 : ror byte ptr [rcx + 1], cl ; retf 0x394d
0x000000000047dcc5 : ror byte ptr [rcx + rbp - 0x31], 0x29 ; ret
0x0000000000482022 : ror byte ptr [rcx + rcx*4 + 6], 1 ; ret
0x000000000045aff2 : ror byte ptr [rcx + rcx*4 - 0x11], 0x45 ; xor eax, eax ; call r12
0x000000000046c315 : ror byte ptr [rcx - 0x3f], cl ; cli ; add cl, byte ptr [rcx + 0x29] ; ret 0x8b48
0x000000000043f77e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000409b2a : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000466aa0 : ror byte ptr [rcx - 0x7d], cl ; std ; and al, 0xf ; xchg eax, esp ; ret 0xc031
0x000000000047f91c : ror byte ptr [rdi + rcx + 0x44], cl ; ret
0x000000000041a119 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000043f812 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000047c80d : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040e614 : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x0000000000437744 : ror byte ptr [rdi], 0x1f ; add byte ptr [rbx + 0xf008554], cl ; retf 0x1489
0x000000000046c2da : ror byte ptr [rdi], 0x84 ; cdq ; or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004372ab : ror byte ptr [rdi], 0x84 ; hlt ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046ac6d : ror byte ptr [rdi], 0x84 ; mov esp, 0x79000001 ; ret 0x8d45
0x0000000000462d5e : ror byte ptr [rdi], 0x84 ; ret
0x0000000000463215 : ror byte ptr [rdi], 0x84 ; ret 0
0x000000000044fdf7 : ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000410877 : ror byte ptr [rdi], 0x84 ; retf
0x00000000004370e4 : ror byte ptr [rdi], 0x84 ; retf 3
0x000000000042adba : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042adf6 : ror byte ptr [rdi], 0x85 ; ret
0x00000000004867e2 : ror byte ptr [rdi], 0x85 ; ret 0
0x0000000000445874 : ror byte ptr [rdi], 0x88 ; ret
0x000000000044296c : ror byte ptr [rdi], 0x88 ; retf
0x000000000044aba2 : ror byte ptr [rdi], 0x89 ; ret
0x0000000000433251 : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047e33c : ror byte ptr [rdi], 0x94 ; ret 0x543a
0x000000000045651e : ror byte ptr [rdi], 0x94 ; ret 0x8941
0x0000000000474e48 : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004006ac : ror byte ptr [rdi], 0x95 ; ret
0x00000000004097d1 : ror byte ptr [rdi], 0x95 ; ret 0x60e9
0x0000000000409736 : ror byte ptr [rdi], 0x95 ; ret 0xd284
0x0000000000407d05 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000452cb7 : ror byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000045d2e5 : ror byte ptr [rdi], 0xaf ; ret 0x67ba
0x000000000040b32a : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x000000000040617e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x406168 ; ret
0x00000000004540f8 : ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x000000000043335c : ror byte ptr [rdi], cl ; ret 0x66c3
0x0000000000448b33 : ror byte ptr [rdi], cl ; test byte ptr [rsi], bl ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf 0x3145
0x000000000047e269 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000048a59c : ror byte ptr [rsi - 7], 1 ; jmp qword ptr [rax]
0x00000000004a5f9c : ror dh, 1 ; std ; call rax
0x0000000000460fed : ror dword ptr [r13 + 0x39], 1 ; ret 0x5076
0x000000000042786b : ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x000000000048293d : ror dword ptr [rax + 0xf], 1 ; retf
0x0000000000432ddc : ror dword ptr [rax + 0xf], cl ; ret
0x00000000004170f0 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf -0x76b8
0x0000000000417221 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000045b582 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000046a145 : ror dword ptr [rax - 0x75], 0xc ; retf -0x7e0a
0x0000000000439d44 : ror dword ptr [rax - 0x75], cl ; cmp ebp, eax ; ret
0x0000000000473913 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000043af62 : ror dword ptr [rax - 0x77], 1 ; ret 0xb70f
0x000000000047f9eb : ror dword ptr [rax - 0x77], cl ; ret
0x000000000040c36d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x40c367 ; ret
0x000000000045a02d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x45a027 ; ret
0x000000000043a489 : ror dword ptr [rax - 0x7d], -0x39 ; add dword ptr [rax - 0x77], ecx ; retf 0x394c
0x00000000004740b5 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x0000000000465a2a : ror dword ptr [rax - 0x7d], cl ; ret 0x4918
0x000000000040b55f : ror dword ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000453240 : ror dword ptr [rax], -0x17 ; loop 0x45324e ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000043e2ec : ror dword ptr [rax], 1 ; test rax, rax ; je 0x43e2fe ; call rax
0x0000000000460fee : ror dword ptr [rbp + 0x39], 1 ; ret 0x5076
0x00000000004737da : ror dword ptr [rbp + 1], 1 ; retf -0x74b8
0x000000000040b699 : ror dword ptr [rbp - 0x7cb70090], 1 ; ret 0x8301
0x000000000042e8e7 : ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004830ad : ror dword ptr [rdi], -0x4a ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000441b70 : ror dword ptr [rdi], -0x4a ; or al, 0x89 ; ret 0xeac0
0x0000000000444cf9 : ror dword ptr [rdi], -0x79 ; pushfq ; retf -1
0x00000000004725de : ror dword ptr [rdi], -0x79 ; ret
0x000000000047185a : ror dword ptr [rdi], -0x79 ; retf
0x00000000004229a8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004230b4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000422e86 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000422e06 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000423144 : ror dword ptr [rdi], -0x7b ; je 0x423154 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000422c3b : ror dword ptr [rdi], -0x7b ; jno 0x422c50 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000422d03 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000422980 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000040c36c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x40c368 ; ret
0x000000000045a02c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x45a028 ; ret
0x000000000044d309 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10eb43], al ; call qword ptr [rax]
0x000000000044d631 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x113f43], al ; call qword ptr [rax]
0x0000000000483d2e : sahf ; idiv bh ; dec dword ptr [rcx - 0x77] ; ret
0x000000000040c579 : sahf ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000446d9b : sahf ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000041f00e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a1c05 : sahf ; ret 0x38ae
0x000000000047e19d : sahf ; ret 0xe9c1
0x00000000004a273c : sahf ; retf
0x000000000048a961 : sahf ; stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x000000000040b32d : sal bh, 0xd8 ; pop rbx ; ret
0x000000000047504e : sal bh, 0xd8 ; ret
0x0000000000430cdd : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004160d7 : sal bh, 1 ; ret 0x8000
0x0000000000415f97 : sal bh, 1 ; ret 0xc000
0x0000000000415e57 : sal bh, 1 ; ret 0xe000
0x0000000000415d17 : sal bh, 1 ; ret 0xf000
0x0000000000415bd7 : sal bh, 1 ; ret 0xf800
0x0000000000415a97 : sal bh, 1 ; ret 0xfc00
0x0000000000415957 : sal bh, 1 ; ret 0xfe00
0x0000000000415817 : sal bh, 1 ; ret 0xff00
0x00000000004156d7 : sal bh, 1 ; ret 0xff80
0x0000000000415597 : sal bh, 1 ; ret 0xffc0
0x0000000000415457 : sal bh, 1 ; ret 0xffe0
0x0000000000415317 : sal bh, 1 ; ret 0xfff0
0x00000000004151d7 : sal bh, 1 ; ret 0xfff8
0x0000000000415097 : sal bh, 1 ; ret 0xfffc
0x0000000000414f57 : sal bh, 1 ; ret 0xfffe
0x00000000004460a4 : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000047fb00 : sal byte ptr [rax - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000048af1c : sal byte ptr [rax], 0xfa ; call rax
0x000000000048af20 : sal byte ptr [rax], 1 ; cli ; jmp rax
0x000000000048a54c : sal byte ptr [rax], 1 ; stc ; push qword ptr [rax + 0x32] ; stc ; call qword ptr [rax]
0x0000000000467611 : sal byte ptr [rbp + 0x46], 0 ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000419758 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x00000000004606b2 : sal byte ptr [rbp + 0x5f], 0x4c ; mov eax, ecx ; ret
0x0000000000486713 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x0000000000465694 : sal byte ptr [rbp + 2], 0x5b ; ret
0x000000000044709c : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000486507 : sal byte ptr [rbp + 6], 0x5b ; ret
0x00000000004334a1 : sal byte ptr [rbp + 7], 1 ; mov eax, 0xca ; syscall
0x0000000000475131 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000403bd8 : sal byte ptr [rbp + rbp + 0x48], 0x83 ; ret 0xeb04
0x0000000000471567 : sal byte ptr [rbp + rdx + 0x48], 0x39 ; retf 0x1075
0x000000000046ef27 : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000040d445 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000430620 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000040c370 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000421d9b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000406183 : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000433277 : sal byte ptr [rbp - 0x3a], 0x49 ; movsxd rdi, edi ; mov al, 3 ; syscall
0x00000000004520dc : sal byte ptr [rbp - 0x57], 0xe9 ; retf
0x000000000045cddb : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004334b0 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x000000000045b4e2 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000402b81 : sal byte ptr [rbx + rdx + 0x48], 0x83 ; ret 0x4901
0x000000000048a84c : sal byte ptr [rbx - 0x59af0007], 0xf9 ; call qword ptr [rax]
0x000000000048af4c : sal byte ptr [rcx], 0xfa ; jmp rax
0x0000000000433486 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000460966 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000048722c : sal byte ptr [rdi - 0x5f460008], 1 ; ret
0x0000000000464c4f : sal byte ptr [rdx + rbx + 0x48], 0x83 ; ret 0x4c08
0x0000000000417163 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000417013 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000048af74 : sal byte ptr [rip + 0x35d0fffa], 0xfa ; jmp rax
0x000000000043753f : sal byte ptr [rsi + 0x48], 0x83 ; ret
0x0000000000417107 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x000000000048afa4 : sal byte ptr [rsi], 1 ; cli ; push rax ; cli ; call qword ptr [rax]
0x000000000040b318 : sal dword ptr [rbp + 5], cl ; pop rbx ; ret
0x000000000040d4e4 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx + 8], rcx ; ret
0x000000000045b390 : sal dword ptr [rcx], 1 ; ret
0x0000000000482aeb : sal dword ptr [rcx], 1 ; rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000040c9f8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000041333b : sal dword ptr [rdx], 1 ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41334f ; call rax
0x00000000004ab8a1 : sal edi, 1 ; call qword ptr [rax]
0x0000000000488b01 : salc ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf
0x0000000000407485 : salc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000042e926 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004004d1 : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x4004ad
0x00000000004004d1 : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x4004af
0x0000000000423429 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000486f61 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004602f2 : salc ; ja 0x460304 ; ret
0x000000000048a764 : salc ; mov bh, cl ; push qword ptr [rsi - 0x75] ; stc ; call qword ptr [rsi]
0x00000000004319dd : salc ; mov eax, 4 ; syscall
0x0000000000431a2c : salc ; mov eax, 5 ; syscall
0x000000000046003d : salc ; mov eax, 6 ; syscall
0x00000000004562a6 : salc ; ret 0xffff
0x00000000004a1b8a : salc ; retf
0x0000000000455db4 : salc ; retf -1
0x000000000048ad3d : salc ; stc ; call rsp
0x000000000048ac01 : salc ; stc ; jmp qword ptr [rax + 0x20fff9d5]
0x000000000048abfd : salc ; stc ; jmp qword ptr [rax]
0x000000000046576b : sar byte ptr [rax + 2], 0x5b ; ret
0x000000000047483c : sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000004349ad : sar byte ptr [rcx], cl ; ret
0x0000000000468e24 : sar byte ptr [rdi + 0x4a56ea], 0x83 ; ret
0x000000000047e3ec : sar byte ptr [rsi + 2], 1 ; ret
0x00000000004a259f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a5f99 : sar ch, cl ; call rax
0x000000000048ae95 : sar cl, 0xff ; add cl, 0xf9 ; inc dword ptr [rax] ; ret
0x000000000048ade9 : sar cl, 1 ; call qword ptr [rax]
0x000000000048acad : sar cl, 1 ; call rdx
0x000000000048aca9 : sar cl, 1 ; inc dword ptr [rdx - 0x30] ; stc ; call rdx
0x000000000048ac2d : sar cl, 1 ; jmp rsi
0x000000000048ad5d : sar cl, cl ; call rsp
0x000000000048ac1d : sar cl, cl ; jmp qword ptr [rax]
0x00000000004af829 : sar dl, 1 ; call rax
0x000000000045d3b4 : sar dword ptr [rbp + 7], -0x77 ; retf 0x3944
0x000000000040273a : sar dword ptr [rdi + 0x6b6000], cl ; call rbx
0x000000000048a439 : sar eax, -1 ; push 0x38fff8c2 ; ret
0x000000000046b801 : sar eax, 0x10 ; ret
0x000000000046b7ba : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000046b73d : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000400f1e : sar eax, 1 ; jne 0x400f29 ; pop rbp ; ret
0x000000000045aa9c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047e497 : sar eax, 3 ; pop r12 ; ret
0x000000000048aca5 : sar ecx, 1 ; call rdx
0x0000000000463210 : sar ecx, 1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000048ade5 : sar ecx, 1 ; jmp qword ptr [rax + 0x10fff9d0]
0x000000000048ae21 : sar ecx, 1 ; jmp qword ptr [rax]
0x00000000004a2303 : sar ecx, 1 ; jnp 0x4a22c4 ; ret
0x000000000048ac29 : sar ecx, 1 ; push qword ptr [rax - 0x30] ; stc ; jmp rsi
0x000000000048ad55 : sar ecx, cl ; call rsp
0x000000000048ac19 : sar ecx, cl ; jmp qword ptr [rax + 0x20fff9d2]
0x000000000048ac15 : sar ecx, cl ; jmp qword ptr [rax]
0x0000000000419927 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000045aa9b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000046b73c : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000400f1d : sar rax, 1 ; jne 0x400f2a ; pop rbp ; ret
0x000000000047e496 : sar rax, 3 ; pop r12 ; ret
0x0000000000419926 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000048abd8 : sbb ah, 0xf9 ; call qword ptr [rax]
0x0000000000435029 : sbb ah, byte ptr [rax] ; call rax
0x0000000000432521 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000477bfa : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000477b53 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000046a8b0 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x000000000046a990 : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x000000000042345f : sbb al, 0x29 ; add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x00000000004ac034 : sbb al, 0x5b ; add byte ptr [rax], al ; sub byte ptr [rbp - 8], ch ; call qword ptr [rdx]
0x00000000004ada34 : sbb al, 0x75 ; add byte ptr [rax], al ; call 0xffffffffe74ad361
0x00000000004a3602 : sbb al, 0x8c ; retf
0x0000000000464dc5 : sbb al, 0xb0 ; retf -0x7e42
0x00000000004b1f3c : sbb al, 0xb8 ; add byte ptr [rax], al ; retf
0x00000000004b1f6a : sbb al, 0xd ; add byte ptr [rbx], ch ; cld ; jmp qword ptr [rdx]
0x00000000004a6f7a : sbb al, 0xd ; add dh, bl ; cmc ; jmp qword ptr [rdx]
0x00000000004ae66a : sbb al, 0xd ; add dl, al ; stc ; jmp qword ptr [rdx]
0x00000000004afaba : sbb al, 0xd ; and esp, ebp ; cli ; jmp qword ptr [rdx]
0x00000000004ac99a : sbb al, 0xd ; cmc ; pushfq ; clc ; jmp qword ptr [rdx]
0x00000000004afeda : sbb al, 0xd ; cmp al, 0xfb ; cli ; jmp qword ptr [rdx]
0x00000000004a7152 : sbb al, 0xd ; cmp bh, bl ; cmc ; jmp qword ptr [rdx]
0x00000000004ac382 : sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jb 0x4ac384 ; jmp qword ptr [rdx]
0x00000000004a9832 : sbb al, 0xd ; ficom word ptr [rdx - 0xa] ; jmp qword ptr [rdx]
0x00000000004b28da : sbb al, 0xd ; fsub st(5), st(0) ; cld ; jmp qword ptr [rdx]
0x00000000004aa012 : sbb al, 0xd ; hlt ; jg 0x4aa012 ; jmp qword ptr [rdx]
0x00000000004a9c6a : sbb al, 0xd ; idiv dword ptr [rcx - 0xa] ; jmp qword ptr [rdx]
0x00000000004adf3a : sbb al, 0xd ; imul dword ptr [rsi] ; stc ; jmp qword ptr [rdx]
0x00000000004b2892 : sbb al, 0xd ; in al, -0x13 ; cld ; jmp qword ptr [rdx]
0x00000000004b1fb2 : sbb al, 0xd ; in al, dx ; sub bh, ah ; jmp qword ptr [rdx]
0x00000000004ae98a : sbb al, 0xd ; in eax, -0x65 ; cli ; jmp qword ptr [rdx]
0x00000000004afa72 : sbb al, 0xd ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004af99a : sbb al, 0xd ; in eax, dx ; in al, -6 ; jmp qword ptr [rdx]
0x00000000004aebd2 : sbb al, 0xd ; jb 0x4aeb85 ; cli ; jmp qword ptr [rdx]
0x00000000004aed12 : sbb al, 0xd ; jb 0x4aecc7 ; cli ; jmp qword ptr [rdx]
0x00000000004ae402 : sbb al, 0xd ; jg 0x4ae3c8 ; stc ; jmp qword ptr [rdx]
0x00000000004b1e62 : sbb al, 0xd ; jg 0x4b1e95 ; cld ; jmp qword ptr [rdx]
0x00000000004b1e1a : sbb al, 0xd ; jl 0x4b1e4d ; cld ; jmp qword ptr [rdx]
0x00000000004a9cfa : sbb al, 0xd ; jle 0x4a9cfa ; jmp qword ptr [rdx]
0x00000000004a9d42 : sbb al, 0xd ; jle 0x4a9d42 ; jmp qword ptr [rdx]
0x00000000004a6b2a : sbb al, 0xd ; jns 0x4a6afa ; cmc ; jmp qword ptr [rdx]
0x00000000004adf82 : sbb al, 0xd ; jo 0x4adfba ; stc ; jmp qword ptr [rdx]
0x00000000004a97a2 : sbb al, 0xd ; jp 0x4a978d ; std ; jmp qword ptr [rdx]
0x00000000004ac832 : sbb al, 0xd ; lahf ; pushfq ; clc ; jmp qword ptr [rdx]
0x00000000004adb52 : sbb al, 0xd ; lodsb al, byte ptr [rsi] ; and al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004adfca : sbb al, 0xd ; mov ah, 0x7d ; stc ; jmp qword ptr [rdx]
0x00000000004ac8c2 : sbb al, 0xd ; mov al, 0x9c ; clc ; jmp qword ptr [rdx]
0x00000000004a89f2 : sbb al, 0xd ; mov dword ptr [rbx - 0xa], eax ; jmp qword ptr [rdx]
0x00000000004a89aa : sbb al, 0xd ; mov eax, dword ptr [rbx - 0xa] ; jmp qword ptr [rdx]
0x00000000004a999a : sbb al, 0xd ; movsxd rsi, esi ; jmp qword ptr [rdx]
0x00000000004ac90a : sbb al, 0xd ; or al, 0x9d ; clc ; jmp qword ptr [rdx]
0x00000000004ae88a : sbb al, 0xd ; or dword ptr [rdx], ebx ; cli ; jmp qword ptr [rdx]
0x00000000004a6c2a : sbb al, 0xd ; or esp, ebx ; cmc ; jmp qword ptr [rdx]
0x00000000004a7aba : sbb al, 0xd ; or r14b, sil ; jmp qword ptr [rdx]
0x00000000004a8722 : sbb al, 0xd ; pop rax ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000004a7b02 : sbb al, 0xd ; pop rbx ; or dh, dh ; jmp qword ptr [rdx]
0x00000000004affaa : sbb al, 0xd ; pop rdi ; sti ; cli ; jmp qword ptr [rdx]
0x00000000004ac33a : sbb al, 0xd ; pop rdx ; jb 0x4ac33c ; jmp qword ptr [rdx]
0x00000000004a9d8a : sbb al, 0xd ; pop rdx ; jle 0x4a9d8a ; jmp qword ptr [rdx]
0x00000000004a676a : sbb al, 0xd ; pop rdx ; mov dh, 0xf5 ; jmp qword ptr [rdx]
0x00000000004aff22 : sbb al, 0xd ; pop rdx ; sti ; cli ; jmp qword ptr [rdx]
0x00000000004afb02 : sbb al, 0xd ; pop rsi ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004ae6b2 : sbb al, 0xd ; push rcx ; adc edi, edx ; jmp qword ptr [rdx]
0x00000000004a876a : sbb al, 0xd ; push rcx ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000004a9dd2 : sbb al, 0xd ; push rcx ; jg 0x4a9dd2 ; jmp qword ptr [rdx]
0x00000000004ae8d2 : sbb al, 0xd ; rcr byte ptr [rdx], cl ; cli ; jmp qword ptr [rdx]
0x00000000004a9bda : sbb al, 0xd ; ret
0x00000000004a9a72 : sbb al, 0xd ; ret 0xf665
0x00000000004aa2e2 : sbb al, 0xd ; retf -0x97f
0x00000000004a99e2 : sbb al, 0xd ; sbb esp, dword ptr [rbx - 0xa] ; jmp qword ptr [rdx]
0x00000000004a9eaa : sbb al, 0xd ; scasb al, byte ptr [rdi] ; jg 0x4a9eaa ; jmp qword ptr [rdx]
0x00000000004a9e62 : sbb al, 0xd ; stc ; jle 0x4a9e62 ; jmp qword ptr [rdx]
0x00000000004ac952 : sbb al, 0xd ; stc ; pushfq ; clc ; jmp qword ptr [rdx]
0x00000000004a8842 : sbb al, 0xd ; std ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000004aa0ea : sbb al, 0xd ; std ; jg 0x4aa0ea ; jmp qword ptr [rdx]
0x00000000004adb0a : sbb al, 0xd ; sub al, 0x24 ; stc ; jmp qword ptr [rdx]
0x00000000004ae6fa : sbb al, 0xd ; xchg eax, ebp ; adc edi, edx ; jmp qword ptr [rdx]
0x00000000004aeb8a : sbb al, 0xd ; xchg eax, edx ; stosb byte ptr [rdi], al ; cli ; jmp qword ptr [rdx]
0x00000000004a9712 : sbb al, 0xd ; xor byte ptr [rbx - 0xa], cl ; jmp qword ptr [rdx]
0x000000000045c614 : sbb al, 0xe9 ; ret
0x0000000000487a78 : sbb al, 0xec ; and al, byte ptr [rax] ; jne 0x487aa3 ; ret
0x0000000000481890 : sbb al, 7 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000040bd5a : sbb al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000487ce1 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x401a
0x0000000000477dda : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047f9e2 : sbb al, byte ptr [rbx + 0xa3c0fe0] ; jne 0x47f99d ; call rbx
0x0000000000448128 : sbb al, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000044af58 : sbb al, byte ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000477dd9 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000485e9d : sbb al, ch ; pop rbp ; retf
0x0000000000474db7 : sbb al, ch ; ret
0x0000000000481818 : sbb al, ch ; ret 0xff35
0x000000000048a9c0 : sbb bh, 0xf9 ; call qword ptr [rax]
0x00000000004ae88d : sbb bh, dl ; jmp qword ptr [rdx]
0x00000000004ac82e : sbb bl, byte ptr [rdi + 0xd1cfff8] ; lahf ; pushfq ; clc ; jmp qword ptr [rdx]
0x00000000004a2392 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004a1085 : sbb bl, byte ptr [rsi] ; ret
0x0000000000431a3b : sbb bl, dh ; ret
0x000000000042030b : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000040f0d4 : sbb byte ptr [r8 - 0x77], cl ; adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x0000000000474e42 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000481364 : sbb byte ptr [rax + 0x23], ah ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x8175
0x000000000048326f : sbb byte ptr [rax + 0xf4c10fa], al ; ret
0x00000000004409f7 : sbb byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000485e98 : sbb byte ptr [rax - 0x75], cl ; jl 0x485ec9 ; sbb al, ch ; pop rbp ; retf
0x000000000040f0d5 : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x0000000000411026 : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; call rdx
0x000000000040e786 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043dd64 : sbb byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000040c3d1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000044a2a1 : sbb byte ptr [rax - 0x77], cl ; ret 0x6349
0x000000000046cee0 : sbb byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000410d5c : sbb byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000412687 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000040aa8a : sbb byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rax + 0xf] ; ret 0xe0ba
0x000000000041febe : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004601d4 : sbb byte ptr [rax - 0x7d], cl ; retf
0x000000000041febd : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000432fc4 : sbb byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040c9b3 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000477fba : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046e225 : sbb byte ptr [rbp + 0x31], al ; rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xc748
0x000000000045c9f7 : sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3a20b65
0x000000000040df0a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040c6cf : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040d487 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000048b8f9 : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000046c9de : sbb byte ptr [rcx + 0x39], cl ; ret
0x000000000045a60b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000046284c : sbb byte ptr [rcx + 0xf], cl ; retf -0x2517
0x0000000000474e43 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000046b44e : sbb byte ptr [rdi + 0x6b5140], bh ; call rax
0x000000000047b84d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000403c6e : sbb byte ptr [rdi], cl ; retf
0x000000000040369b : sbb byte ptr [rdi], cl ; retf -0x2d77
0x000000000045d186 : sbb byte ptr [rdi], cl ; retf 0x3cba
0x000000000041250e : sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x000000000048a954 : sbb byte ptr [rdx - 0x642f0007], 0xf9 ; jmp qword ptr [rax]
0x00000000004b0978 : sbb byte ptr [rsi - 5], cl ; call rdx
0x00000000004abe78 : sbb byte ptr [rsi - 8], ah ; jmp qword ptr [rbx]
0x0000000000484549 : sbb ch, al ; loope 0x484509 ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004ad831 : sbb cl, bh ; call qword ptr [rcx]
0x0000000000448aed : sbb cl, byte ptr [rax - 0x3f] ; call 0xffffffffc2cdd2fe
0x0000000000464c51 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x0000000000450117 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x8001
0x0000000000418b3f : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x0000000000416ccd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041d75d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004168bd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004163c9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000416bd9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f3aa : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000041ebca : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000041efba : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e7da : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e2bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041da9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000041664d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041d27d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000041698d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000416ca9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e979 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416d79 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041dddd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d5bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cd9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000041df7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000416b2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041631d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000041671d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000041ee6a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e68a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f79a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000416bfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004163ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041d0dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041648f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004167ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000041d213 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041df13 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041da33 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ed6b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041f69b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416a5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041e253 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d553 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041d073 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041dd73 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000041eebb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041e6db : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004164b3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004600a1 : sbb dh, bl ; ret
0x0000000000477ef8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000477e81 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477ef9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000433434 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000475efe : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a393d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004aa51e : sbb dword ptr [rdi + 0xd1cfff6], -0x50 ; xchg esi, esi ; jmp qword ptr [rdx]
0x00000000004a9cf6 : sbb dword ptr [rdi + 0xd1cfff6], esp ; jle 0x4a9cfe ; jmp qword ptr [rdx]
0x00000000004302f7 : sbb eax, -1 ; ret
0x0000000000433835 : sbb eax, 0 ; leave ; ret
0x00000000004a2393 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x0000000000455ac5 : sbb eax, 0x89000001 ; ret 0x348
0x0000000000452dc5 : sbb eax, 0x8900000e ; retf 0x348
0x0000000000477a5d : sbb eax, 0x894d0000 ; retf
0x000000000044ea73 : sbb eax, 0xe9ffffd8 ; retf -0x40
0x0000000000477ca1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477d19 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000475cae : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000450dc4 : sbb eax, dword ptr [rcx + 0x29] ; ret 0x8341
0x0000000000472f4a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004302f5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004a34a8 : sbb ebp, ebx ; retf
0x00000000004b3081 : sbb ebp, edi ; call rsp
0x000000000044a370 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x0000000000473064 : sbb ecx, dword ptr [rax - 0x77] ; retf -0x76b8
0x0000000000484d91 : sbb ecx, ecx ; cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x00000000004a3239 : sbb edi, ebp ; retf
0x0000000000468264 : sbb edi, ebx ; dec dword ptr [rax - 0x7d] ; ret
0x000000000043117f : sbb esi, esp ; mov rdi, rdx ; mov eax, r9d ; syscall
0x00000000004a99e4 : sbb esp, dword ptr [rbx - 0xa] ; jmp qword ptr [rdx]
0x000000000047a13f : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000479e3f : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047ad3f : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000407b42 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000047b03f : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041f3fe : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000419f61 : scasb al, byte ptr [rdi] ; clc ; ret
0x00000000004a65d9 : scasb al, byte ptr [rdi] ; cmc ; call qword ptr [rdi]
0x00000000004a9eac : scasb al, byte ptr [rdi] ; jg 0x4a9ea8 ; jmp qword ptr [rdx]
0x0000000000467eea : scasb al, byte ptr [rdi] ; mov eax, dword ptr [rdx] ; ret
0x000000000048a730 : scasb al, byte ptr [rdi] ; mov ecx, dr1 ; inc dword ptr [rsi - 0x7d] ; stc ; call qword ptr [rsi]
0x000000000047a73f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a38e9 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000047a43f : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x0000000000453b2c : scasb al, byte ptr [rdi] ; ret 0xffff
0x000000000048a925 : scasb al, byte ptr [rdi] ; stc ; call qword ptr [rax]
0x000000000048a8c5 : scasb al, byte ptr [rdi] ; stc ; jmp rax
0x00000000004ac2ad : scasb al, byte ptr [rdi] ; std ; jmp qword ptr [rdx]
0x00000000004455c5 : scasb al, byte ptr [rdi] ; sti ; inc dword ptr [rbx - 0x7bf00008] ; retf
0x000000000041f4fd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044aa27 : scasd eax, dword ptr [rdi] ; add byte ptr [r9 - 0x42], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x000000000045d19f : scasd eax, dword ptr [rdi] ; add eax, esi ; ret
0x0000000000482150 : scasd eax, dword ptr [rdi] ; mov ah, 0x24 ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000401538 : scasd eax, dword ptr [rdi] ; ret
0x000000000045d2e7 : scasd eax, dword ptr [rdi] ; ret 0x67ba
0x00000000004309ed : scasd eax, dword ptr [rdi] ; ret 0x8341
0x0000000000401049 : scasd eax, dword ptr [rdi] ; ret 0x9848
0x000000000045d24e : scasd eax, dword ptr [rdi] ; ret 0xc639
0x000000000048a8a5 : scasd eax, dword ptr [rdi] ; stc ; jmp qword ptr [rax]
0x000000000048a825 : scasd eax, dword ptr [rdi] ; stc ; jmp rax
0x00000000004a2614 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x00000000004a188f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000043348c : setae al ; ret
0x000000000040b328 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000004349b0 : setne dl ; jmp 0x434998
0x0000000000419f60 : sfence ; ret
0x0000000000402fb9 : shl byte ptr [rax + 0x6b], 0 ; call rax
0x00000000004a9e5e : shl byte ptr [rbp + 0xd1cfff6], 1 ; stc ; jle 0x4a9e66 ; jmp qword ptr [rdx]
0x000000000047b60d : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048a9ac : shl byte ptr [rdx - 0x25b10007], 1 ; stc ; call rax
0x000000000043053f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000414d4b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042e8e3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000414cb5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042333b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000423352 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000045b756 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000045b767 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000423231 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045cdad : shl byte ptr [rsi - 0x70], 0xc3 ; mov eax, 1 ; ret
0x000000000045daae : shl byte ptr [rsi - 0x77], cl ; push rbp ; ret 0x6348
0x0000000000463bc3 : shl byte ptr [rsi - 0x7d], cl ; jge 0x463bd6 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x00000000004966a0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a219d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x00000000004a2488 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000430522 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x00000000004232b6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043039b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000045b752 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000414d4f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042336d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000423356 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042333f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000421dfb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004232d1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041957c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000423191 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000434a62 : shl eax, cl ; pop rbp ; ret
0x0000000000434a5e : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x00000000004734ac : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000473437 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000473406 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048201e : shl edx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x00000000004734ab : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000473436 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000473405 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048201d : shl rdx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x0000000000468b6d : shr al, 0x2d ; jmp 0xffffffffc3d08b7b
0x000000000046b080 : shr al, 0x8a ; retf
0x0000000000462408 : shr al, 0xb2 ; pop rax ; add byte ptr [rax], al ; jmp 0x4623e2
0x00000000004a1a44 : shr al, cl ; add al, 0x3d ; retf
0x0000000000421d9f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000043ce78 : shr byte ptr [rcx], cl ; ret
0x000000000041992b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000040b003 : shr byte ptr [rdx + 2], cl ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x00000000004a3847 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x0000000000453b2a : shr cl, 0xae ; ret 0xffff
0x0000000000412a33 : shr cl, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000044b474 : shr dh, 0xff ; call qword ptr [rax]
0x000000000043d96b : shr dword ptr [rax + 0x41], 0x39 ; ret
0x000000000046b770 : shr eax, 0x3f ; ret
0x0000000000430c2a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000430c09 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000043689c : shr ebx, cl ; ret
0x00000000004735bc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000473541 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000473510 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000045ab43 : shr edx, 2 ; sub eax, edx ; ret
0x0000000000468b6c : shr r8b, 0x2d ; jmp 0xffffffffc3d08b7c
0x00000000004735bb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000473540 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000047350f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000046b76f : shr rax, 0x3f ; ret
0x000000000045ab42 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000049586d : sldt word ptr [rax] ; enter 0xf, 0 ; retf
0x000000000043098b : sldt word ptr [rax] ; pop rbx ; lea rax, qword ptr [r8 + 1] ; pop rbp ; ret
0x0000000000495865 : sldt word ptr [rax] ; ret 0xf
0x0000000000495871 : sldt word ptr [rax] ; retf
0x00000000004051e6 : stc ; add al, 1 ; retf -0x1d7f
0x000000000044b632 : stc ; add cl, byte ptr [rax - 0x77] ; retf -0x76b8
0x0000000000487857 : stc ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000048a86a : stc ; call qword ptr [rax + 0x20fff9b3]
0x000000000048a9e2 : stc ; call qword ptr [rax + 0x20fff9db]
0x000000000048abba : stc ; call qword ptr [rax + 0x20fff9df]
0x000000000048a542 : stc ; call qword ptr [rax + 0x30fff92d]
0x000000000048a99a : stc ; call qword ptr [rax - 0x1f000663]
0x000000000048a946 : stc ; call qword ptr [rax - 0x1f00066a]
0x000000000048a58a : stc ; call qword ptr [rax - 0x1f0006b7]
0x000000000048a5c2 : stc ; call qword ptr [rax]
0x00000000004ade12 : stc ; call qword ptr [rbx]
0x00000000004ad832 : stc ; call qword ptr [rcx]
0x00000000004ad8c2 : stc ; call qword ptr [rdi]
0x000000000048aa8e : stc ; call qword ptr [rdx + 0x22fff9dd]
0x00000000004ad51a : stc ; call qword ptr [rdx]
0x000000000048a742 : stc ; call qword ptr [rsi + 0x16fff986]
0x000000000048a74a : stc ; call qword ptr [rsi + 0x16fff987]
0x000000000048a752 : stc ; call qword ptr [rsi + 0x26fff988]
0x000000000048a736 : stc ; call qword ptr [rsi]
0x000000000048a54a : stc ; call rax
0x000000000048a71a : stc ; call rcx
0x00000000004ae492 : stc ; call rdi
0x000000000048aa9e : stc ; call rdx
0x000000000048a762 : stc ; call rsi
0x000000000048ab66 : stc ; call rsp
0x0000000000474b6c : stc ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000463211 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000048454d : stc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048a9ae : stc ; dec dword ptr [rsi - 0x26] ; stc ; call rax
0x000000000048a586 : stc ; inc dword ptr [rax + 0x48] ; stc ; call qword ptr [rax - 0x1f0006b7]
0x000000000048ae96 : stc ; inc dword ptr [rax + 0xfff9c1] ; ret
0x000000000048abc6 : stc ; inc dword ptr [rax - 0x22] ; stc ; call rax
0x000000000048a952 : stc ; inc dword ptr [rax - 0x2f000666] ; wait ; stc ; jmp qword ptr [rax]
0x000000000048a596 : stc ; inc dword ptr [rax - 0x2f0006b3] ; stc ; jmp qword ptr [rax]
0x000000000048a91e : stc ; inc dword ptr [rax - 0x54] ; stc ; call qword ptr [rax]
0x000000000048a7f6 : stc ; inc dword ptr [rax - 0x56] ; stc ; jmp qword ptr [rax]
0x000000000048a996 : stc ; inc dword ptr [rax - 0x64] ; stc ; call qword ptr [rax - 0x1f000663]
0x000000000048a942 : stc ; inc dword ptr [rax - 0x6b] ; stc ; call qword ptr [rax - 0x1f00066a]
0x000000000048a7e6 : stc ; inc dword ptr [rax - 0x75] ; stc ; jmp rax
0x000000000048a9de : stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax + 0x20fff9db]
0x000000000048a6a2 : stc ; inc dword ptr [rax] ; jb 0x48a6a5 ; jmp qword ptr [rax]
0x000000000048abb6 : stc ; inc dword ptr [rax] ; loopne 0x48abbd ; call qword ptr [rax + 0x20fff9df]
0x000000000048a5be : stc ; inc dword ptr [rax] ; or edi, ecx ; call qword ptr [rax]
0x000000000048ae9a : stc ; inc dword ptr [rax] ; ret
0x000000000048ac26 : stc ; inc dword ptr [rax] ; sar ecx, 1 ; push qword ptr [rax - 0x30] ; stc ; jmp rsi
0x000000000048ab62 : stc ; inc dword ptr [rbx + rbx*8 - 7] ; call rsp
0x000000000048a716 : stc ; inc dword ptr [rcx - 0x77] ; stc ; call rcx
0x000000000048aa9a : stc ; inc dword ptr [rdx - 0x24] ; stc ; call rdx
0x000000000048acaa : stc ; inc dword ptr [rdx - 0x30] ; stc ; call rdx
0x000000000048a6da : stc ; inc dword ptr [rdx - 0x7b] ; stc ; jmp rax
0x000000000048a6d6 : stc ; inc dword ptr [rdx - 0x7c] ; stc ; inc dword ptr [rdx - 0x7b] ; stc ; jmp rax
0x000000000048aa8a : stc ; inc dword ptr [rdx] ; fdivp st(1) ; call qword ptr [rdx + 0x22fff9dd]
0x000000000048a9f6 : stc ; inc dword ptr [rsi - 0x20] ; stc ; call rsi
0x000000000048a75e : stc ; inc dword ptr [rsi - 0x76] ; stc ; call rsi
0x000000000048a732 : stc ; inc dword ptr [rsi - 0x7d] ; stc ; call qword ptr [rsi]
0x000000000048a5ae : stc ; inc eax ; add bh, cl ; call rax
0x000000000048a962 : stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x000000000048a69a : stc ; inc eax ; outsd dx, dword ptr [rsi] ; stc ; jmp rax
0x000000000048a67a : stc ; inc eax ; stc ; jmp rax
0x000000000048a976 : stc ; inc eax ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x000000000040e643 : stc ; je 0x40e485 ; ret
0x000000000041e4b2 : stc ; je 0x41e47e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000479982 : stc ; je 0x47994e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a9e64 : stc ; jle 0x4a9e60 ; jmp qword ptr [rdx]
0x0000000000407141 : stc ; jmp 0x407089
0x000000000048ade6 : stc ; jmp qword ptr [rax + 0x10fff9d0]
0x000000000048ac1a : stc ; jmp qword ptr [rax + 0x20fff9d2]
0x000000000048ac12 : stc ; jmp qword ptr [rax + 0x20fff9d3]
0x000000000048ac0a : stc ; jmp qword ptr [rax + 0x20fff9d4]
0x000000000048ac02 : stc ; jmp qword ptr [rax + 0x20fff9d5]
0x000000000048abfa : stc ; jmp qword ptr [rax + 0x20fff9d6]
0x000000000048a59e : stc ; jmp qword ptr [rax]
0x000000000048aa92 : stc ; jmp qword ptr [rdx]
0x000000000048a756 : stc ; jmp qword ptr [rsi]
0x000000000048a58e : stc ; jmp rax
0x00000000004820c9 : stc ; jmp rcx
0x000000000048aa82 : stc ; jmp rdx
0x000000000048aa1e : stc ; jmp rsi
0x000000000048ab4a : stc ; jmp rsp
0x00000000004a2304 : stc ; jnp 0x4a22c3 ; ret
0x000000000048adae : stc ; ljmp ptr [rdx + 0x50fff9cf] ; xlatb ; stc ; call rax
0x0000000000425bf8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043f7bf : stc ; mov eax, 0xea ; syscall
0x000000000040fd6e : stc ; mov eax, 3 ; syscall
0x000000000043383e : stc ; nop ; xor eax, eax ; leave ; ret
0x0000000000473127 : stc ; pop r15 ; ret
0x000000000048a54e : stc ; push qword ptr [rax + 0x32] ; stc ; call qword ptr [rax]
0x000000000048abc2 : stc ; push qword ptr [rax + 0x40fff9de] ; fdivp st(1) ; call rax
0x000000000048ac2a : stc ; push qword ptr [rax - 0x30] ; stc ; jmp rsi
0x000000000048a82e : stc ; push qword ptr [rax - 0x5a] ; stc ; push qword ptr [rax] ; test al, 0xf9 ; call qword ptr [rax]
0x000000000048a8ce : stc ; push qword ptr [rax - 0x5b] ; stc ; push qword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call qword ptr [rax]
0x000000000048a95e : stc ; push qword ptr [rax - 0x62] ; stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x000000000048a972 : stc ; push qword ptr [rax - 0x70] ; stc ; inc eax ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x000000000048a8d2 : stc ; push qword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call qword ptr [rax]
0x000000000048ade2 : stc ; push qword ptr [rax] ; sar ecx, 1 ; jmp qword ptr [rax + 0x10fff9d0]
0x000000000048a816 : stc ; push qword ptr [rax] ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x000000000048a8ba : stc ; push qword ptr [rax] ; stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x000000000048a832 : stc ; push qword ptr [rax] ; test al, 0xf9 ; call qword ptr [rax]
0x000000000048abf6 : stc ; push qword ptr [rax] ; xlatb ; stc ; jmp qword ptr [rax + 0x20fff9d6]
0x000000000048ab5e : stc ; push qword ptr [rbx + rbx*8 - 0x24bb0007] ; stc ; call rsp
0x000000000048a712 : stc ; push qword ptr [rcx + 0x41fff988] ; mov ecx, edi ; call rcx
0x000000000048aa96 : stc ; push qword ptr [rdx + 0x42fff9dc] ; fdiv st(1), st(0) ; call rdx
0x000000000048a75a : stc ; push qword ptr [rsi + 0x46fff989] ; mov bh, cl ; call rsi
0x000000000048a9f2 : stc ; push qword ptr [rsi + 0x46fff9e0] ; loopne 0x48a9fd ; call rsi
0x000000000048a766 : stc ; push qword ptr [rsi - 0x75] ; stc ; call qword ptr [rsi]
0x000000000048a81e : stc ; push rax ; lodsd eax, dword ptr [rsi] ; stc ; jmp rax
0x000000000048a5ba : stc ; push rax ; or cl, bh ; inc dword ptr [rax] ; or edi, ecx ; call qword ptr [rax]
0x000000000048a8da : stc ; push rax ; stosb byte ptr [rdi], al ; stc ; call rax
0x000000000048a83a : stc ; push rax ; stosd dword ptr [rdi], eax ; stc ; call rax
0x00000000004ac954 : stc ; pushfq ; clc ; jmp qword ptr [rdx]
0x0000000000437376 : stc ; ret
0x000000000049a9f0 : stc ; retf 0x44
0x0000000000466aa3 : std ; and al, 0xf ; xchg eax, esp ; ret 0xc031
0x00000000004a57d2 : std ; call qword ptr [rax + 0x10fffd44]
0x00000000004a57da : std ; call qword ptr [rax + 0x10fffd47]
0x00000000004a57e2 : std ; call qword ptr [rax + 0x10fffd4a]
0x00000000004a57ea : std ; call qword ptr [rax + 0x10fffd4d]
0x00000000004a57f2 : std ; call qword ptr [rax + 0x10fffd50]
0x00000000004a57fa : std ; call qword ptr [rax + 0x10fffd53]
0x00000000004a5802 : std ; call qword ptr [rax + 0x10fffd56]
0x00000000004a583a : std ; call qword ptr [rax - 0x1f0002ea]
0x00000000004a57ce : std ; call qword ptr [rax]
0x00000000004b365a : std ; call qword ptr [rbx]
0x00000000004a5e62 : std ; call qword ptr [rsi - 0x3d]
0x00000000004a5792 : std ; call rax
0x00000000004a5ffa : std ; call rsp
0x00000000004a8844 : std ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000004402ca : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a5f1e : std ; dec dword ptr [rax] ; retf -3
0x00000000004a5f3e : std ; dec dword ptr [rcx + 0x4dfffdc2] ; retf -3
0x00000000004a5f2a : std ; dec dword ptr [rcx + 0x8fffdca] ; retf -3
0x00000000004a5f32 : std ; dec dword ptr [rcx - 0x7600023e] ; ret 0xfffd
0x00000000004a5836 : std ; inc dword ptr [rax + 0x14] ; std ; call qword ptr [rax - 0x1f0002ea]
0x00000000004a57a2 : std ; inc dword ptr [rax + 0x2d] ; std ; jmp qword ptr [rax]
0x00000000004a57c2 : std ; inc dword ptr [rax + 0x3c] ; std ; jmp qword ptr [rax]
0x00000000004a60e6 : std ; inc dword ptr [rax + rbx*8 - 3] ; inc dword ptr [rax + rbx*8 - 3] ; jmp rsp
0x00000000004a60ea : std ; inc dword ptr [rax + rbx*8 - 3] ; jmp rsp
0x00000000004a57aa : std ; inc dword ptr [rax] ; xor ebp, edi ; jmp rax
0x00000000004a580a : std ; inc eax ; std ; jmp qword ptr [rax]
0x00000000004a5e66 : std ; inc ecx ; ret
0x000000000046b0ce : std ; jbe 0x46b0db ; ret
0x00000000004aa0ec : std ; jg 0x4aa0e8 ; jmp qword ptr [rdx]
0x00000000004a57a6 : std ; jmp qword ptr [rax]
0x00000000004a5e72 : std ; jmp qword ptr [rbx]
0x00000000004b12ea : std ; jmp qword ptr [rdi]
0x00000000004a975e : std ; jmp qword ptr [rdx]
0x00000000004a57ae : std ; jmp rax
0x00000000004a63ba : std ; jmp rbx
0x00000000004a5e6a : std ; jmp rdx
0x00000000004a60ee : std ; jmp rsp
0x00000000004a5eb6 : std ; ljmp ptr [rax + 0x49fffdc9] ; ret
0x000000000045f946 : std ; mov al, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004321c0 : std ; mov eax, 3 ; syscall
0x0000000000431d87 : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000042541b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000043dd29 : std ; or eax, 0x83482374 ; ret
0x000000000043e3e2 : std ; or eax, 0x83489074 ; ret
0x00000000004a323a : std ; retf
0x000000000042e46f : std ; retf 5
0x0000000000413971 : sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000413b54 : sti ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000485891 : sti ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000046565f : sti ; and al, 0 ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000410aaa : sti ; and byte ptr [rax + 0x6b], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000004b0f9a : sti ; call qword ptr [rax]
0x00000000004b1512 : sti ; call qword ptr [rdx]
0x00000000004b1122 : sti ; call rcx
0x00000000004b097a : sti ; call rdx
0x00000000004b0db2 : sti ; call rsi
0x00000000004afedd : sti ; cli ; jmp qword ptr [rdx]
0x00000000004a7111 : sti ; cmc ; call qword ptr [rbx]
0x00000000004a7155 : sti ; cmc ; jmp qword ptr [rdx]
0x000000000045a53a : sti ; cmp qword ptr [rsi + 0x30], 0 ; je 0x45a551 ; pop rbx ; ret
0x0000000000468265 : sti ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000457ae2 : sti ; dec dword ptr [rcx - 0x73] ; dec dword ptr [r8 + 0x39] ; ret
0x000000000045548a : sti ; inc dword ptr [rbx - 0x7af00008] ; call rdi
0x00000000004455c6 : sti ; inc dword ptr [rbx - 0x7bf00008] ; retf
0x000000000040c728 : sti ; je 0x40c734 ; pop rbx ; ret
0x00000000004b11d2 : sti ; jmp qword ptr [rdx]
0x00000000004b0382 : sti ; jmp rsp
0x00000000004257f8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004a248a : sti ; ret
0x0000000000470778 : sti ; ret 0xffbf
0x0000000000486505 : sti ; test eax, eax ; jne 0x486516 ; pop rbx ; ret
0x000000000043f007 : sti ; test rax, rax ; je 0x43f015 ; call rax
0x00000000004b0f95 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; or byte ptr [rdi - 5], bh ; call qword ptr [rax]
0x000000000046f99b : stosb byte ptr [rdi], al ; add eax, 0xb8480000 ; retf -2
0x00000000004aeb45 : stosb byte ptr [rdi], al ; cli ; jmp qword ptr [rdx]
0x00000000004a2964 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004a9997 : stosb byte ptr [rdi], al ; idiv bh ; sbb al, 0xd ; movsxd rsi, esi ; jmp qword ptr [rdx]
0x000000000046af61 : stosb byte ptr [rdi], al ; retf
0x000000000048a819 : stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x000000000048a8dd : stosb byte ptr [rdi], al ; stc ; call rax
0x000000000048a91d : stosb byte ptr [rdi], al ; stc ; inc dword ptr [rax - 0x54] ; stc ; call qword ptr [rax]
0x000000000048a7f9 : stosb byte ptr [rdi], al ; stc ; jmp qword ptr [rax]
0x000000000048a839 : stosb byte ptr [rdi], al ; stc ; push rax ; stosd dword ptr [rdi], eax ; stc ; call rax
0x000000000047f9e9 : stosd dword ptr [rdi], eax ; call rbx
0x00000000004aced9 : stosd dword ptr [rdi], eax ; clc ; jmp rcx
0x00000000004a982f : stosd dword ptr [rdi], eax ; idiv bh ; sbb al, 0xd ; ficom word ptr [rdx - 0xa] ; jmp qword ptr [rdx]
0x000000000040c61c : stosd dword ptr [rdi], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000412509 : stosd dword ptr [rdi], eax ; mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000004570a1 : stosd dword ptr [rdi], eax ; ret
0x00000000004a396a : stosd dword ptr [rdi], eax ; retf -0x5d02
0x000000000048a8bd : stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x000000000048a83d : stosd dword ptr [rdi], eax ; stc ; call rax
0x00000000004a3e51 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004adb0c : sub al, 0x24 ; stc ; jmp qword ptr [rdx]
0x0000000000474dd4 : sub al, 0x25 ; and al, 0 ; jmp rax
0x0000000000400771 : sub al, 0x74 ; or byte ptr [rax - 0xb700b6], cl ; retf -0x6f15
0x0000000000433a19 : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004af544 : sub al, 0x90 ; add byte ptr [rax], al ; test al, 0xc0 ; cli ; jmp rdx
0x0000000000422983 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a6e44 : sub al, 9 ; add byte ptr [rax], al ; cmp bl, ch ; cmc ; jmp rbx
0x000000000040d809 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040d7a4 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a8e17], 1 ; ret
0x000000000040e2cd : sub al, byte ptr [rax] ; add ebx, esi ; ret
0x000000000040bd55 : sub al, byte ptr [rax] ; jne 0x40d834 ; ret
0x000000000040d7e0 : sub al, byte ptr [rax] ; jne 0x40dab6 ; ret
0x000000000040edd8 : sub al, byte ptr [rax] ; jne 0x41446b ; ret
0x00000000004101c9 : sub al, byte ptr [rax] ; jne 0x414535 ; pop rbx ; ret
0x00000000004120af : sub al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d725 : sub al, byte ptr [rax] ; ret
0x000000000041333d : sub al, byte ptr [rax] ; test rax, rax ; je 0x41334d ; call rax
0x000000000040f558 : sub al, byte ptr [rax] ; test rdx, rdx ; je 0x40f568 ; call rdx
0x00000000004505fa : sub al, byte ptr [rbx - 0x1cf43] ; call qword ptr [rax]
0x00000000004743a7 : sub al, ch ; ret
0x00000000004b1e1d : sub bh, ah ; jmp qword ptr [rdx]
0x000000000045df53 : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000043370e : sub byte ptr [r8], r8b ; cmp rdx, rax ; jne 0x4336f9 ; ret
0x000000000047fd83 : sub byte ptr [rax + 0x39], cl ; ret
0x000000000045bd96 : sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043de27 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000462b64 : sub byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004a8d3d : sub byte ptr [rax], al ; add byte ptr [rax], ah ; xor dh, dh ; jmp rbx
0x0000000000462fcb : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004333ab : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043370f : sub byte ptr [rax], al ; cmp rdx, rax ; jne 0x4336f8 ; ret
0x000000000046b1bf : sub byte ptr [rax], al ; jne 0x46b1d8 ; add rsp, 0x38 ; ret
0x0000000000434c15 : sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004358e5 : sub byte ptr [rax], al ; ret
0x0000000000434974 : sub byte ptr [rax], al ; test eax, eax ; je 0x434986 ; ret
0x0000000000432465 : sub byte ptr [rax], al ; test rax, rax ; je 0x432476 ; ret
0x00000000004ade28 : sub byte ptr [rax], ch ; stc ; call qword ptr [rax]
0x0000000000435c6b : sub byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf
0x00000000004ac038 : sub byte ptr [rbp - 8], ch ; call qword ptr [rdx]
0x00000000004060fb : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000045df54 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040928d : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000434953 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000434952 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000040cf44 : sub byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000045ff8c : sub byte ptr [rcx + 0x81bed8], cl ; add byte ptr [rax], al ; syscall
0x0000000000410e32 : sub byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x20 ; call rax
0x00000000004105c2 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000412f92 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000046b855 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x0000000000438213 : sub byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x77], r9b ; retf 0x2948
0x000000000045ae57 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000481ee6 : sub byte ptr [rcx], dh ; rol byte ptr [rbp + 0xf], 0xb6 ; adc byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000410e43 : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0x3d ; ret 0x2a39
0x000000000047504b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000004ade29 : sub cl, bh ; call qword ptr [rax]
0x00000000004ade11 : sub cl, bh ; call qword ptr [rbx]
0x00000000004ade41 : sub cl, bh ; call qword ptr [rdx]
0x00000000004649c3 : sub dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a8301 : sub dh, dh ; call qword ptr [rax]
0x00000000004a83f9 : sub dh, dh ; jmp rax
0x0000000000460fa1 : sub dh, dh ; ret 0xf04
0x0000000000433442 : sub dl, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000000004a280d : sub dword ptr [rax + 0x1e], eax ; cli ; test dl, bh ; retf -0x2081
0x000000000043bc66 : sub dword ptr [rax + 1], ecx ; retf -0x76b8
0x000000000045fc79 : sub dword ptr [rax - 0x77], ecx ; loope 0x45fc0c ; ret 0xf631
0x00000000004a34a2 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x0000000000423a47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423a5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423b97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423bad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423ce7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423cfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423e37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423e4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423f87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423f9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004240d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4240ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424227 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42423d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424377 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42438d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004244c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4244dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424617 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42462d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424767 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42477d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004248b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4248cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424a07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x424a1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424b57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x424b6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000424ca7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x424cbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004239a3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042399f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000423a4d : sub dword ptr [rdi], esp ; jmp r9
0x000000000040e2cc : sub dword ptr [rdx], 0 ; add ebx, esi ; ret
0x0000000000433441 : sub dword ptr [rdx], 0x17 ; add byte ptr [rax], al ; ret
0x0000000000423166 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004a3d5a : sub dword ptr [rsi], 0x76 ; retf
0x000000000048a545 : sub eax, 0x2f30fff9 ; stc ; call rax
0x000000000048362f : sub eax, 0x63480002 ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000446670 : sub eax, 0x83000000 ; ret 0x8b01
0x000000000046568f : sub eax, 0x85ffffff ; sal byte ptr [rbp + 2], 0x5b ; ret
0x0000000000468b6f : sub eax, 0x89ffffe9 ; ret
0x00000000004a14a6 : sub eax, 0xea4ca798 ; retf
0x000000000043da64 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000430774 : sub eax, 1 ; ret
0x000000000046b616 : sub eax, dword ptr [0] ; ret
0x0000000000400d5e : sub eax, dword ptr [r8] ; pop r12 ; ret
0x0000000000400d5d : sub eax, dword ptr [r8d] ; pop r12 ; ret
0x0000000000400f68 : sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000404f59 : sub eax, dword ptr [rax] ; jne 0x404fd9 ; jmp 0x404f6f
0x0000000000400d5f : sub eax, dword ptr [rax] ; pop r12 ; ret
0x00000000004016de : sub eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000000000401b5f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047d833 : sub eax, dword ptr [rcx + r8*4] ; je 0x47d817 ; ret
0x000000000047d834 : sub eax, dword ptr [rcx + rax*4] ; je 0x47d816 ; ret
0x000000000040e15e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000430dac : sub eax, dword ptr [rdx + rcx*4] ; je 0x430d96 ; ret
0x000000000040d463 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000474731 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000045a98a : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x000000000040c917 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c9fa : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000040abc4 : sub eax, ebx ; jmp 0x40ab96
0x000000000040cd49 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000041613c : sub eax, ecx ; ret
0x0000000000417231 : sub eax, edi ; ret
0x00000000004651c9 : sub eax, edx ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000040d48b : sub eax, edx ; ret
0x000000000046b7ff : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000046b76d : sub eax, edx ; shr rax, 0x3f ; ret
0x000000000045b00a : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040adc9 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047e493 : sub eax, esp ; pop rbp ; sar rax, 3 ; pop r12 ; ret
0x00000000004a9996 : sub ebp, dword ptr [rdx + 0xd1cfff6] ; movsxd rsi, esi ; jmp qword ptr [rdx]
0x00000000004a26fe : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004a1195 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000040f734 : sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000474aa5 : sub ecx, dword ptr [rbx + 0x58] ; add rdx, rcx ; jmp 0x474a3c
0x0000000000413974 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000047dd8a : sub ecx, eax ; lea rax, qword ptr [r8 + rcx] ; ret
0x0000000000434a5c : sub ecx, eax ; shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x00000000004a57a1 : sub edi, ebp ; inc dword ptr [rax + 0x2d] ; std ; jmp qword ptr [rax]
0x00000000004b1f6d : sub edi, esp ; jmp qword ptr [rdx]
0x000000000040d490 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000040d485 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004197a4 : sub edx, eax ; jbe 0x4197e7 ; add rax, rdi ; ret
0x00000000004197b4 : sub edx, eax ; jbe 0x4197e9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000004197c4 : sub edx, eax ; jbe 0x4197e9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004197d4 : sub edx, eax ; jbe 0x4197e9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000046ab40 : sub edx, eax ; mov eax, edx ; ret
0x000000000040dc09 : sub edx, ebp ; call 0x419e54
0x000000000046c21e : sub edx, ecx ; jmp 0x46c25f
0x000000000046b7bd : sub edx, ecx ; not eax ; and eax, edx ; ret
0x0000000000468260 : sub edx, esi ; call 0x419e59
0x000000000040a662 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000004004d0 : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x4004ae
0x00000000004685b4 : sub esp, 0x1000 ; mov rsi, rsp ; syscall
0x0000000000487ab9 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000400f67 : sub r8, qword ptr [rax] ; add ebx, esi ; ret
0x000000000040cd48 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000430773 : sub rax, 1 ; ret
0x000000000046b615 : sub rax, qword ptr [0] ; ret
0x000000000040e15d : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000046b614 : sub rax, qword ptr fs:[0] ; ret
0x000000000040adc8 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045a989 : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000045b009 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000045c9f9 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000040abc3 : sub rax, rbx ; jmp 0x40ab97
0x0000000000417230 : sub rax, rdi ; ret
0x000000000046b76c : sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000474aa4 : sub rcx, qword ptr [rbx + 0x58] ; add rdx, rcx ; jmp 0x474a3d
0x0000000000474aa3 : sub rcx, qword ptr [rbx + 0x58] ; add rdx, rcx ; jmp 0x474a3e
0x0000000000474aa2 : sub rcx, qword ptr [rbx + 0x58] ; add rdx, rcx ; jmp 0x474a3f
0x000000000047dd89 : sub rcx, rax ; lea rax, qword ptr [r8 + rcx] ; ret
0x00000000004197a3 : sub rdx, rax ; jbe 0x4197e8 ; add rax, rdi ; ret
0x000000000040dc08 : sub rdx, rbp ; call 0x419e55
0x000000000046c21d : sub rdx, rcx ; jmp 0x46c260
0x000000000040a661 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000487ab8 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000400417 : syscall
0x0000000000476a8c : test ah, al ; or eax, 0x894d0000 ; retf
0x0000000000477a5b : test ah, cl ; sbb eax, 0x894d0000 ; retf
0x00000000004449bb : test ah, dh ; retf
0x000000000040cb31 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000484753 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004b0dad : test al, 0 ; add byte ptr [rax], dl ; ja 0x4b0db4 ; call rsi
0x00000000004864e4 : test al, 0x11 ; and eax, dword ptr [rax] ; pop rbx ; mov qword ptr [rsi + 0x28], rax ; ret
0x0000000000448746 : test al, 0x49 ; add byte ptr [rax + 0xf], cl ; retf 0xf4c
0x0000000000435a64 : test al, 0x56 ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r15
0x00000000004a1a57 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004ace08 : test al, 0xa2 ; clc ; call qword ptr [rsi]
0x00000000004a143e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x00000000004af288 : test al, 0xb9 ; cli ; jmp qword ptr [rdx]
0x00000000004af548 : test al, 0xc0 ; cli ; jmp rdx
0x000000000048a835 : test al, 0xf9 ; call qword ptr [rax]
0x000000000048a7f5 : test al, 0xf9 ; inc dword ptr [rax - 0x56] ; stc ; jmp qword ptr [rax]
0x000000000048a815 : test al, 0xf9 ; push qword ptr [rax] ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x00000000004aeab1 : test al, 0xfa ; call qword ptr [rdx]
0x000000000047b60c : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000421d9a : test al, al ; jne 0x421d88 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000047bf0c : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000475cac : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004353af : test al, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x49f1
0x00000000004ac6a1 : test bh, al ; call qword ptr [rax]
0x000000000046b925 : test bh, bh ; cmove eax, edx ; add rsp, 8 ; ret
0x000000000046b955 : test bh, bh ; cmovne eax, edx ; add rsp, 8 ; ret
0x000000000048a739 : test bh, cl ; call qword ptr [rsi]
0x000000000048a6d9 : test bh, cl ; inc dword ptr [rdx - 0x7b] ; stc ; jmp rax
0x000000000048a7bd : test bh, cl ; jmp rax
0x000000000044625c : test bl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x0000000000403480 : test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; retf -0x74bb
0x000000000040dc07 : test byte ptr [rax + 0x29], 0xea ; call 0x419e56
0x000000000043f7bc : test byte ptr [rax + 0x63], 0xf9 ; mov eax, 0xea ; syscall
0x0000000000431b97 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x000000000046dcd4 : test byte ptr [rax + rax + 0x39480000], ch ; ret
0x000000000045e7b7 : test byte ptr [rax + rax - 0x76b40000], dh ; ret 0x3948
0x000000000043b588 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043c4ae : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; retf 0x6608
0x0000000000448c6d : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000477fb8 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x0000000000460cf3 : test byte ptr [rax + rsi*4], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004363b3 : test byte ptr [rax - 0x39], cl ; ret
0x0000000000484cd2 : test byte ptr [rax - 0x77], 0xdf ; call r15
0x000000000047c5cc : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042eaba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000042defa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040d74a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000040d70a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000430bda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040d6ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e8fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047cecc : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047bccc : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047683c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000431ae8 : test byte ptr [rax], dh ; add byte ptr [rax], al ; ret
0x00000000004362e2 : test byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x0000000000478ae8 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000465104 : test byte ptr [rbp + rdi*8 - 1], al ; dec dword ptr [rax - 0x7d] ; ret 0x3110
0x0000000000474dd1 : test byte ptr [rbx + 0x24252c3d], 0 ; jmp rax
0x0000000000403e15 : test byte ptr [rbx + 0x2740714], 0xf ; retf -0x76bf
0x000000000047fb39 : test byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000478cc8 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004462c8 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x00000000004ab89c : test byte ptr [rbx], dl ; add al, dh ; sal edi, 1 ; call qword ptr [rax]
0x000000000047de56 : test byte ptr [rcx + 0x5d], 0x41 ; pop rsi ; pop r15 ; jmp rax
0x000000000043442f : test byte ptr [rcx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000478ea8 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x000000000046d4bd : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000004164b6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004ac69c : test byte ptr [rcx], ah ; add al, dl ; test bh, al ; call qword ptr [rax]
0x000000000043f17a : test byte ptr [rcx], dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x000000000045b474 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x0000000000479088 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x000000000046fb45 : test byte ptr [rdi], 0x84 ; lar eax, word ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000460772 : test byte ptr [rdi], 0x84 ; ret
0x0000000000435c6e : test byte ptr [rdi], 0x84 ; retf
0x00000000004681c9 : test byte ptr [rdi], 0x94 ; ret
0x000000000040a482 : test byte ptr [rdi], 0x95 ; ret 0x8445
0x00000000004533d2 : test byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000046fb47 : test byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004abc9c : test byte ptr [rdi], dl ; add al, ah ; pop rsp ; clc ; jmp qword ptr [rdi]
0x00000000004333e8 : test byte ptr [rdi], dl ; add byte ptr [rax], al ; ret
0x0000000000477dd8 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045628c : test byte ptr [rdx - 0x1600002d], cl ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x000000000043996a : test byte ptr [rdx - 0x77000000], ch ; ret 0xe281
0x0000000000400c57 : test byte ptr [rip + 0x5b000001], dl ; pop rbp ; pop r12 ; ret
0x0000000000467866 : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0xbb01
0x0000000000478188 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000448b35 : test byte ptr [rsi], bl ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf 0x3145
0x0000000000479fbe : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000479cbe : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x000000000047aebe : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047a5be : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047a8be : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000477bf8 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000430bf2 : test ch, 0xf0 ; je 0x430beb ; movzx eax, cl ; pop rbx ; ret
0x00000000004a4364 : test ch, bh ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004055c0 : test ch, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000417586 : test ch, cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000417886 : test ch, cl ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000418786 : test ch, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000418486 : test ch, cl ; add eax, 0x894d0000 ; retf
0x0000000000418186 : test ch, cl ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000417e86 : test ch, cl ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000461c2e : test cl, 0xe1 ; or byte ptr [rcx], al ; retf -0x1d3f
0x00000000004802e3 : test cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000046dccb : test cl, al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000004303ff : test cl, cl ; jne 0x4303f4 ; ret
0x00000000004304af : test cl, cl ; jne 0x4304a4 ; ret
0x000000000043076f : test cl, cl ; jne 0x430768 ; sub rax, 1 ; ret
0x0000000000430c1a : test dh, 0xf0 ; je 0x430be9 ; movzx eax, dl ; pop rbx ; ret
0x0000000000430c1a : test dh, 0xf0 ; je 0x430beb ; movzx eax, dl ; pop rbx ; ret
0x0000000000478548 : test dh, ah ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004372ad : test dh, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000479448 : test dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046a2b1 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000004449ae : test dh, bl ; retf
0x00000000004375e5 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x000000000048a6d8 : test dil, cl ; inc dword ptr [rdx - 0x7b] ; stc ; jmp rax
0x000000000042e944 : test dl, 0x40 ; jne 0x42e909 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000042e972 : test dl, 4 ; jne 0x42e909 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000478368 : test dl, ah ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000479268 : test dl, ah ; add eax, 0x894d0000 ; retf
0x000000000047639c : test dl, al ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a2811 : test dl, bh ; retf -0x2081
0x0000000000407484 : test dl, dh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000046b939 : test dl, dl ; cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000406182 : test dl, dl ; jne 0x406164 ; ret
0x000000000043061f : test dl, dl ; jne 0x430618 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000044c8cd : test dword ptr [rax + 0x29ffffef], ecx ; retf -0x2fc7
0x000000000047f0e6 : test dword ptr [rax + 0x39], 0x430f48c2 ; ret 0x8348
0x000000000041a3e9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000443d05 : test dword ptr [rax - 0x14000006], ebp ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000004426db : test dword ptr [rax - 0x17000006], esi ; retf
0x000000000044bbb7 : test dword ptr [rax - 0x17000011], ebp ; lahf ; retf -1
0x000000000045ab02 : test dword ptr [rax - 0x77], 0xe8082474 ; ret
0x000000000040d40a : test dword ptr [rax - 0x77], 0xe8082474 ; retf
0x0000000000450308 : test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x000000000044389f : test dword ptr [rax - 0x7c000005], edi ; ret 0x8908
0x000000000044390f : test dword ptr [rax - 0x7c000005], edi ; ret 0x8910
0x0000000000401532 : test dword ptr [rax - 9], 0xaf0f48f3 ; ret
0x000000000046a2b2 : test dword ptr [rax], 0x89480000 ; ret 0x2b49
0x0000000000409faa : test dword ptr [rax], ecx ; pop rbx ; ret
0x000000000041fd8f : test dword ptr [rbp - 0xc000004], esp ; ret
0x00000000004101cc : test dword ptr [rbx + 0x43], ebx ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004127cd : test dword ptr [rbx + 0x48000020], eax ; mov eax, ebx ; pop rbx ; ret
0x0000000000422c67 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004230b6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041971a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000041a100 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000422c3d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000422b4d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000422a5d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041a2ea : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000041fba5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000422982 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000040eddb : test dword ptr [rdx - 0xcffffaa], eax ; ret
0x000000000044ea72 : test dword ptr [rip - 0x16000028], ebx ; retf -0x40
0x0000000000430182 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041fe8e : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000044f3eb : test dword ptr [rsi], ebp ; retf
0x0000000000422e88 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a28ed : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000004a3740 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000426106 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048a8d9 : test eax, 0xaaf0fff9 ; stc ; call rax
0x000000000048a8b9 : test eax, 0xab30fff9 ; stc ; call qword ptr [rax]
0x00000000004a9a6f : test eax, 0xd1cfff6 ; ret 0xf665
0x00000000004a99df : test eax, 0xd1cfff6 ; sbb esp, dword ptr [rbx - 0xa] ; jmp qword ptr [rdx]
0x0000000000464fbf : test eax, eax ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], al ; ret 0x8944
0x0000000000400f58 : test eax, eax ; je 0x400f6c ; mov edi, 0x4a6518 ; call rax
0x0000000000400f9d : test eax, eax ; je 0x400fb1 ; mov edi, 0x6b3ee8 ; call rax
0x00000000004027e7 : test eax, eax ; je 0x4027fb ; mov edi, 0x6b6060 ; call rax
0x0000000000402e83 : test eax, eax ; je 0x402e9e ; mov edi, 0x6b6060 ; call rax
0x0000000000403129 : test eax, eax ; je 0x40313d ; mov edi, 0x6b60c0 ; call rax
0x0000000000409f87 : test eax, eax ; je 0x409f95 ; pop rbx ; ret
0x0000000000413340 : test eax, eax ; je 0x41334a ; call rax
0x0000000000416ec3 : test eax, eax ; je 0x416ecf ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000430e96 : test eax, eax ; je 0x430eaa ; mov edi, 0x6b7060 ; call rax
0x0000000000430fb0 : test eax, eax ; je 0x430fc4 ; mov edi, 0x6b7060 ; call rax
0x0000000000432468 : test eax, eax ; je 0x432473 ; ret
0x00000000004347e1 : test eax, eax ; je 0x4347f5 ; mov edi, 0x6b5140 ; call rax
0x0000000000434976 : test eax, eax ; je 0x434984 ; ret
0x000000000043dedf : test eax, eax ; je 0x43def3 ; mov edi, 0x6b7060 ; call rax
0x000000000043df04 : test eax, eax ; je 0x43df18 ; mov edi, 0x6b7060 ; call rax
0x000000000043e010 : test eax, eax ; je 0x43e01a ; call rax
0x000000000043e06f : test eax, eax ; je 0x43e083 ; mov edi, 0x6b7060 ; call rax
0x000000000043e176 : test eax, eax ; je 0x43e18a ; mov edi, 0x6b7060 ; call rax
0x000000000043e2f0 : test eax, eax ; je 0x43e2fa ; call rax
0x000000000043e37c : test eax, eax ; je 0x43e390 ; mov edi, 0x6b7060 ; call rax
0x000000000043e45b : test eax, eax ; je 0x43e476 ; mov edi, 0x6b7060 ; call rax
0x000000000043f009 : test eax, eax ; je 0x43f013 ; call rax
0x000000000045fd2c : test eax, eax ; je 0x45fd36 ; call rax
0x000000000045ff69 : test eax, eax ; je 0x45ff77 ; call rax
0x00000000004641d0 : test eax, eax ; je 0x463ef5 ; call rax
0x0000000000463f4b : test eax, eax ; je 0x463f55 ; call rax
0x00000000004645ac : test eax, eax ; je 0x4645c0 ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000465232 : test eax, eax ; je 0x465246 ; mov edi, 0x6b5100 ; call rax
0x0000000000468b9c : test eax, eax ; je 0x468bb0 ; mov edi, 0x6b5140 ; call rax
0x0000000000468c20 : test eax, eax ; je 0x468c34 ; mov edi, 0x6b5140 ; call rax
0x0000000000468ce5 : test eax, eax ; je 0x468cf9 ; mov edi, 0x6b5140 ; call rax
0x0000000000469f32 : test eax, eax ; je 0x469f46 ; mov edi, 0x6b5100 ; call rax
0x000000000046a47d : test eax, eax ; je 0x46a491 ; mov edi, 0x6b5140 ; call rax
0x000000000046b469 : test eax, eax ; je 0x46b43e ; mov edi, 0x6b5140 ; call rax
0x000000000046b5ba : test eax, eax ; je 0x46b5ce ; mov edi, 0x6b5140 ; call rax
0x0000000000475130 : test eax, eax ; je 0x475141 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ff96 : test eax, eax ; je 0x47ffaa ; mov edi, 0x6b5140 ; call rax
0x0000000000480078 : test eax, eax ; je 0x48008c ; mov edi, 0x6b5140 ; call rax
0x00000000004818e0 : test eax, eax ; je 0x4818f4 ; mov edi, 0x6b5140 ; call rax
0x0000000000481965 : test eax, eax ; je 0x481979 ; mov edi, 0x6b5140 ; call rax
0x0000000000486d88 : test eax, eax ; je 0x486d9c ; mov edi, 0x6b5100 ; call rax
0x0000000000486e49 : test eax, eax ; je 0x486e5d ; mov edi, 0x6b5100 ; call rax
0x0000000000487403 : test eax, eax ; je 0x48740d ; call rax
0x000000000040d444 : test eax, eax ; jne 0x40d43d ; ret
0x0000000000419757 : test eax, eax ; jne 0x4197b7 ; xor rax, rax ; ret
0x0000000000433276 : test eax, eax ; jne 0x433249 ; movsxd rdi, r15d ; mov al, 3 ; syscall
0x00000000004334af : test eax, eax ; jne 0x4334ab ; pop rdx ; pop r10 ; ret
0x000000000045cd99 : test eax, eax ; jne 0x45cd58 ; nop dword ptr [rax] ; ret
0x00000000004606b1 : test eax, eax ; jne 0x46071c ; mov rax, r9 ; ret
0x0000000000465693 : test eax, eax ; jne 0x46569e ; pop rbx ; ret
0x0000000000486506 : test eax, eax ; jne 0x486515 ; pop rbx ; ret
0x0000000000486712 : test eax, eax ; jne 0x486725 ; ret
0x000000000046576a : test eax, eax ; js 0x465775 ; pop rbx ; ret
0x000000000047483b : test eax, eax ; js 0x47484d ; ret
0x000000000040d7e3 : test eax, ebp ; add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000046237a : test eax, esi ; add byte ptr [rax], al ; jmp 0x462319
0x0000000000419680 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000044e9ff : test ebp, ecx ; ret 0xffff
0x00000000004127f5 : test ebx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000411fc0 : test ebx, ebx ; add byte ptr es:[rax], al ; jmp 0x411fdc
0x0000000000402730 : test ebx, ebx ; je 0x40274b ; mov edi, 0x6b7060 ; call rbx
0x0000000000436899 : test ebx, ebx ; jne 0x436875 ; jmp 0x436867
0x0000000000474b54 : test ebx, ebx ; jne 0x474b68 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000486f13 : test ebx, ebx ; jne 0x486f05 ; pop rbx ; ret
0x000000000048713f : test ebx, ebx ; jne 0x487136 ; pop rbx ; ret
0x000000000044f1ab : test ebx, ebx ; ret
0x000000000042e932 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004449c8 : test ebx, ecx ; retf
0x000000000046262b : test ebx, edi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; retf -0x3015
0x000000000042e93f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000044e1cb : test ecx, edi ; retf
0x000000000044f20b : test ecx, esi ; ret 0xffff
0x000000000040bd58 : test ecx, esi ; sbb al, byte ptr [rax] ; add bl, dh ; ret
0x000000000048a73d : test edi, ecx ; call qword ptr [rsi]
0x000000000048a6dd : test edi, ecx ; jmp rax
0x0000000000432d41 : test edi, edi ; jne 0x432d55 ; ret
0x000000000048291e : test edx, eax ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x0000000000414283 : test edx, edi ; je 0x414296 ; pop rbx ; ret
0x000000000043335b : test edx, edx ; cmovne eax, edx ; ret
0x000000000040f55b : test edx, edx ; je 0x40f565 ; call rdx
0x00000000004170b9 : test edx, edx ; je 0x4170c7 ; bsf eax, edx ; ret
0x00000000004170b9 : test edx, edx ; je 0x4170c8 ; bsf eax, edx ; ret
0x0000000000417162 : test edx, edx ; je 0x417177 ; bsf rax, rdx ; ret
0x0000000000417162 : test edx, edx ; je 0x417178 ; bsf rax, rdx ; ret
0x0000000000417106 : test edx, edx ; je 0x417188 ; bsf rax, rdx ; ret
0x000000000045b4e1 : test edx, edx ; je 0x45b507 ; bsf rax, rdx ; ret
0x000000000045b4e1 : test edx, edx ; je 0x45b508 ; bsf rax, rdx ; ret
0x000000000045fee9 : test edx, edx ; je 0x45fef7 ; call rdx
0x00000000004876cd : test edx, edx ; je 0x4876dc ; call rdx
0x000000000040c36f : test edx, edx ; jne 0x40c365 ; ret
0x000000000045a02f : test edx, edx ; jne 0x45a025 ; ret
0x000000000045cdda : test edx, edx ; jne 0x45cdd5 ; ret
0x0000000000400e1b : test edx, edx ; jns 0x400d02 ; jmp 0x400df0
0x000000000040b313 : test edx, edx ; push rbx ; mov rbx, rdx ; jne 0x40b329 ; pop rbx ; ret
0x000000000042e925 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004562a5 : test edx, esi ; ret 0xffff
0x000000000043da50 : test esi, esi ; je 0x43da1e ; pop rbx ; ret
0x00000000004aa405 : test esi, esi ; jmp qword ptr [rdx]
0x000000000043f7a0 : test esi, esi ; jne 0x43f7e1 ; mov eax, 0xba ; syscall
0x000000000045b3d1 : test esi, esi ; jne 0x45b3e0 ; xor rax, rax ; ret
0x000000000046982a : test esp, eax ; or eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000416ec2 : test r8d, r8d ; je 0x416ed0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000045cd98 : test r8d, r8d ; jne 0x45cd59 ; nop dword ptr [rax] ; ret
0x00000000004606b0 : test r8d, r8d ; jne 0x46071d ; mov rax, r9 ; ret
0x0000000000409f86 : test rax, rax ; je 0x409f96 ; pop rbx ; ret
0x000000000041333f : test rax, rax ; je 0x41334b ; call rax
0x0000000000432467 : test rax, rax ; je 0x432474 ; ret
0x000000000043e00f : test rax, rax ; je 0x43e01b ; call rax
0x000000000043e2ef : test rax, rax ; je 0x43e2fb ; call rax
0x000000000043f008 : test rax, rax ; je 0x43f014 ; call rax
0x000000000045fd2b : test rax, rax ; je 0x45fd37 ; call rax
0x000000000045ff68 : test rax, rax ; je 0x45ff78 ; call rax
0x00000000004641cf : test rax, rax ; je 0x463ef6 ; call rax
0x0000000000463f4a : test rax, rax ; je 0x463f56 ; call rax
0x000000000047512f : test rax, rax ; je 0x475142 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487402 : test rax, rax ; je 0x48740e ; call rax
0x000000000040d443 : test rax, rax ; jne 0x40d43e ; ret
0x0000000000436898 : test rbx, rbx ; jne 0x436876 ; jmp 0x436868
0x0000000000474b53 : test rbx, rbx ; jne 0x474b69 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000486f12 : test rbx, rbx ; jne 0x486f06 ; pop rbx ; ret
0x000000000048713e : test rbx, rbx ; jne 0x487137 ; pop rbx ; ret
0x0000000000432d40 : test rdi, rdi ; jne 0x432d56 ; ret
0x0000000000414282 : test rdx, rdi ; je 0x414297 ; pop rbx ; ret
0x000000000040f55a : test rdx, rdx ; je 0x40f566 ; call rdx
0x0000000000417161 : test rdx, rdx ; je 0x417178 ; bsf rax, rdx ; ret
0x0000000000417161 : test rdx, rdx ; je 0x417179 ; bsf rax, rdx ; ret
0x0000000000417105 : test rdx, rdx ; je 0x417189 ; bsf rax, rdx ; ret
0x000000000045b4e0 : test rdx, rdx ; je 0x45b508 ; bsf rax, rdx ; ret
0x000000000045b4e0 : test rdx, rdx ; je 0x45b509 ; bsf rax, rdx ; ret
0x000000000045fee8 : test rdx, rdx ; je 0x45fef8 ; call rdx
0x00000000004876cc : test rdx, rdx ; je 0x4876dd ; call rdx
0x000000000040c36e : test rdx, rdx ; jne 0x40c366 ; ret
0x000000000045a02e : test rdx, rdx ; jne 0x45a026 ; ret
0x000000000045b3d0 : test rsi, rsi ; jne 0x45b3e1 ; xor rax, rax ; ret
0x000000000040ba2d : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000041e4b1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004ae98d : wait ; cli ; jmp qword ptr [rdx]
0x00000000004a9c66 : wait ; cmpsd dword ptr [rsi], dword ptr [rdi] ; idiv bh ; sbb al, 0xd ; idiv dword ptr [rcx - 0xa] ; jmp qword ptr [rdx]
0x000000000048a959 : wait ; stc ; jmp qword ptr [rax]
0x0000000000416ccf : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041d75f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004168bf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004163cb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f1cb : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000416bdb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f3ac : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000041ebcc : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000041efbc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e7dc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047b11d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479c21 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000047ae21 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047a521 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047a821 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479f19 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000448745 : xchg byte ptr [rax + 0xf480049], ch ; retf 0xf4c
0x000000000041e2bf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041da9f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000041664f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041d27f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000041698f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000044cf17 : xchg byte ptr [rax - 0x7d], cl ; ret
0x0000000000416cab : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e97b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416d7b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041dddf : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d5bf : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cd9f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000041df7f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000416b2f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041631f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000044eb35 : xchg byte ptr [rbx], dh ; retf
0x000000000041671f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000004a2615 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000041ee6c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e68c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f79c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000416bff : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004163ef : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041d0df : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416491 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004167ef : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000047a1c6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d215 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041df15 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047b0c6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a7c6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a4c6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041da35 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444bf9 : xchg byte ptr [rsi], bh ; enter -1, -0x17 ; cdq ; retf
0x000000000041ed6d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479ebe : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f69d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000416a5f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000478f4f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478d6f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479747 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000478667 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479567 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042785f : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000048a741 : xchg cl, bh ; call qword ptr [rsi + 0x16fff986]
0x000000000048a745 : xchg cl, bh ; call qword ptr [rsi]
0x000000000048a7c5 : xchg cl, bh ; jmp rax
0x000000000041e255 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d555 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041d075 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041dd75 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000048aa08 : xchg dh, bl ; stc ; call qword ptr [rsi]
0x000000000041eebd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041e6dd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004ab0a1 : xchg dh, dh ; call qword ptr [rdx]
0x00000000004aa495 : xchg dh, dh ; jmp qword ptr [rdx]
0x00000000004164b5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004547cf : xchg dword ptr [rax + rax - 0x7cb80000], edi ; ret
0x00000000004a2618 : xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x0000000000435d84 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x00000000004a219f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x000000000045149c : xchg dword ptr [rbp - 0x7cffffe3], ebx ; ret 0x8308
0x00000000004550be : xchg dword ptr [rbx - 0x77000000], esi ; ret 0x348
0x0000000000451530 : xchg dword ptr [rbx - 0x7cfffff5], esi ; ret 0x8308
0x00000000004a140c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000483d92 : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x00000000004334ad : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x4334ad ; pop rdx ; pop r10 ; ret
0x0000000000455ac4 : xchg dword ptr [rip - 0x76ffffff], ebx ; ret 0x348
0x0000000000452f9b : xchg dword ptr [rsi - 0x7cfffffe], esi ; ret 0x8308
0x00000000004a15ab : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004782a8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004ae6fc : xchg eax, ebp ; adc edi, edx ; jmp qword ptr [rdx]
0x00000000004a18e9 : xchg eax, ebp ; jge 0x4a18cc ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004006ae : xchg eax, ebp ; ret
0x0000000000461e62 : xchg eax, ebp ; ret 0x474
0x000000000046c158 : xchg eax, ebp ; ret 0x53c
0x00000000004097d3 : xchg eax, ebp ; ret 0x60e9
0x0000000000410ab0 : xchg eax, ebp ; ret 0x8348
0x000000000040e533 : xchg eax, ebp ; ret 0x8441
0x000000000040a484 : xchg eax, ebp ; ret 0x8445
0x000000000046bc37 : xchg eax, ebp ; ret 0x8545
0x0000000000411a0d : xchg eax, ebp ; ret 0x948
0x000000000046ba95 : xchg eax, ebp ; ret 0xb60f
0x000000000046bb3d : xchg eax, ebp ; ret 0xc748
0x0000000000433c8d : xchg eax, ebp ; ret 0xd009
0x000000000047e12a : xchg eax, ebp ; ret 0xd138
0x0000000000409738 : xchg eax, ebp ; ret 0xd284
0x000000000046bb94 : xchg eax, ebp ; ret 0xd348
0x000000000045d0ac : xchg eax, ebp ; ret 0xd7e9
0x0000000000407d07 : xchg eax, ebp ; ret 0xdaf7
0x00000000004349b1 : xchg eax, ebp ; ret 0xe1eb
0x000000000045d4a5 : xchg eax, ebp ; ret 0xf748
0x000000000045cf18 : xchg eax, ebp ; ret 0xf883
0x00000000004a5f28 : xchg eax, ebp ; retf -3
0x00000000004a21a2 : xchg eax, ebp ; retf 0x33e6
0x000000000040b329 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x000000000048a945 : xchg eax, ebp ; stc ; call qword ptr [rax - 0x1f00066a]
0x00000000004a35fc : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x000000000040c882 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000044c122 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000004af825 : xchg eax, ebx ; add byte ptr [rax], al ; pop rax ; sar dl, 1 ; call rax
0x00000000004af8ed : xchg eax, ebx ; add byte ptr [rax], al ; rcl ah, 1 ; cli ; jmp qword ptr [rdx]
0x0000000000421dd0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004a3f8c : xchg eax, ebx ; in al, dx ; retf -0x51ce
0x000000000042ddbc : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000423552 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004a34a3 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4a347d
0x00000000004a5f18 : xchg eax, ebx ; retf -3
0x00000000004af6ad : xchg eax, ecx ; add byte ptr [rax], al ; retf -6
0x0000000000436aab : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041e361 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000045362b : xchg eax, ecx ; retf
0x000000000048a979 : xchg eax, ecx ; stc ; call qword ptr [rax]
0x000000000041ca8f : xchg eax, ecx ; sub eax, edx ; ret
0x000000000044ad1b : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10eb43], al ; call qword ptr [rax]
0x000000000044b507 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x113f43], al ; call qword ptr [rax]
0x00000000004a9d86 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; idiv bh ; sbb al, 0xd ; pop rdx ; jle 0x4a9d8e ; jmp qword ptr [rdx]
0x00000000004a1955 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a1923 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a1b87 : xchg eax, edi ; jo 0x4a1bf4 ; salc ; retf
0x000000000042e3d5 : xchg eax, edi ; retf
0x00000000004a22bd : xchg eax, edi ; retf -0x1eae
0x0000000000411be5 : xchg eax, edi ; retf -1
0x0000000000433250 : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004a35fb : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a1a58 : xchg eax, edi ; xchg eax, esp ; ret
0x00000000004af9fd : xchg eax, edx ; add byte ptr [rax], al ; retf
0x00000000004a331d : xchg eax, edx ; jae 0x4a32fa ; push rsi ; pop rdx ; je 0x4a32ef ; ret 0xacfc
0x00000000004a3f86 : xchg eax, edx ; mov esi, dr1 ; jrcxz 0x4a3f70 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004a195c : xchg eax, edx ; pop rbx ; retf
0x0000000000433253 : xchg eax, edx ; ret 0xd029
0x00000000004a140f : xchg eax, edx ; ret 0xf869
0x000000000043865f : xchg eax, edx ; retf
0x00000000004aeb8c : xchg eax, edx ; stosb byte ptr [rdi], al ; cli ; jmp qword ptr [rdx]
0x0000000000416ec7 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000449358 : xchg eax, edx ; test al, 0x49 ; add byte ptr [rax + 0xf], cl ; retf 0xf4c
0x00000000004114b5 : xchg eax, esi ; add al, bpl ; ret
0x00000000004220d0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000427917 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004a3708 : xchg eax, esi ; jnp 0x4a3757 ; retf -0x6620
0x000000000042218d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048a754 : xchg eax, esi ; mov cl, bh ; jmp qword ptr [rsi]
0x00000000004220eb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004605ce : xchg eax, esi ; ret 0x394c
0x000000000040e52c : xchg eax, esi ; ret 0x8348
0x00000000004a3cac : xchg eax, esi ; ret 0xcd11
0x000000000042213c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048a949 : xchg eax, esi ; stc ; jmp rax
0x0000000000462b63 : xchg eax, esi ; sub byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000048a744 : xchg eax, esi ; xchg cl, bh ; call qword ptr [rsi]
0x000000000048a74c : xchg eax, esi ; xchg ecx, edi ; call qword ptr [rsi]
0x000000000040fcb5 : xchg eax, esp ; add al, bpl ; ret
0x0000000000431cd8 : xchg eax, esp ; add byte ptr cs:[rax], al ; ret
0x0000000000438ce6 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004395de : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000045c644 : xchg eax, esp ; jno 0x45c6b9 ; add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x0000000000478ea9 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a3ebf : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a3e50 ; ret 0x48f
0x0000000000410734 : xchg eax, esp ; ret
0x000000000040fd64 : xchg eax, esp ; ret 0x1589
0x000000000045d6db : xchg eax, esp ; ret 0x2b3c
0x0000000000405407 : xchg eax, esp ; ret 0x2ce9
0x000000000047101a : xchg eax, esp ; ret 0x48b
0x0000000000463bca : xchg eax, esp ; ret 0x5385
0x000000000047e33e : xchg eax, esp ; ret 0x543a
0x0000000000462db4 : xchg eax, esp ; ret 0x8349
0x000000000046e83f : xchg eax, esp ; ret 0x850f
0x0000000000456520 : xchg eax, esp ; ret 0x8941
0x000000000046e99b : xchg eax, esp ; ret 0x8b42
0x0000000000474e4a : xchg eax, esp ; ret 0x950f
0x0000000000410125 : xchg eax, esp ; ret 0xb4e9
0x00000000004023d0 : xchg eax, esp ; ret 0xb60f
0x0000000000401342 : xchg eax, esp ; ret 0xc031
0x0000000000441610 : xchg eax, esp ; ret 0xd284
0x00000000004748de : xchg eax, esp ; ret 0xdaf7
0x000000000046020f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000047dcc4 : xchg eax, esp ; ror byte ptr [rcx + rbp - 0x31], 0x29 ; ret
0x00000000004b0dac : xchg eax, esp ; test al, 0 ; add byte ptr [rax], dl ; ja 0x4b0db5 ; call rsi
0x00000000004af6ac : xchg eax, esp ; xchg eax, ecx ; add byte ptr [rax], al ; retf -6
0x00000000004a18e3 : xchg eax, esp ; xlatb ; retf -0x5e15
0x000000000044a0c6 : xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000456a99 : xchg ecx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048a749 : xchg ecx, edi ; call qword ptr [rsi + 0x16fff987]
0x000000000048a74d : xchg ecx, edi ; call qword ptr [rsi]
0x000000000048a7cd : xchg ecx, edi ; jmp rax
0x00000000004aa4dd : xchg esi, esi ; jmp qword ptr [rdx]
0x00000000004a3ad6 : xchg esp, eax ; jb 0x4a3b34 ; call 0x4c146499
0x00000000004114b4 : xchg rax, rsi ; add al, bpl ; ret
0x00000000004986c9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042342c : xlatb ; add r9, r11 ; jmp r9
0x0000000000414284 : xlatb ; je 0x414295 ; pop rbx ; ret
0x00000000004a2483 : xlatb ; jo 0x4a24ff ; mov ebp, 0xfb67d10d ; ret
0x000000000040e3ea : xlatb ; mov byte ptr [rax + rsi], dil ; ret
0x0000000000440c02 : xlatb ; mov byte ptr [rsi], al ; jne 0x440be8 ; mov rax, rsi ; ret
0x0000000000431172 : xlatb ; mov eax, r8d ; syscall
0x0000000000431183 : xlatb ; mov eax, r9d ; syscall
0x00000000004a1890 : xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000414c09 : xlatb ; ret
0x00000000004170df : xlatb ; ret 0x4166
0x00000000004a3926 : xlatb ; ret 0x4e27
0x000000000045b7b7 : xlatb ; ret 0x94c
0x000000000041957f : xlatb ; ret 0xc085
0x0000000000414c00 : xlatb ; ret 0xc148
0x0000000000414c9d : xlatb ; retf
0x0000000000414e70 : xlatb ; retf -0x152d
0x00000000004a2812 : xlatb ; retf -0x2081
0x000000000045b894 : xlatb ; retf -0x3eb8
0x00000000004a18e4 : xlatb ; retf -0x5e15
0x0000000000420561 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000042e8e6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004160d6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000415f96 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000415e56 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000415d16 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000415bd6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000415a96 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000415956 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000415816 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004156d6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000415596 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000415456 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000415316 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000004151d6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000415096 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000414f56 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000042e8e2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000045b755 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000045b766 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000048adb5 : xlatb ; stc ; call rax
0x000000000048abf9 : xlatb ; stc ; jmp qword ptr [rax + 0x20fff9d6]
0x000000000048ad35 : xlatb ; stc ; jmp rsp
0x00000000004a63b9 : xlatb ; std ; jmp rbx
0x00000000004a3f85 : xlatb ; xchg eax, edx ; mov esi, dr1 ; jrcxz 0x4a3f71 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004b2810 : xor al, 0 ; add byte ptr [rax], al ; cld ; ret 0
0x00000000004b30b8 : xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000004a140a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000412a84 : xor al, 0x24 ; jmp rax
0x000000000047e414 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000419dfa : xor al, 0x42 ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000004a34a6 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x00000000004ae24c : xor al, 0x7d ; add byte ptr [rax], al ; mov al, 0xa2 ; stc ; call qword ptr [rbx]
0x00000000004a25ea : xor al, 0xd8 ; ret
0x0000000000432661 : xor al, byte ptr [rcx + 0xf] ; lahf ; ret 0x8545
0x000000000045cc47 : xor al, ch ; ret
0x000000000048a551 : xor bh, cl ; call qword ptr [rax]
0x000000000048af55 : xor bh, dl ; jmp qword ptr [rax]
0x000000000048abf8 : xor bh, dl ; stc ; jmp qword ptr [rax + 0x20fff9d6]
0x00000000004197dc : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000040e3ee : xor bl, dh ; ret
0x000000000041969d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000419f15 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1f8b
0x0000000000409ae0 : xor byte ptr [rax + 0x29], cl ; ret
0x0000000000486cd4 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000414c2f : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000414b11 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000048a9a4 : xor byte ptr [rax - 0x5e7f0007], ah ; stc ; call rax
0x0000000000416fdf : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000045cc7d : xor byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000485424 : xor byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000419f16 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1f8b
0x0000000000406bf3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000430cbc : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045a53e : xor byte ptr [rax], al ; je 0x45a54d ; pop rbx ; ret
0x00000000004ad830 : xor byte ptr [rax], bl ; stc ; call qword ptr [rcx]
0x0000000000453b27 : xor byte ptr [rbp + 0x31], al ; shr cl, 0xae ; ret 0xffff
0x000000000042e3d1 : xor byte ptr [rbp + rcx*4 + 0x1d], cl ; xchg eax, edi ; retf
0x000000000048681b : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004313b3 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004aabef : xor byte ptr [rbx + 0xade0206], al ; ret
0x000000000041a34b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000040ccfe : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000048a8bc : xor byte ptr [rbx - 0x52ef0007], ch ; stc ; jmp rax
0x00000000004a9714 : xor byte ptr [rbx - 0xa], cl ; jmp qword ptr [rdx]
0x0000000000404d55 : xor byte ptr [rbx], ch ; add byte ptr [rcx - 0x77], cl ; ret 0x75e9
0x000000000045cb46 : xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041406c : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048a950 : xor byte ptr [rcx - 0x657f0007], bl ; stc ; call rax
0x000000000045c5f2 : xor byte ptr [rcx - 0x75], cl ; cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004a18ee : xor byte ptr [rcx], ah ; retf
0x000000000048a548 : xor byte ptr [rdi], ch ; stc ; call rax
0x00000000004649c1 : xor byte ptr [rdx + rbp + 0x31], dh ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046d46b : xor byte ptr [rdx + rsi*8 - 0x17], dh ; retf
0x00000000004a6e1a : xor byte ptr [rdx], al ; retf
0x0000000000421e7f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045b71c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041969e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004a35fe : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004abe90 : xor byte ptr [rsi - 8], ah ; call qword ptr [rdi]
0x00000000004a18df : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4a188f
0x000000000046b07b : xor ch, dl ; add byte ptr [r9], sil ; shr al, 0x8a ; retf
0x000000000048a54d : xor cl, bh ; push qword ptr [rax + 0x32] ; stc ; call qword ptr [rax]
0x000000000044fe59 : xor cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x000000000047d9f6 : xor cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000439eba : xor cl, byte ptr [rbp + 0x39] ; ret 0x3672
0x000000000040fd62 : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x000000000048ade4 : xor cl, dl ; stc ; jmp qword ptr [rax + 0x10fff9d0]
0x0000000000431ba9 : xor dh, bl ; ret
0x00000000004a8d41 : xor dh, dh ; jmp rbx
0x000000000048af1d : xor dl, bh ; call rax
0x000000000048af29 : xor dl, bh ; inc dword ptr [rax] ; xor edx, edi ; call qword ptr [rax]
0x000000000048af19 : xor dl, bh ; inc eax ; xor dl, bh ; call rax
0x000000000048aef1 : xor dl, bh ; jmp qword ptr [rax]
0x000000000048af21 : xor dl, bh ; jmp rax
0x00000000004688a8 : xor dword ptr [rax + 0x39], ecx ; ret
0x0000000000412334 : xor dword ptr [rax + rax], esp ; add byte ptr [rax + 0x6b4820], bh ; ret
0x00000000004a2896 : xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x0000000000443d0b : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041268a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000444bf1 : xor dword ptr [rbp + 0x29], eax ; retf 0x3945
0x0000000000403f6b : xor dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000431b7b : xor eax, 0x2f ; add byte ptr [rax], al ; ret
0x000000000048af71 : xor eax, 0x35c0fffa ; cli ; call rax
0x000000000048af75 : xor eax, 0x35d0fffa ; cli ; jmp rax
0x000000000048af81 : xor eax, 0x3600fffa ; cli ; jmp qword ptr [rax]
0x0000000000460130 : xor eax, 0x70c48348 ; pop rbx ; ret
0x000000000046b912 : xor eax, 0x8c48348 ; ret
0x0000000000406bf0 : xor eax, dword ptr [0x30] ; call rax
0x00000000004850ea : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000413cde : xor eax, eax ; add rsp, 0x18 ; ret
0x000000000046b248 : xor eax, eax ; add rsp, 0x28 ; ret
0x00000000004124b3 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413050 : xor eax, eax ; add rsp, 8 ; ret
0x000000000045aff7 : xor eax, eax ; call r12
0x0000000000468479 : xor eax, eax ; cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x0000000000433487 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004602ee : xor eax, eax ; cmp rsi, rdx ; ja 0x460308 ; ret
0x0000000000453b29 : xor eax, eax ; jmp 0x44fde2
0x000000000045fa7f : xor eax, eax ; jmp 0x45fa48
0x0000000000483373 : xor eax, eax ; jmp 0x482e1e
0x0000000000433840 : xor eax, eax ; leave ; ret
0x000000000040d4e5 : xor eax, eax ; mov qword ptr [rdx + 8], rcx ; ret
0x000000000045cdac : xor eax, eax ; nop ; ret
0x000000000040b302 : xor eax, eax ; pop r12 ; ret
0x00000000004337bf : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000408184 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000406e0d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004118b2 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040a96c : xor eax, eax ; pop rbx ; ret
0x000000000045f99e : xor eax, eax ; pop rdx ; ret
0x00000000004016e0 : xor eax, eax ; ret
0x0000000000421d9e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000430c18 : xor eax, eax ; test dh, 0xf0 ; je 0x430beb ; movzx eax, dl ; pop rbx ; ret
0x000000000044e8c8 : xor ebp, ebp ; jmp 0x44ab4a
0x00000000004a57ad : xor ebp, edi ; jmp rax
0x00000000004866c0 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e1fc : xor ecx, ecx ; jmp 0x44acbc
0x000000000040e3e9 : xor edi, edx ; mov byte ptr [rax + rsi], dil ; ret
0x000000000048af2d : xor edx, edi ; call qword ptr [rax]
0x000000000048af51 : xor edx, edi ; inc dword ptr [rax] ; xor bh, dl ; jmp qword ptr [rax]
0x000000000048af49 : xor edx, edi ; inc eax ; xor edx, edi ; jmp rax
0x000000000048af31 : xor edx, edi ; jmp qword ptr [rax]
0x000000000048af4d : xor edx, edi ; jmp rax
0x0000000000435710 : xor edx, edx ; add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000004349ac : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x43499c
0x0000000000437e4e : xor edx, edx ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000040c9f9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000481a23 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000474b7c : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000467e74 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; ret
0x0000000000465a6a : xor esi, dword ptr [rbp + 0xe] ; mov dword ptr [rbp - 0x98], edx ; call rax
0x00000000004035f9 : xor esi, esi ; call rax
0x00000000004a8dd9 : xor esi, esi ; call rdi
0x00000000004017f5 : xor esi, esi ; mov edi, 1 ; call rax
0x0000000000474dd0 : xor esi, esi ; mov edi, dword ptr [rip + 0x24252c] ; jmp rax
0x000000000040dc06 : xor esi, esi ; sub rdx, rbp ; call 0x419e57
0x0000000000471f5f : xor esp, esp ; lea r15, qword ptr [rsp + 0x50] ; jmp 0x471f3b
0x0000000000471f5e : xor r12d, r12d ; lea r15, qword ptr [rsp + 0x50] ; jmp 0x471f3c
0x000000000044e8c7 : xor r13d, r13d ; jmp 0x44ab4b
0x000000000045aff6 : xor r8d, r8d ; call r12
0x0000000000453b28 : xor r8d, r8d ; jmp 0x44fde3
0x0000000000406bef : xor rax, qword ptr [0x30] ; call rax
0x0000000000406bee : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000041971f : xor rax, rax ; ret
0x0000000000437e4d : xor rdx, rdx ; mov dword ptr [rsp + 8], eax ; call r14

Unique gadgets found: 10550
